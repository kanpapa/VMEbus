00F00BB4 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 2023/09/09 13:21:16

00000000                             1  ; FILE NAME zbug_dvme_cpu2.x68
00000000                             2  ; zBug V1.0.1 for DVME CPU2 by @kanpapa
00000000                             3  ; The source code was assembled using Easy68K 
00000000                             4  ; V1.0 1st release
00000000                             5  ; V1.0.1 Added function to Load Motorola S-record S1 format
00000000                             6  
00000000                             7  ;
00000000                             8  ; Original FILE NAME U68K.ASM 
00000000                             9  ; 
00000000                            10  ; zBug V1.0 is a small monitor program for 68000-Based Single Board Computer
00000000                            11  ; The source code was assembled using C32 CROSS ASSEMBLER VERSION 3.0
00000000                            12  ;
00000000                            13  
00000000                            14  ; Copyright (c) 2002 WICHIT SIRICHOTE email kswichit@kmitl.ac.th
00000000                            15  ; 
00000000                            16  ;
00000000                            17  ; This program is free software; you can redistribute it and/or modify
00000000                            18  ; it under the terms of the GNU General Public License as published by
00000000                            19  ; the Free Software Foundation; either version 2 of the License, or
00000000                            20  ; (at your option) any later version.
00000000                            21  ;
00000000                            22  ; This program is distributed in the hope that it will be useful,
00000000                            23  ; but WITHOUT ANY WARRANTY; without even the implied warranty of
00000000                            24  ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
00000000                            25  ; GNU General Public License for more details.
00000000                            26  ;
00000000                            27  ;
00000000                            28  ;
00000000                            29  
00000000                            30  ;   CPU     "68000.TBL"      ; CPU TABLE
00000000                            31  ;   HOF     "BIN16"          ; HEX OUTPUT FORMAT
00000000                            32  ;   HOF     "MOT16"          ; OUTPUT MOTOROLA S-RECORD
00000000                            33  
00000000                            34  ;
00000000                            35  ; DVME CPU2 MEMORY MAP
00000000                            36  ;
00000000                            37  ; 000000-00FFFF RAM1 256K
00000000                            38  ; 010000-01FFFF RAM2 256K
00000000                            39  ; 020000-EFFFFF -
00000000                            40  ; F00000-F1FFFF ROM1 512K
00000000                            41  ; F20000-F3FFFF ROM2 512K
00000000                            42  ; F40000-FE7FFF -
00000000                            43  ; FE8001        ACIA1 Control Register (Master Reset)
00000000                            44  ; FE8003        ACIA1 Data Register
00000000                            45  ; FE8005        ACIA2 Control Register
00000000                            46  ; FE8007        ACIA2 Data Register
00000000                            47  ; FE8011-FE801F PIM
00000000                            48  ; FE8021        Module Control Register (MCR).
00000000                            49  ; FE8031        Module Status Register (MSR). Read only
00000000                            50  ; FE805B
00000000                            51  ; FE805D
00000000                            52  
00000000                            53  ; Use EASy68k Simulator
00000000  =00000000                 54  EASY68K_SIM EQU 0       ; set 0 to use ACIA1
00000000                            55  ;EASY68K_SIM    EQU 1       ; set 1 to use EASy68K Sim68K I/O  
00000000                            56  
00000000  =00000000                 57  BIT_ESC      EQU 0              ; ESC BIT POSITION #0
00000000                            58  
00000000                            59  ;DCODE68K  EQU $400              ; DISASSEMBLER START ADDRESS (option)
00000000                            60  
00000000  =00000000                 61  RAM      EQU $000000            ; RAM START ADDRESS
00000000                            62  
00000000                            63  ;
00000000                            64  ; MONITOR MEMORY MAP
00000000                            65  ; $000000-$0003FF M68000 Exception Vector Table
00000000                            66  ; $00E000         SUPER_STACK/RAMBASE
00000000                            67  ; $00FFFF         RAM END
00000000                            68  ;
00000000                            69  ; $F00000         RESET Vector
00000000                            70  ; $F00008         MAIN(Monitor start)
00000000                            71  ;
00000000                            72  
00000000                            73  ;DIN      EQU $300001 
00000000                            74  ;DOUT     EQU $700001       
00000000                            75  
00000000  =00FE8001                 76  ACIAC    EQU $FE8001
00000000  =00FE8003                 77  ACIAD    EQU ACIAC+2
00000000                            78  
00000000  =00FE8005                 79  ACIA2C    EQU $FE8005
00000000  =00FE8007                 80  ACIA2D    EQU ACIA2C+2
00000000                            81  
00000000  =00FE8021                 82  MCR     equ     $0fe8021    ; Module Control Register (MCR).
00000000                            83  
00000000                            84  ;PIT      EQU $700001
00000000                            85  
00000000  =00002000                 86  INT_ON   EQU  $2000    ; BOTH, SET SUPERVISOR MODE, S=1
00000000  =00002700                 87  INT_OFF  EQU  $2700
00000000                            88  
00000000  =00000000                 89  RDRF    EQU 0           ; ACIAC Receive Data Register Full
00000000  =00000001                 90  TDRE    EQU 1           ; ACIAC Transmit Data Register Empty
00000000                            91  
00000000  =00000005                 92  SUPERVISOR_BIT EQU 5
00000000                            93  
00000000  =00000007                 94  TRACE_BIT EQU 7
00000000                            95  
00000000  =0000000D                 96  CR      EQU 13
00000000  =0000000A                 97  LF      EQU 10
00000000  =00000020                 98  SP      EQU 32
00000000  =00000008                 99  BS      EQU 8
00000000  =0000001E                100  RS      EQU $1E
00000000  =0000001B                101  ESC     EQU $1B
00000000                           102  
00000000  =0000E000                103  SUPER_STACK   EQU $00E000   ; SUPER STACK TOP Address
00000000  =0000E000                104  RAMBASE_INIT  EQU $00E000
00000000                           105  
00000000                           106  ;
00000000                           107  ; EXCEPTION VECTOR address
00000000                           108  ;
00000000  =00000080                109  TRAP0   EQU RAM+$80
00000000  =00000084                110  TRAP1   EQU TRAP0+4
00000000  =00000088                111  TRAP2   EQU TRAP1+4
00000000  =0000008C                112  TRAP3   EQU TRAP2+4
00000000  =00000090                113  TRAP4   EQU TRAP3+4
00000000  =00000094                114  TRAP5   EQU TRAP4+4
00000000  =00000098                115  TRAP6   EQU TRAP5+4
00000000  =0000009C                116  TRAP7   EQU TRAP6+4
00000000  =000000A0                117  TRAP8   EQU TRAP7+4
00000000  =000000A4                118  TRAP9   EQU TRAP8+4
00000000  =000000A8                119  TRAP10  EQU TRAP9+4
00000000  =000000AC                120  TRAP11  EQU TRAP10+4
00000000  =000000B0                121  TRAP12  EQU TRAP11+4
00000000  =000000B4                122  TRAP13  EQU TRAP12+4
00000000  =000000B8                123  TRAP14  EQU TRAP13+4
00000000  =000000BC                124  TRAP15  EQU TRAP14+4
00000000                           125  
00000000  =00000008                126  BUS_ERROR EQU RAM+8
00000000  =0000000C                127  ADDRESS_ERROR EQU RAM+$C
00000000  =00000010                128  ILLEGAL_INSTRUCTION EQU RAM+$10
00000000                           129  
000000C0                           130     ORG $C0
000000C0                           131  ;RAMBASE  DC.L   $130000   ; RAM BASE ADDRESS
000000C0                           132  RAMBASE  DS.L   1          ; RAM BASE ADDRESS
000000C4                           133  
000000C4                           134  ;
000000C4                           135  ; ROM START
000000C4                           136  ;
00F00000                           137     ORG $F00000
00F00000                           138     ; Reset start vector
00F00000= 0000E000                 139     DC.L SUPER_STACK        ; TOP OF SUPERVISOR STACK $130000
00F00004= 00F00BB4                 140     DC.L MAIN               ; MONITOR START
00F00008                           141  
00F00008                           142  ;   DC.L BUS_ERROR
00F00008                           143  ;   DC.L ADDRESS_ERROR
00F00008                           144  ;   DC.L ILLEGAL_INSTRUCTION
00F00008                           145  
00F00008                           146  ;   ORG $24
00F00008                           147  ;   DC.L SERVICE_TRAP0      ; TRACE THE SAME AS TRAP #0 
00F00008                           148  
00F00008                           149  ;   ORG $80
00F00008                           150  ;   DC.L SERVICE_TRAP0      ; TRAP #0
00F00008                           151  
00F00008                           152  ;   ORG $C0
00F00008                           153  ;RAMBASE  DC.L   $130000     ; RAM BASE ADDRESS
00F00008                           154  
00F00008                           155  
00F00008                           156  ; RESERVED SPACE FOR FILE DECODE68K DISASSEMBLER
00F00008                           157  ; RAM+$400 TO RAM+10E0
00F00008                           158  ; THE DISASSEMBLER MUST BE LOADED BEFORE USING 
00F00008                           159  
00F00008                           160  ;   ORG $400
00F00008                           161  ;  INCL "DIS.IMG"
00F00008                           162  ;  INCLUDE "dis_mic68k.x68"
00F00008                           163  
00F00008                           164  ;-------------------------------------------------------------------------
00F00008                           165  ; File DCODE68K  68K ONE LINE DISASSEMBLER                        07/28/82
00F00008                           166  
00F00008                           167  ;        CALLING SEQUENCE:
00F00008                           168  ;   D0,D1,D2 = CODE TO BE DISASSEMBLED
00F00008                           169  ;   A4 = VALUE OF PROGRAM COUNTER FOR THE CODE
00F00008                           170  ;   A5 = POINTER TO STORE DATA (BUFSIZE = 80 ASSUMED)
00F00008                           171  ;        JSR       DCODE68K
00F00008                           172  
00F00008                           173  ;        RETURN:
00F00008                           174  ;   A4 = VALUE OF PROGRAM COUNTER FOR NEXT INSTRUCTION
00F00008                           175  ;   A5 = POINTER TO LINE AS DISASSEMBLED
00F00008                           176  ;   A6 = POINTER TO END OF LINE
00F00008                           177  ;
00F00008                           178  ; 01234567890123456789012345678901234567890123456789
00F00008                           179  ; AAAAAA FDATA.DDDDDDDDDDDDDD FOC.... FOP.....
00F00008                           180  
00F00008                           181  ;                ORG $400
00F00008                           182  
00F00008  =0000000A                183  FDATA   EQU    10             ;OFFSET TO DATA
00F00008  =0000001F                184  FOC     EQU    31             ;OFFSET TO OP-CODE (NO LABEL FIELD)
00F00008  =00000027                185  FOP     EQU    39             ;OFFSET TO OPERAND (NO LABEL FIELD)
00F00008                           186  
00F00008  =00000020                187  BLANK    EQU   $20
00F00008  =00000050                188  BUFSIZE  EQU   80
00F00008  =00000010                189  LOCVARSZ EQU   16
00F00008  =00000004                190  EOT      EQU   $04
00F00008                           191  
00F00008                           192  ; CAUSES ORGIN MODULO 4
00F00008                           193  LONG     MACRO
00F00008                           194           DS      0
00F00008                           195           DS.B    (*-X)&2
00F00008                           196           ENDM
00F00008                           197  
00F00008                           198  
00F00008                           199  X        DS      0              BASE ADDRESS THIS MODULE
00F00008                           200m          LONG
00F00008                           201  
00F00008                           202  *  MOVEM REGISTERS TO EA
00F00008                           203  *
00F00008                           204  *        01001D001S......
00F00008                           205  *        ..........XXXXXX       EFFECTIVE ADDRESS
00F00008                           206  *        .........0......       WORD
00F00008                           207  *        .........1......       LONG
00F00008                           208  *        .....0..........       REGISTER TO MEMORY
00F00008                           209  *        .....1..........       MEMORY TO REGISTER
00F00008                           210  *
00F00008                           211  
00F00008                           212  IMOVEMFR DS      0
00F00008  6100 071E                213           BSR     MOVEMS         SIZE
00F0000C                           214  
00F0000C  7C38                     215           MOVEQ   #$0038,D6
00F0000E  CC54                     216           AND.W   (A4),D6
00F00010  0C46 0020                217           CMPI.W  #$0020,D6
00F00014  6706                     218           BEQ.S   IM7788         PREDECREMENT MODE
00F00016                           219  
00F00016  7C01                     220           MOVEQ   #1,D6          D6 = INCREMENTER (BIT POSITION)
00F00018  7200                     221           MOVEQ   #0,D1          D1 = BIT POSITION
00F0001A  6004                     222           BRA.S   IM7799
00F0001C                           223  
00F0001C  7CFF                     224  IM7788   MOVEQ   #-1,D6         D6 = DECREMENTER (BIT POSITION)
00F0001E  720F                     225           MOVEQ   #15,D1         D1 = BIT POSITION
00F00020  6100 071A                226  IM7799   BSR     MOVEMR         BUILD MASK WORD
00F00024                           227  
00F00024  1CFC 002C                228           MOVE.B  #',',(A6)+     STORE COMMA
00F00028                           229  
00F00028  5483                     230           ADDQ.L  #2,D3
00F0002A  3814                     231           MOVE.W  (A4),D4
00F0002C  3E3C 01F4                232           MOVE.W  #$1F4,D7       CONTROL + PREDECREMENT
00F00030  6100 0534                233           BSR     EEA
00F00034  601C                     234           BRA.S   CS16           COMMON
00F00036                           235  
00F00036                           236m          LONG
00F00038                           237  * MOVEM  EA  TO REGISTERS
00F00038                           238  *
00F00038  6100 06EE                239  IMOVEMTR BSR     MOVEMS         SIZE
00F0003C  5483                     240           ADDQ.L  #2,D3
00F0003E  3E3C 07EC                241           MOVE.W  #$7EC,D7       CONTROL + POSTINCREMENT
00F00042  6100 0522                242           BSR     EEA
00F00046                           243  
00F00046  1CFC 002C                244           MOVE.B  #',',(A6)+     STORE COMMA
00F0004A                           245  
00F0004A  7C01                     246           MOVEQ   #1,D6          D6 = BIT POSITION INCREMENTER
00F0004C  7200                     247           MOVEQ   #0,D1          D1 = BIT POSITION
00F0004E  6100 06EC                248           BSR     MOVEMR
00F00052                           249  
00F00052  606C                     250  CS16     BRA.S   CS15           COMMON
00F00054                           251  
00F00054                           252  
00F00054                           253m          LONG
00F00054                           254  ISTOP    DS      0
00F00054  302C 0002                255           MOVE.W  2(A4),D0
00F00058  1CFC 0023                256           MOVE.B  #'#',(A6)+     IMMEDIATE
00F0005C  1CFC 0024                257           MOVE.B  #'$',(A6)+     HEX
00F00060  6100 11C4                258           BSR     PNT4HX         VALUE
00F00064  6000 07EE                259           BRA     COMMON4
00F00068                           260  
00F00068                           261m          LONG
00F00068                           262  IMMED    DS      0              ADD  AND  CMP #  EOR  OR  SUB
00F00068  6100 0472                263           BSR     FORMSIZE
00F0006C  5483                     264           ADDQ.L  #2,D3          SIZE = 4
00F0006E  1CFC 0023                265           MOVE.B  #'#',(A6)+     IMMEDIATE
00F00072                           266  
00F00072  4280                     267           CLR.L   D0
00F00074  302C 0002                268           MOVE.W  2(A4),D0       D0 = EXTENSION WORD
00F00078  3214                     269           MOVE.W  (A4),D1
00F0007A  EC49                     270           LSR.W   #6,D1
00F0007C  0241 0003                271           ANDI.W  #3,D1
00F00080  6746                     272           BEQ.S   IMMED65        .BYTE
00F00082                           273  
00F00082  0C01 0001                274           CMPI.B  #1,D1
00F00086  6750                     275           BEQ.S   IMMED75        .WORD
00F00088                           276  
00F00088  5483                     277           ADDQ.L  #2,D3          .LONG    SIZE = 6
00F0008A  202C 0002                278           MOVE.L  2(A4),D0       D0 = LONG EXTENSION WORD
00F0008E                           279  
00F0008E  6100 1120                280  IMMED45  BSR     HEX2DEC        DECIMAL
00F00092                           281  
00F00092  1CC5                     282           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F00094                           283  
00F00094  3014                     284           MOVE    (A4),D0
00F00096  0240 003F                285           ANDI.W  #$003F,D0
00F0009A  0C40 003C                286           CMPI.W  #$003C,D0      DESTINATION ADDRESS MODE 111100  "SR"
00F0009E  6622                     287           BNE.S   IMMED55        NOT FOUND
00F000A0                           288  
00F000A0  3014                     289           MOVE.W  (A4),D0        "SR"  ILLEGAL FOR
00F000A2  0240 4000                290           ANDI.W  #$4000,D0      ADDI   SUBI  CMPI
00F000A6  6600 07D6                291           BNE     FERROR         0600   0400  0C00
00F000AA                           292  
00F000AA  3214                     293           MOVE.W  (A4),D1
00F000AC  0241 00C0                294           ANDI.W  #$00C0,D1
00F000B0  0C41 0080                295           CMPI.W  #$0080,D1
00F000B4  6700 07C8                296           BEQ     FERROR         .LONG NOT ALLOWED
00F000B8                           297  
00F000B8  1CFC 0053                298           MOVE.B  #'S',(A6)+     #,SR FOR ANDI, EORI, ORI
00F000BC  1CFC 0052                299           MOVE.B  #'R',(A6)+
00F000C0  603E                     300  CS15     BRA.S   CS14           COMMON
00F000C2                           301  
00F000C2  6100 04A2                302  IMMED55  BSR     EEA
00F000C6  6038                     303           BRA.S   CS14           COMMON
00F000C8                           304  
00F000C8  2200                     305  IMMED65  MOVE.L  D0,D1          D1 = XXXXXXXX........
00F000CA  E049                     306           LSR.W   #8,D1          D1 = 00000000XXXXXXXX
00F000CC  670A                     307           BEQ.S   IMMED75
00F000CE  2200                     308           MOVE.L  D0,D1
00F000D0  EE41                     309           ASR.W   #7,D1
00F000D2  5241                     310           ADDQ.W  #1,D1          CHECK FOR NEGATIVE
00F000D4  6600 07A8                311           BNE     FERROR
00F000D8                           312  
00F000D8  48C0                     313  IMMED75  EXT.L   D0
00F000DA  60B2                     314           BRA     IMMED45
00F000DC                           315  
00F000DC                           316  *  BIT   5432109876543210
00F000DC                           317  *        ....RRRMMM......       DESTINATION REGISTER MODE
00F000DC                           318  *        ..........MMMRRR       SOURCE MODE REGISTER
00F000DC                           319  *        0001............       .BYTE
00F000DC                           320  *        0011............       .WORD
00F000DC                           321  *        0010............       .LONG
00F000DC                           322  *
00F000DC                           323  * IF BYTE SIZE; DESTINATION ADDRESS DIRECT NOT ALLOWED
00F000DC                           324m          LONG
00F000DC                           325  IMOVE    DS      0
00F000DC  6000 03A2                326           BRA     IMOVEA1
00F000E0                           327  
00F000E0                           328m          LONG
00F000E0                           329  ILINK    DS      0
00F000E0  615E                     330           BSR.S   FORMREGA
00F000E2                           331  
00F000E2  1CC5                     332           MOVE.B  D5,(A6)+       COMMA SERARATOR
00F000E4                           333  
00F000E4  1CFC 0023                334           MOVE.B  #'#',(A6)+
00F000E8  302C 0002                335           MOVE.W  2(A4),D0
00F000EC  48C0                     336           EXT.L   D0
00F000EE  6100 10C0                337           BSR     HEX2DEC        DECIMAL DISPLACEMENT
00F000F2  6000 0760                338           BRA     COMMON4
00F000F6                           339  
00F000F6                           340m          LONG
00F000F8                           341  FORM1    DS      0              CLR  NEG  NEGX  NOT TST
00F000F8  6100 03E2                342           BSR.L   FORMSIZE
00F000FC                           343  
00F000FC                           344  
00F000FC                           345  *                               NBCD TAS
00F000FC  6100 0468                346  FORM1A   BSR     EEA            DATA ALTERABLE ONLY
00F00100  606E                     347  CS14     BRA.S   CS13           COMMON
00F00102                           348  
00F00102                           349m          LONG
00F00104                           350  FORM3    DS      0              EXT  SWAP
00F00104  614A                     351           BSR.S   FORMREGD
00F00106  6068                     352           BRA.S   CS13           COMMON
00F00108                           353  
00F00108                           354m          LONG
00F00108                           355  FORM4    DS      0              TRAP
00F00108  1CFC 0023                356           MOVE.B  #'#',(A6)+
00F0010C  3014                     357           MOVE.W  (A4),D0
00F0010E  0280 0000000F            358           ANDI.L  #$0F,D0
00F00114  6100 109A                359           BSR     HEX2DEC        DECIMAL
00F00118  6056                     360           BRA.S   CS13           COMMON
00F0011A                           361  
00F0011A                           362m          LONG
00F0011C                           363  FORM5    DS      0              UNLNK
00F0011C  6122                     364           BSR.S   FORMREGA
00F0011E  6050                     365           BRA.S   CS13           COMMON
00F00120                           366  
00F00120                           367  *  BIT   5432109876543210
00F00120                           368  *        ....RRR.........       ADDRESS REGISTER
00F00120                           369  *        ..........XXXXXX       EFFECTIVE ADDRESS
00F00120                           370  *
00F00120                           371m          LONG
00F00120                           372  FORM6A   DS      0              LEA
00F00120  3E3C 07E4                373           MOVE.W  #$7E4,D7       CONTROL ADDRESSING
00F00124  6154                     374           BSR.S   EEA10
00F00126                           375  
00F00126  1CC5                     376           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F00128                           377  
00F00128  3814                     378           MOVE.W  (A4),D4
00F0012A  EF5C                     379           ROL.W   #7,D4
00F0012C  6112                     380           BSR.S   FORMREGA
00F0012E  6040                     381           BRA.S   CS13           COMMON
00F00130                           382  
00F00130                           383  *  BIT   5432109876543210
00F00130                           384  *        ....DDD.........       DATA REGISTER
00F00130                           385  *        ..........XXXXXX       EFFECTIVE ADDRESS
00F00130                           386  *
00F00130                           387m          LONG
00F00130                           388  FORM6D   DS      0              CHK  DIVS  DIVU  MULS  MULU
00F00130  3E3C 0FFD                389           MOVE.W  #$FFD,D7       DATA ADDRESSING
00F00134  6144                     390           BSR.S   EEA10
00F00136                           391  
00F00136  1CC5                     392           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F00138                           393  
00F00138  3814                     394           MOVE.W  (A4),D4
00F0013A  EF5C                     395           ROL.W   #7,D4
00F0013C  6112                     396           BSR.S   FORMREGD
00F0013E  6030                     397           BRA.S   CS13           COMMON
00F00140                           398  
00F00140  1CFC 0041                399  FORMREGA MOVE.B  #'A',(A6)+     FORMAT A@
00F00144  0204 0007                400  FORMREG5 ANDI.B  #$07,D4
00F00148  0004 0030                401           ORI.B   #'0',D4
00F0014C  1CC4                     402           MOVE.B  D4,(A6)+
00F0014E  4E75                     403           RTS
00F00150                           404  
00F00150  1CFC 0044                405  FORMREGD MOVE.B  #'D',(A6)+     FORMAT D@
00F00154  60EE                     406           BRA     FORMREG5
00F00156                           407  
00F00156                           408  *  BIT   5432109876543210
00F00156                           409  *        ....DDD......DDD       DATA REGISTERS
00F00156                           410  *
00F00156                           411m          LONG
00F00158                           412  FORM7    DS      0              EXG
00F00158  EF5C                     413           ROL.W   #7,D4
00F0015A  61F4                     414           BSR     FORMREGD
00F0015C                           415  
00F0015C  1CC5                     416           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F0015E                           417  
00F0015E  3814                     418           MOVE.W  (A4),D4
00F00160  61EE                     419           BSR     FORMREGD
00F00162  600C                     420           BRA.S   CS13           COMMON
00F00164                           421  
00F00164                           422  *  BIT   5432109876543210
00F00164                           423  *        ....AAA......AAA       ADDRESS REGISTERS
00F00164                           424  *
00F00164                           425m          LONG
00F00164                           426  FORM8    DS      0              EXG
00F00164  EF5C                     427           ROL.W   #7,D4
00F00166  61D8                     428           BSR     FORMREGA
00F00168                           429  
00F00168  1CFC 002C                430  FORM815  MOVE.B  #',',(A6)+     COMMA SEPARATOR
00F0016C                           431  
00F0016C  3814                     432           MOVE.W  (A4),D4
00F0016E  61D0                     433           BSR     FORMREGA
00F00170  6000 0080                434  CS13     BRA     CS12           COMMON
00F00174                           435  
00F00174                           436  *  BIT   5432109876543210
00F00174                           437  *        ....DDD.........       DATA REGISTER
00F00174                           438  *        .............AAA       ADDRESS REGISTER
00F00174                           439  *
00F00174                           440m          LONG
00F00174                           441  FORM9    DS      0              EXG
00F00174  EF5C                     442           ROL.W   #7,D4
00F00176  61D8                     443           BSR     FORMREGD       DATA REGISTER
00F00178  60EE                     444           BRA     FORM815
00F0017A                           445  
00F0017A  6000 03EA                446  EEA10    BRA     EEA
00F0017E                           447  
00F0017E                           448  *  BIT   5432109876543210
00F0017E                           449  *        ..........AAAAAA         EFFECTIVE ADDRESS
00F0017E                           450  *        .......MMM......         OP-MODE
00F0017E                           451  *        ....RRR.........         D-REGISTER
00F0017E                           452  *        .......011......         WORD  EA,A@
00F0017E                           453  *        .......111......         LONG  EA,A@
00F0017E                           454  *        .......000......         EA,D@ BYTE (ADDRESS REGISTER DIRECT NOT ALLOWED)
00F0017E                           455  *        .......0........         EA,D@
00F0017E                           456  *        .......1........         D@,EA
00F0017E                           457  *        ........00......         BYTE
00F0017E                           458  *        ........01......         WORD
00F0017E                           459  *        ........10......         LONG
00F0017E                           460  *
00F0017E                           461m          LONG
00F00180                           462  *                               ADD <EA>,A@   CMP <EA>,A@   SUB <EA>,A@
00F00180                           463  FORM10EX DS      0              ADD  CMP  SUB
00F00180  3E3C 0FFF                464           MOVE.W  #$FFF,D7       ALL MODES ALLOWED
00F00184  2004                     465           MOVE.L  D4,D0
00F00186  0240 01C0                466           ANDI.W  #$01C0,D0
00F0018A  673A                     467           BEQ.S   FORM103        .......000......
00F0018C  0C40 01C0                468           CMPI.W  #$01C0,D0
00F00190  6710                     469           BEQ.S   FORM10E3       .......111......
00F00192  0C40 00C0                470           CMPI.W  #$00C0,D0
00F00196  661E                     471           BNE.S   FORM10E6
00F00198                           472  
00F00198  1AFC 002E                473           MOVE.B  #'.',(A5)+     .......011......       STORE PERIOD
00F0019C  1AFC 0057                474           MOVE.B  #'W',(A5)+
00F001A0  6008                     475           BRA.S   FORM10E4
00F001A2                           476  
00F001A2  1AFC 002E                477  FORM10E3 MOVE.B  #'.',(A5)+
00F001A6  1AFC 004C                478           MOVE.B  #'L',(A5)+
00F001AA                           479  
00F001AA  61CE                     480  FORM10E4 BSR     EEA10
00F001AC                           481  
00F001AC  1CC5                     482           MOVE.B  D5,(A6)+       STORE COMMA SEPARATOR
00F001AE                           483  
00F001AE  3814                     484           MOVE.W  (A4),D4
00F001B0  EF5C                     485           ROL.W   #7,D4
00F001B2  618C                     486           BSR     FORMREGA       <EA>,A@
00F001B4  603C                     487           BRA.S   CS12           COMMON
00F001B6                           488  
00F001B6  0814 0000                489  FORM10E6 BTST.B  #0,(A4)
00F001BA  6620                     490           BNE.S   FORM105        .......1........    D@,<EA>
00F001BC  600C                     491           BRA.S   FORM104        .......0........    <EA>,D@
00F001BE                           492  
00F001BE                           493  *  BIT   5432109876543210
00F001BE                           494  *        ..........AAAAAA       EFFECTIVE ADDRESS
00F001BE                           495  *        .......MMM......       OP-MODE
00F001BE                           496  *        ....RRR.........       D-REGISTER
00F001BE                           497  *        .......0........       EA,D@
00F001BE                           498  *        .......1........       D@,EA
00F001BE                           499  *        ........00......       BYTE
00F001BE                           500  *        ........01......       WORD
00F001BE                           501  *        ........10......       LONG
00F001BE                           502m          LONG
00F001C0                           503  FORM10   DS      0              AND  EOR  OR
00F001C0  0814 0000                504           BTST.B  #0,(A4)
00F001C4  6616                     505           BNE.S   FORM105
00F001C6                           506  
00F001C6  3E3C 0FFD                507  FORM103  MOVE.W  #$FFD,D7       DATA ADDRESSING
00F001CA  6100 0310                508  FORM104  BSR     FORMSIZE
00F001CE  61AA                     509           BSR     EEA10          <EA>,D@
00F001D0                           510  
00F001D0  1CC5                     511           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F001D2                           512  
00F001D2  1814                     513           MOVE.B  (A4),D4
00F001D4  E20C                     514           LSR.B   #1,D4
00F001D6  6100 FF78                515           BSR     FORMREGD
00F001DA  6016                     516           BRA.S   CS12           COMMON
00F001DC                           517  
00F001DC  6100 02FE                518  FORM105  BSR     FORMSIZE       D@,<EA>
00F001E0  1814                     519           MOVE.B  (A4),D4
00F001E2  E20C                     520           LSR.B   #1,D4
00F001E4  6100 FF6A                521           BSR     FORMREGD
00F001E8                           522  
00F001E8  1CC5                     523           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F001EA                           524  
00F001EA  3814                     525           MOVE.W  (A4),D4
00F001EC  3E3C 01FD                526           MOVE.W  #$1FD,D7       ALTERABLE MEMORY ADDRESSING
00F001F0  6188                     527           BSR     EEA10
00F001F2  6000 0662                528  CS12     BRA     COMMON
00F001F6                           529  
00F001F6                           530m          LONG
00F001F8                           531  *                               PEA     (JMP  JSR)
00F001F8  3E3C 07E4                532  FORM11   MOVE.W  #$7E4,D7       CONTROL ADDERSSING
00F001FC  6100 FF7C                533           BSR     EEA10
00F00200  60F0                     534           BRA     CS12           COMMON
00F00202                           535  
00F00202                           536m          LONG
00F00204                           537  *                               JMP  JSR
00F00204  2004                     538  FORM11SL MOVE.L  D4,D0          LOOK FOR .S  OR  .L
00F00206  0240 003F                539           ANDI.W  #$3F,D0
00F0020A  0C40 0038                540           CMPI.W  #$38,D0
00F0020E  6608                     541           BNE.S   FORM112        NOT .S
00F00210  1AFC 002E                542           MOVE.B  #'.',(A5)+     PERIOD
00F00214  1AFC 0053                543           MOVE.B  #'S',(A5)+     S
00F00218  0C40 0039                544  FORM112  CMPI.W  #$39,D0
00F0021C  6608                     545           BNE.S   FORM114
00F0021E  1AFC 002E                546           MOVE.B  #'.',(A5)+     PERIOD
00F00222  1AFC 004C                547           MOVE.B  #'L',(A5)+     L
00F00226  60D0                     548  FORM114  BRA     FORM11
00F00228                           549  
00F00228                           550  *  BIT   5432109876543210
00F00228                           551  *        ....XXX.....0...       DATA DESTINATION REGISTER
00F00228                           552  *        ....XXX.....1...       ADDRESS REGISTER
00F00228                           553  *        ....XXX.00......       BYTE
00F00228                           554  *        ........01......       WORD
00F00228                           555  *        ........10......       LONG
00F00228                           556  *        ............0...       DATA REGISTER TO DATA REGISTER
00F00228                           557  *        ............1...       MEMORY TO MEMORY
00F00228                           558  *        ............0XXX       DATA SOURCE REGISTER
00F00228                           559  *        ............1XXX       ADDRESS SOURCE REGISTER
00F00228                           560  *
00F00228                           561m          LONG
00F00228                           562  FORM12   DS      0              ABCD  ADDX  SBCD  SUBX
00F00228  6100 02B2                563           BSR     FORMSIZE
00F0022C                           564  
00F0022C  0804 0003                565           BTST    #3,D4
00F00230  6610                     566           BNE.S   FORM125
00F00232                           567  
00F00232  6100 FF1C                568           BSR     FORMREGD       D@,D@;   FORMAT SOURCE
00F00236                           569  
00F00236  1CC5                     570           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F00238                           571  
00F00238  1814                     572           MOVE.B  (A4),D4
00F0023A  E20C                     573           LSR.B   #1,D4
00F0023C  6100 FF12                574           BSR     FORMREGD       FORMAT DESTINATION
00F00240  6046                     575           BRA.S   CS11           COMMON
00F00242                           576  
00F00242  1CFC 002D                577  FORM125  MOVE.B  #'-',(A6)+     -
00F00246  1CFC 0028                578           MOVE.B  #'(',(A6)+     (
00F0024A  6100 FEF4                579           BSR     FORMREGA       A@    SOURCE
00F0024E                           580  
00F0024E  203C 282D2C29            581           MOVE.L  #'(-,)',D0     ),-(
00F00254  6152                     582           BSR.S   SCHR           STORE CHARS
00F00256                           583  
00F00256  1814                     584           MOVE.B  (A4),D4
00F00258  E20C                     585           LSR.B   #1,D4
00F0025A  6100 FEE4                586           BSR     FORMREGA       A@   DESTINATION
00F0025E  1CFC 0029                587           MOVE.B  #')',(A6)+
00F00262  6024                     588           BRA.S   CS11           COMMON
00F00264                           589  
00F00264                           590  *  BIT   5432109876543210
00F00264                           591  *        ....XXX.....1...       ADDRESS REGISTER    DESTINATION
00F00264                           592  *        ....XXX.00......       BYTE
00F00264                           593  *        ........01......       WORD
00F00264                           594  *        ........10......       LONG
00F00264                           595  *        ............1...       MEMORY TO MEMORY
00F00264                           596  *        ............1XXX       ADDRESS SOURCE REGISTER
00F00264                           597  *
00F00264                           598m          LONG
00F00264                           599  FORM12A  DS      0              CMPM
00F00264  6100 0276                600           BSR     FORMSIZE
00F00268                           601  
00F00268  1CFC 0028                602           MOVE.B  #'(',(A6)+     (
00F0026C  6100 FED2                603           BSR     FORMREGA       A@
00F00270                           604  
00F00270  203C 282C2B29            605           MOVE.L  #'(,+)',D0     )+,(
00F00276  6130                     606           BSR.S   SCHR           STORE CHARS
00F00278                           607  
00F00278  1814                     608           MOVE.B  (A4),D4
00F0027A  E20C                     609           LSR.B   #1,D4
00F0027C  6100 FEC2                610           BSR     FORMREGA       A@
00F00280  1CFC 0029                611           MOVE.B  #')',(A6)+
00F00284  1CFC 002B                612           MOVE.B  #'+',(A6)+
00F00288  6000 05CC                613  CS11     BRA     COMMON
00F0028C                           614  
00F0028C                           615m          LONG
00F0028C  6000 021E                616  IQUICK   BRA     IQUICKA        ADDQ  SUBQ
00F00290                           617  
00F00290                           618  *  BIT   5432109876543210
00F00290                           619  *        0111...0........       FIXED
00F00290                           620  *        ....RRR.........       DATA REGISTER
00F00290                           621  *        ........DDDDDDDD       SIGN EXTENDED DATA
00F00290                           622  *
00F00290                           623m          LONG
00F00290                           624  IMOVEQ   DS      0
00F00290  1CFC 0023                625           MOVE.B  #'#',(A6)+     IMMEDIATE
00F00294                           626  
00F00294  3014                     627           MOVE.W  (A4),D0
00F00296  4880                     628           EXT.W   D0
00F00298  48C0                     629           EXT.L   D0
00F0029A  6100 0F14                630           BSR     HEX2DEC        DECIMAL
00F0029E                           631  
00F0029E  1CC5                     632           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F002A0                           633  
00F002A0  EF5C                     634           ROL.W   #7,D4
00F002A2  6100 FEAC                635           BSR     FORMREGD
00F002A6  60E0                     636           BRA     CS11           COMMON
00F002A8                           637  
00F002A8  1CC0                     638  SCHR     MOVE.B  D0,(A6)+       OUTPUT STRING
00F002AA  E088                     639           LSR.L   #8,D0
00F002AC  66FA                     640           BNE     SCHR           MORE TO OUTPUT
00F002AE  4E75                     641           RTS
00F002B0                           642  
00F002B0                           643  * MOVE FROM SR  (STATUS REGISTER)
00F002B0                           644  *
00F002B0                           645m          LONG
00F002B0  203C 2C525300            646  IMVFSR   MOVE.L  #',RS'+0,D0   SR,
00F002B6                           647  
00F002B6  61F0                     648           BSR     SCHR
00F002B8  6100 02AC                649           BSR     EEA            DATA ALTERABLE
00F002BC  60CA                     650           BRA     CS11           COMMON
00F002BE                           651  
00F002BE                           652  * MOVE FROM USP (USER STACK POINTER)
00F002BE                           653  *
00F002BE                           654m          LONG
00F002C0  203C 2C505355            655  IMVFUSP  MOVE.L  #',PSU',D0     USP,
00F002C6  61E0                     656           BSR     SCHR
00F002C8  6100 FE76                657           BSR     FORMREGA
00F002CC  60BA                     658           BRA     CS11           COMMON
00F002CE                           659  
00F002CE                           660  * MOVE TO SR (STATUS REGISTER)
00F002CE                           661  *
00F002CE                           662m          LONG
00F002D0  3E3C 0FFD                663  IMVTSR   MOVE.W  #$FFD,D7       DATA ADDRESSING
00F002D4  6100 0290                664           BSR     EEA
00F002D8  203C 52532C00            665           MOVE.L  #'RS,'+0,D0   ,SR
00F002DE  61C8                     666  IMVT44   BSR     SCHR
00F002E0  60A6                     667           BRA     CS11           COMMON
00F002E2                           668  
00F002E2                           669  * MOVE TO USP (USER STACK POINTER)
00F002E2                           670  *
00F002E2                           671m          LONG
00F002E4  6100 FE5A                672  IMVTUSP  BSR     FORMREGA
00F002E8  203C 5053552C            673           MOVE.L  #'PSU,',D0     ,USP
00F002EE  60EE                     674           BRA     IMVT44
00F002F0                           675  
00F002F0                           676  *  MOVE TO CCR (CONDITION CODE REGISTER)
00F002F0                           677  *
00F002F0                           678m          LONG
00F002F0  3E3C 0FFD                679  IMVTCCR  MOVE.W  #$FFD,D7       DATA ADDRESSING
00F002F4  6100 0270                680           BSR     EEA
00F002F8  203C 5243432C            681           MOVE.L  #'RCC,',D0     ,CCR
00F002FE  60DE                     682           BRA     IMVT44
00F00300                           683  
00F00300                           684  *  BIT   5432109876543210
00F00300                           685  *        0000...1..001...       FIXED
00F00300                           686  *        ....XXX.........       DATA REGISTER
00F00300                           687  *        ........0.......       MEMORY TO REGISTER
00F00300                           688  *        ........1.......       REGISTER TO MEMORY
00F00300                           689  *        .........0......       WORD
00F00300                           690  *        .........1......       LONG
00F00300                           691  *        .............XXX       ADDRESS REGISTER
00F00300                           692  *
00F00300                           693m          LONG
00F00300                           694  IMOVEP   DS      0
00F00300  1AFC 002E                695           MOVE.B  #'.',(A5)+     D@,#(A@)
00F00304  303C 4C57                696           MOVE.W  #'LW',D0
00F00308  0804 0006                697           BTST    #6,D4
00F0030C  6702                     698           BEQ.S   IMOVEP11       USE "W"
00F0030E  E048                     699           LSR.W   #8,D0          USE "L"
00F00310  1AC0                     700  IMOVEP11 MOVE.B  D0,(A5)+       LENGTH
00F00312                           701  
00F00312  1814                     702           MOVE.B  (A4),D4
00F00314  E20C                     703           LSR.B   #1,D4
00F00316                           704  
00F00316  082C 0007 0001           705           BTST.B  #7,1(A4)
00F0031C  670E                     706           BEQ.S   IMOVEP35
00F0031E                           707  
00F0031E  6100 FE30                708           BSR     FORMREGD       D@,$HHHH(A@)
00F00322                           709  
00F00322  1CC5                     710           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F00324                           711  
00F00324  3814                     712           MOVE.W  (A4),D4
00F00326  6112                     713           BSR.S   IMOVEP66
00F00328  6000 052A                714  CS20     BRA     COMMON4
00F0032C                           715  
00F0032C  610C                     716  IMOVEP35 BSR.S   IMOVEP66       $HHHH(A@),D@
00F0032E                           717  
00F0032E  1CC5                     718           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F00330                           719  
00F00330  1814                     720           MOVE.B  (A4),D4
00F00332  E20C                     721           LSR.B   #1,D4
00F00334  6100 FE1A                722           BSR     FORMREGD
00F00338  60EE                     723           BRA     CS20           COMMON4
00F0033A                           724  
00F0033A  1CFC 0024                725  IMOVEP66 MOVE.B  #'$',(A6)+     FORMAT DISPLACEMENT
00F0033E  302C 0002                726           MOVE.W  2(A4),D0
00F00342  6100 0EE2                727           BSR     PNT4HX
00F00346                           728  
00F00346  1CFC 0028                729           MOVE.B  #'(',(A6)+
00F0034A                           730  
00F0034A  3814                     731           MOVE.W  (A4),D4
00F0034C  6100 FDF2                732           BSR     FORMREGA
00F00350  1CFC 0029                733           MOVE.B  #')',(A6)+
00F00354  4E75                     734           RTS
00F00356                           735  
00F00356                           736m          LONG
00F00358  6000 04FC                737  SCOMMON  BRA     COMMON         NOP RESET RTE RTR RTS TRAPV
00F0035C                           738  
00F0035C                           739m          LONG
00F0035C  6100 00EA                740  ISCC     BSR     ICCCC          GET REST OF OP-CODE
00F00360  6100 0204                741           BSR     EEA            DATA ALTERABLE
00F00364  60F2                     742           BRA     SCOMMON
00F00366                           743  
00F00366                           744  
00F00366                           745m          LONG
00F00368                           746  IDBCC    DS      0              DB--
00F00368  3814                     747           MOVE.W  (A4),D4
00F0036A  6100 FDE4                748           BSR     FORMREGD
00F0036E                           749  
00F0036E  1CC5                     750           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F00370  1CFC 0024                751           MOVE.B  #'$',(A6)+     HEX FIELD TO FOLLOW
00F00374                           752  
00F00374  6100 00D2                753           BSR     ICCCC
00F00378  602E                     754           BRA.S   ICC55
00F0037A                           755  
00F0037A                           756  *  BIT   5432109876543210
00F0037A                           757  *        0110............       FIXED
00F0037A                           758  *        ....CCCC........       CONDITION
00F0037A                           759  *        ........DDDDDDD0       DISPLACEMENT
00F0037A                           760  *        ...............1       ERROR (ODD BOUNDRY DISPLACEMENT)
00F0037A                           761  *
00F0037A                           762m          LONG
00F0037C                           763  ICC      DS      0              B--
00F0037C  6100 00CA                764           BSR     ICCCC
00F00380                           765  
00F00380  1CFC 0024                766  IBSR     MOVE.B  #'$',(A6)+     BSR   BRA
00F00384                           767  
00F00384  4A04                     768           TST.B   D4
00F00386  6720                     769           BEQ.S   ICC55          16 BIT DISPLACEMENT
00F00388                           770  
00F00388  1AFC 002E                771           MOVE.B  #'.',(A5)+
00F0038C  1AFC 0053                772           MOVE.B  #'S',(A5)+
00F00390  4884                     773           EXT.W   D4             8 BIT DISPLACEMENT
00F00392                           774  
00F00392  48C4                     775  ICC35    EXT.L   D4             SIGN-EXTENDED DISPLACEMENT
00F00394  D8A9 FFFC                776           ADD.L   HISPC(A1),D4   + PROGRAM COUNTER
00F00398  5484                     777           ADDQ.L  #2,D4          + TWO
00F0039A  2004                     778           MOVE.L  D4,D0
00F0039C                           779  
00F0039C  E284                     780           ASR.L   #1,D4
00F0039E  6500 04DE                781           BCS     FERROR         ODD BOUNDRY DISPLACEMENT
00F003A2                           782  
00F003A2  6100 0E7C                783           BSR     PNT6HX
00F003A6  60B0                     784           BRA     SCOMMON
00F003A8                           785  
00F003A8  5483                     786  ICC55    ADDQ.L  #2,D3          SIZE
00F003AA  382C 0002                787           MOVE.W  2(A4),D4
00F003AE  1AFC 002E                788           MOVE.B  #'.',(A5)+
00F003B2  1AFC 004C                789           MOVE.B  #'L',(A5)+     .L FOR 16 BIT DISPLACEMENT
00F003B6  60DA                     790           BRA     ICC35
00F003B8                           791  
00F003B8                           792m          LONG
00F003B8                           793  *                               BCHG  BCLR  BSET  BTST
00F003B8                           794  ISETD    DS      0              DYNAMIC BIT
00F003B8  EF5C                     795           ROL.W   #7,D4
00F003BA  6100 FD94                796           BSR     FORMREGD       DATA REGISTER
00F003BE                           797  
00F003BE  1CC5                     798  ISETD12  MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F003C0                           799  
00F003C0  3814                     800           MOVE.W  (A4),D4
00F003C2  6100 01A2                801           BSR     EEA            DATA ALTERABLE
00F003C6  6090                     802  CS18     BRA     SCOMMON
00F003C8                           803  
00F003C8                           804m          LONG
00F003C8                           805  *                            BCHG  BCLR  BSET  BTST
00F003C8                           806  *  1ST WORD     .... .... ..XX XXXX    EA   DATA ALTERABLE ONLY
00F003C8                           807  *  2ND WORD     0000 0000 000Y YYYY    BIT NUMBER
00F003C8                           808  *
00F003C8                           809  ISETS    DS      0              STATIC BIT
00F003C8  5483                     810           ADDQ.L  #2,D3     SIZE
00F003CA  1CFC 0023                811           MOVE.B  #'#',(A6)+     IMMEDIATE
00F003CE                           812  
00F003CE  4280                     813           CLR.L   D0
00F003D0  302C 0002                814           MOVE.W  2(A4),D0       GET BIT POSITION FROM 2ND WORD
00F003D4  2200                     815           MOVE.L  D0,D1
00F003D6  EA89                     816           LSR.L   #5,D1
00F003D8  6600 04A4                817           BNE     FERROR
00F003DC  6100 0DD2                818           BSR     HEX2DEC        DECIMAL
00F003E0                           819  
00F003E0  60DC                     820           BRA     ISETD12
00F003E2                           821  
00F003E2                           822  *   BIT  5432109876543210
00F003E2                           823  *        ....XXX.........       IMMEDIATE COUNT/REGISTER
00F003E2                           824  *        .......0........       RIGHT SHIFT
00F003E2                           825  *        .......1........       LEFT SHIFT
00F003E2                           826  *        ........00......       BYTE
00F003E2                           827  *        ........01......       WORD
00F003E2                           828  *        ........10......       LONG
00F003E2                           829  *        ....0...11......       WORD (MEMORY)
00F003E2                           830  *        ....0...11AAAAAA       EFFECTIVE ADDRESS
00F003E2                           831  *        ..........0.....       SHIFT IMMEDIATE COUNT
00F003E2                           832  *        ..........1.....       SHIFT COUNT (MODULO 64) IN DATA REGISTER
00F003E2                           833  *
00F003E2                           834m          LONG
00F003E4                           835  ISHIFT   DS      0              AS-  LS-  RO-  ROX-
00F003E4  303C 4C52                836           MOVE.W  #'LR',D0
00F003E8  0804 0008                837           BTST    #8,D4          DIRECTION BIT
00F003EC  6702                     838           BEQ.S   ISHIFT13       RIGHT
00F003EE  E048                     839           LSR.W   #8,D0          LEFT
00F003F0  1AC0                     840  ISHIFT13 MOVE.B  D0,(A5)+       DIRECTION; "L" OR "R"
00F003F2                           841  
00F003F2  3014                     842           MOVE.W  (A4),D0
00F003F4  0240 00C0                843           ANDI.W  #$00C0,D0
00F003F8  0C40 00C0                844           CMPI.W  #$00C0,D0
00F003FC  6730                     845           BEQ.S   ISHIFTM1       MEMORY SHIFT
00F003FE                           846  
00F003FE  6100 00DC                847           BSR     FORMSIZE
00F00402                           848  
00F00402  EF5C                     849           ROL.W   #7,D4
00F00404  0804 000C                850           BTST    #12,D4         I/R BIT
00F00408  6616                     851           BNE.S   ISHIFT33       COUNT IN REGISTER
00F0040A                           852  
00F0040A  0204 0007                853           ANDI.B  #$07,D4        IMMEDIATE COUNT
00F0040E  6604                     854           BNE.S   ISHIFT23
00F00410  0004 0008                855           ORI.B   #$08,D4        CHANGE ZERO TO EIGHT
00F00414  0004 0030                856  ISHIFT23 ORI.B   #'0',D4
00F00418  1CFC 0023                857           MOVE.B  #'#',(A6)+
00F0041C  1CC4                     858           MOVE.B  D4,(A6)+
00F0041E  6004                     859           BRA.S   ISHIFT44
00F00420                           860  
00F00420  6100 FD2E                861  ISHIFT33 BSR     FORMREGD
00F00424                           862  
00F00424  1CC5                     863  ISHIFT44 MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F00426                           864  
00F00426  3814                     865           MOVE.W  (A4),D4
00F00428  6100 FD26                866           BSR     FORMREGD
00F0042C  6098                     867  CS17     BRA     CS18           COMMON
00F0042E                           868  
00F0042E  1AFC 002E                869  ISHIFTM1 MOVE.B  #'.',(A5)+     PERIOD
00F00432  1AFC 0057                870           MOVE.B  #'W',(A5)+     .WORD
00F00436                           871  
00F00436  0804 000B                872           BTST    #11,D4
00F0043A  6600 0442                873           BNE     FERROR         BIT 11 MUST BE ZERO
00F0043E                           874  
00F0043E  3E3C 01FC                875           MOVE.W  #$1FC,D7       MEMORY ALTERABLE ADDRESSING
00F00442  6100 0122                876           BSR     EEA
00F00446  60E4                     877           BRA     CS17           COMMON
00F00448                           878  
00F00448  700F                     879  ICCCC    MOVEQ   #$0F,D0        APPEND CONDITION CODE
00F0044A  C014                     880           AND.B   (A4),D0        D0 = CCC
00F0044C  E388                     881           LSL.L   #1,D0          D0 = CCC*2
00F0044E                           882  
00F0044E  323B 0010                883           MOVE.W  BRTBL(PC,D0.W),D1  GET BRANCH MNEMONIC
00F00452  1AC1                     884           MOVE.B  D1,(A5)+           (REVERSED) FROM THE TABLE
00F00454  E049                     885           LSR.W   #8,D1              AND ADD THE NONBLANK PORTION
00F00456  0C01 0020                886           CMPI.B  #BLANK,D1          TO THE BUFFER.
00F0045A  6702                     887           BEQ.S   ICCCC9
00F0045C  1AC1                     888           MOVE.B  D1,(A5)+
00F0045E  4E75                     889  ICCCC9   RTS
00F00460                           890  
00F00460= 20 54                    891  BRTBL    DC.B    ' T'      'T '  BRA ACCEPTED
00F00462= 20 46                    892           DC.B    ' F'      'F '
00F00464= 49 48                    893           DC.B    'IH'      'HI'
00F00466= 53 4C                    894           DC.B    'SL'      'LS'
00F00468= 43 43                    895           DC.B    'CC'      'CC'
00F0046A= 53 43                    896           DC.B    'SC'      'CS'
00F0046C= 45 4E                    897           DC.B    'EN'      'NE'
00F0046E= 51 45                    898           DC.B    'QE'      'EQ'
00F00470= 43 56                    899           DC.B    'CV'      'VC'
00F00472= 53 56                    900           DC.B    'SV'      'VS'
00F00474= 4C 50                    901           DC.B    'LP'      'PL'
00F00476= 49 4D                    902           DC.B    'IM'      'MI'
00F00478= 45 47                    903           DC.B    'EG'      'GE'
00F0047A= 54 4C                    904           DC.B    'TL'      'LT'
00F0047C= 54 47                    905           DC.B    'TG'      'GT'
00F0047E= 45 4C                    906           DC.B    'EL'      'LE'
00F00480                           907  
00F00480                           908  *   BIT  5432109876543210
00F00480                           909  *        ....RRRMMM......    DESTINATION REGISTER MODE
00F00480                           910  *        ..........MMMRRR    SOURCE MODE REGISTER
00F00480                           911  *
00F00480                           912  * IF BYTE SIZE; ADDRESS DIRECT NOT ALLOWED AS SOURCE
00F00480                           913  *
00F00480                           914  IMOVEA1  DS      0
00F00480  3E3C 0FFF                915           MOVE.W  #$FFF,D7       ALL MODES
00F00484  6100 00E0                916           BSR     EEA
00F00488                           917  
00F00488  1CC5                     918           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F0048A                           919  
00F0048A  3814                     920           MOVE.W  (A4),D4        ....RRRMMM......
00F0048C  E24C                     921           LSR.W   #1,D4          .....RRRMMM.....
00F0048E  EA0C                     922           LSR.B   #5,D4          .....RRR.....MMM
00F00490  E05C                     923           ROR.W   #8,D4          .....MMM.....RRR
00F00492  EB0C                     924           LSL.B   #5,D4          .....MMMRRR.....
00F00494  EA4C                     925           LSR.W   #5,D4          ..........MMMRRR
00F00496                           926  
00F00496                           927  * IF .BYTE DESTINATION A@ NOT ALLOWED
00F00496  3E3C 01FF                928           MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
00F0049A  1014                     929           MOVE.B  (A4),D0
00F0049C  0C00 0001                930           CMPI.B  #$01,D0
00F004A0  6604                     931           BNE.S   IMOVE19        NOT BYTE SIZE
00F004A2                           932  
00F004A2  3E3C 01FD                933           MOVE.W  #$1FD,D7       DATA ALTERABLE
00F004A6                           934  IMOVE19
00F004A6                           935  
00F004A6  6100 00BE                936           BSR     EEA
00F004AA  602C                     937           BRA.S   CS19           COMMON
00F004AC                           938  
00F004AC                           939  *  IF BYTE; ADDRESS REGISTER DIRECT NOT ALLOWED
00F004AC                           940  IQUICKA  DS      0              ADDQ  SUBQ
00F004AC  612E                     941           BSR.S   FORMSIZE
00F004AE                           942  
00F004AE  1CFC 0023                943           MOVE.B  #'#',(A6)+
00F004B2  EF5C                     944           ROL.W   #7,D4
00F004B4  0204 0007                945           ANDI.B  #7,D4
00F004B8  6604                     946           BNE.S   IQUICK21
00F004BA  0004 0008                947           ORI.B   #8,D4          MAKE ZERO INTO EIGHT
00F004BE  0004 0030                948  IQUICK21 ORI.B   #'0',D4        MAKE ASCII
00F004C2  1CC4                     949           MOVE.B  D4,(A6)+
00F004C4                           950  
00F004C4  1CC5                     951           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00F004C6                           952  
00F004C6  3814                     953           MOVE.W  (A4),D4
00F004C8                           954  
00F004C8  3014                     955           MOVE.W  (A4),D0
00F004CA  0240 00C0                956           ANDI.W  #$00C0,D0
00F004CE  6704                     957           BEQ.S   IQUICK31       DATA ALTERABLE
00F004D0  3E3C 01FF                958           MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
00F004D4  6100 0090                959  IQUICK31 BSR     EEA
00F004D8  6000 037C                960  CS19     BRA     COMMON
00F004DC                           961  
00F004DC                           962  *  BIT   5432109876543210
00F004DC                           963  *        ........00......       BYTE
00F004DC                           964  *        ........01......       WORD
00F004DC                           965  *        ........10......       LONG
00F004DC                           966  *        ........11......       ERROR
00F004DC                           967  *
00F004DC                           968  FORMSIZE DS      0
00F004DC  3414                     969           MOVE.W  (A4),D2
00F004DE  1AFC 002E                970           MOVE.B  #'.',(A5)+     STORE PERIOD
00F004E2  EC4A                     971           LSR.W   #6,D2
00F004E4  0242 0003                972           ANDI.W  #$03,D2
00F004E8  6606                     973           BNE.S   FORM91
00F004EA  1AFC 0042                974           MOVE.B  #'B',(A5)+     STORE "B"
00F004EE  6016                     975           BRA.S   FORM95
00F004F0                           976  
00F004F0  103C 0057                977  FORM91   MOVE.B  #'W',D0
00F004F4  0C02 0001                978           CMPI.B  #1,D2
00F004F8  670A                     979           BEQ.S   FORM93
00F004FA  103C 004C                980           MOVE.B  #'L',D0
00F004FE  0C02 0002                981           CMPI.B  #2,D2
00F00502  665E                     982           BNE.S   FE10           FERROR
00F00504  1AC0                     983  FORM93   MOVE.B  D0,(A5)+       STORE "W" OR "L"
00F00506  4E75                     984  FORM95   RTS
00F00508                           985  
00F00508  6100 FC46                986  EA000    BSR     FORMREGD
00F0050C  0807 0000                987           BTST    #0,D7
00F00510  6750                     988           BEQ.S   FE10           FERROR
00F00512  4E75                     989           RTS
00F00514                           990  
00F00514  6100 FC2A                991  EA001    BSR     FORMREGA
00F00518  0807 0001                992           BTST    #1,D7
00F0051C  6744                     993           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00F0051E  4E75                     994           RTS
00F00520                           995  
00F00520  1CFC 0028                996  EA010    MOVE.B  #'(',(A6)+
00F00524  6100 FC1A                997           BSR     FORMREGA
00F00528  1CFC 0029                998           MOVE.B  #')',(A6)+
00F0052C  0807 0002                999           BTST    #2,D7
00F00530  6730                    1000           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00F00532  4E75                    1001           RTS
00F00534                          1002  
00F00534  1CFC 0028               1003  EA011    MOVE.B  #'(',(A6)+
00F00538  6100 FC06               1004           BSR     FORMREGA
00F0053C  1CFC 0029               1005           MOVE.B  #')',(A6)+
00F00540  1CFC 002B               1006           MOVE.B  #'+',(A6)+
00F00544  0807 0003               1007           BTST    #3,D7
00F00548  6718                    1008           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00F0054A  4E75                    1009  EA011RTS RTS
00F0054C                          1010  
00F0054C  1CFC 002D               1011  EA100    MOVE.B  #'-',(A6)+
00F00550  1CFC 0028               1012           MOVE.B  #'(',(A6)+
00F00554  6100 FBEA               1013           BSR     FORMREGA
00F00558  1CFC 0029               1014           MOVE.B  #')',(A6)+
00F0055C  0807 0004               1015           BTST    #4,D7
00F00560  66E8                    1016           BNE     EA011RTS
00F00562  6000 031A               1017  FE10     BRA     FERROR         THIS MODE NOT ALLOWED
00F00566                          1018  
00F00566                          1019  *  ENTER       A4 = POINTER TO FIRST WORD
00F00566                          1020  *              D3 = OFFSET TO EXTENSION
00F00566                          1021  *              D4 = VALUE TO PROCESS
00F00566                          1022  *              D7 = MODES ALLOWED MASK
00F00566                          1023  *
00F00566                          1024  EEA      DS      0
00F00566  2004                    1025           MOVE.L  D4,D0
00F00568  E648                    1026           LSR.W   #3,D0
00F0056A  0240 0007               1027           ANDI.W  #$7,D0
00F0056E  6798                    1028           BEQ     EA000
00F00570                          1029  
00F00570  0C00 0001               1030           CMPI.B  #1,D0
00F00574  679E                    1031           BEQ     EA001
00F00576                          1032  
00F00576  0C00 0002               1033           CMPI.B  #2,D0
00F0057A  67A4                    1034           BEQ     EA010
00F0057C                          1035  
00F0057C  0C00 0003               1036           CMPI.B  #3,D0
00F00580  67B2                    1037           BEQ     EA011
00F00582                          1038  
00F00582  0C00 0004               1039           CMPI.B  #4,D0
00F00586  67C4                    1040           BEQ     EA100
00F00588                          1041  
00F00588  0C00 0005               1042           CMPI.B  #5,D0
00F0058C  6760                    1043           BEQ.S   EA101
00F0058E                          1044  
00F0058E  0C00 0007               1045           CMPI.B  #7,D0
00F00592  6770                    1046           BEQ.S   EA111
00F00594                          1047  
00F00594                          1048  *    EXTENSION WORD
00F00594                          1049  *   BIT  5432109876543210
00F00594                          1050  *        0...............    DATA REGISTER
00F00594                          1051  *        1...............    ADDRESS REGISTER
00F00594                          1052  *        .RRR............    REGISTER
00F00594                          1053  *        ....0...........    SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REG
00F00594                          1054  *        ....1...........    LONG VALUE IN INDEX REGISTER
00F00594                          1055  *        .....000........
00F00594                          1056  *        ........DDDDDDDD    DISPLACEMENT INTEGER
00F00594                          1057  *
00F00594                          1058  * EA110            ADDRESS REGISTER INDIRECT WITH INDEX
00F00594                          1059  
00F00594  0807 0006               1060           BTST    #6,D7
00F00598  67C8                    1061           BEQ     FE10           FERROR  THIS MODE NOT ALLOWED
00F0059A                          1062  
00F0059A  3234 3000               1063           MOVE.W  (A4,D3),D1
00F0059E  0241 0700               1064           ANDI.W  #$0700,D1
00F005A2  66BE                    1065           BNE     FE10           FERROR  BITS 10-8 MUST BE ZERO
00F005A4                          1066  
00F005A4  3034 3000               1067           MOVE.W  (A4,D3),D0     D0 = DISPLACEMENT
00F005A8  4880                    1068           EXT.W   D0
00F005AA  48C0                    1069           EXT.L   D0
00F005AC  6100 0C02               1070           BSR     HEX2DEC        DECIMAL
00F005B0  1CFC 0028               1071           MOVE.B  #'(',(A6)+     (
00F005B4                          1072  
00F005B4  6100 FB8A               1073           BSR     FORMREGA       XX(A@
00F005B8                          1074  
00F005B8  1CFC 002C               1075           MOVE.B  #',',(A6)+     XX(A@,
00F005BC                          1076  
00F005BC  1834 3000               1077           MOVE.B  (A4,D3),D4
00F005C0  E804                    1078           ASR.B   #4,D4
00F005C2  6A06                    1079           BPL.S   EA1105
00F005C4  6100 FB7A               1080           BSR     FORMREGA
00F005C8  6004                    1081           BRA.S   EA1107
00F005CA                          1082  
00F005CA  6100 FB84               1083  EA1105   BSR     FORMREGD
00F005CE  1CFC 002E               1084  EA1107   MOVE.B  #'.',(A6)+     XX(A@,X@.
00F005D2                          1085  
00F005D2  3834 3000               1086           MOVE.W  (A4,D3),D4     D4 = R@
00F005D6  103C 0057               1087           MOVE.B  #'W',D0        ..........W
00F005DA  0804 000B               1088           BTST    #11,D4
00F005DE  6704                    1089           BEQ.S   EA1109
00F005E0  103C 004C               1090           MOVE.B  #'L',D0        ..........L
00F005E4  1CC0                    1091  EA1109   MOVE.B  D0,(A6)+
00F005E6  1CFC 0029               1092           MOVE.B  #')',(A6)+     ...........)
00F005EA  5483                    1093           ADDQ.L  #2,D3
00F005EC  4E75                    1094           RTS
00F005EE                          1095  
00F005EE                          1096  * ADDRESS REGISTER INDIRECT WITH DISPLACEMENT
00F005EE                          1097  *
00F005EE  0807 0005               1098  EA101    BTST    #5,D7          101000;   DIS(A@)
00F005F2  6756                    1099           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00F005F4                          1100  
00F005F4  3034 3000               1101           MOVE.W  (A4,D3),D0
00F005F8  48C0                    1102           EXT.L   D0
00F005FA  6100 0BB4               1103           BSR     HEX2DEC        DECIMAL
00F005FE  5483                    1104           ADDQ.L  #2,D3          SIZE
00F00600  6000 FF1E               1105           BRA     EA010
00F00604                          1106  
00F00604                          1107  *  111000        ABSOLUTE SHORT
00F00604                          1108  *  111001        ABSOLUTE LONG
00F00604                          1109  *  111010        PROGRAM COUNTER WITH DISPLACEMENT
00F00604                          1110  *  111011        PROGRAM COUNTER WITH INDEX
00F00604                          1111  *  111100        IMMEDIATE OR STATUS REG
00F00604                          1112  *
00F00604                          1113  EA111
00F00604  0244 0007               1114           ANDI.W  #7,D4
00F00608  6618                    1115           BNE.S   EA1112
00F0060A                          1116  
00F0060A  0807 0007               1117           BTST    #7,D7
00F0060E  673A                    1118           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00F00610                          1119  
00F00610  3034 3000               1120           MOVE.W  (A4,D3),D0     111000;   ABSOLUTE SHORT
00F00614  48C0                    1121           EXT.L   D0
00F00616  1CFC 0024               1122           MOVE.B  #'$',(A6)+
00F0061A  6100 0BFC               1123           BSR     PNT8HX         SIGN EXTENDED VALUE
00F0061E  5483                    1124           ADDQ.L  #2,D3          SIZE + 2
00F00620  4E75                    1125           RTS
00F00622                          1126  
00F00622  0C04 0001               1127  EA1112   CMPI.B  #1,D4
00F00626  6616                    1128           BNE.S   EA1113
00F00628                          1129  
00F00628  0807 0008               1130           BTST    #8,D7
00F0062C  671C                    1131           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00F0062E                          1132  
00F0062E  1CFC 0024               1133           MOVE.B  #'$',(A6)+     HEX
00F00632  2034 3000               1134           MOVE.L  (A4,D3),D0     111001;     ABSOLUTE LONG
00F00636  6100 0BE0               1135           BSR     PNT8HX
00F0063A                          1136  *-       MOVE.B  #'.',(A6)+     FORCE LONG FORMAT
00F0063A                          1137  *-       MOVE.B  #'L',(A6)+     IE   .L
00F0063A  5883                    1138           ADDQ.L  #4,D3
00F0063C  4E75                    1139           RTS
00F0063E                          1140  
00F0063E  0C04 0002               1141  EA1113   CMPI.B  #2,D4
00F00642  662C                    1142           BNE.S   EA1114
00F00644                          1143  
00F00644  0807 0009               1144           BTST    #9,D7
00F00648  6604                    1145           BNE.S   EA1113A
00F0064A  6000 0232               1146  FE11     BRA     FERROR         THIS MODE NOT ALLOWED
00F0064E                          1147  EA1113A
00F0064E                          1148  
00F0064E  3034 3000               1149           MOVE.W  (A4,D3),D0     111010;  PC + DISPLACEMENT  DESTINATION(PC)
00F00652  48C0                    1150           EXT.L   D0
00F00654  D0A9 FFFC               1151           ADD.L   HISPC(A1),D0
00F00658  5480                    1152           ADDQ.L  #2,D0
00F0065A  1CFC 0024               1153           MOVE.B  #'$',(A6)+     HEX "$"
00F0065E  6100 0BB8               1154           BSR     PNT8HX         DESTINATION
00F00662  203C 29435028           1155           MOVE.L  #')CP(',D0     (PC)
00F00668  6100 FC3E               1156           BSR     SCHR           STORE WORD
00F0066C  5483                    1157           ADDQ.L  #2,D3          SIZE
00F0066E  4E75                    1158           RTS
00F00670                          1159  
00F00670  0C04 0003               1160  EA1114   CMPI.B  #3,D4
00F00674  6664                    1161           BNE.S   EA1115
00F00676                          1162  
00F00676                          1163  * PROGRAM COUNTER WITH INDEX    DESTINATION(PC,R@.X)
00F00676                          1164  *
00F00676                          1165  *        5432109876543210       SECOND WORD
00F00676                          1166  *        0...............       DATA REGISTER
00F00676                          1167  *        1...............       ADDRESS REGISTER
00F00676                          1168  *        .XXX............       REGISTER
00F00676                          1169  *        ....0...........       SIGN-EXTENDED, LOW ORDER WORD INTEGER
00F00676                          1170  *                               ..IN INDEX REGISTER
00F00676                          1171  *        ....1...........       LONG VALUE IN INDEX REGISTER
00F00676                          1172  *        .....000........
00F00676                          1173  *        ........XXXXXXXX       DISPLACEMENT INTEGER
00F00676                          1174  *
00F00676  0807 000A               1175           BTST    #10,D7
00F0067A  67CE                    1176           BEQ     FE11           FERROR  THIS MODE NOT ASLLOWED
00F0067C                          1177  
00F0067C  3234 3000               1178           MOVE.W  (A4,D3),D1
00F00680  0241 0700               1179           ANDI.W  #$0700,D1
00F00684  66C4                    1180           BNE     FE11           FERROR;  BITS 10-8 MUST BE ZERO
00F00686                          1181  
00F00686  1034 3001               1182           MOVE.B  1(A4,D3),D0    111100;   DESTINATION(PC,R@.X)
00F0068A  4880                    1183           EXT.W   D0
00F0068C  48C0                    1184           EXT.L   D0
00F0068E  D0A9 FFFC               1185           ADD.L   HISPC(A1),D0
00F00692  5480                    1186           ADDQ.L  #2,D0
00F00694  1CFC 0024               1187           MOVE.B  #'$',(A6)+     HEX "$"
00F00698  6100 0B7E               1188           BSR     PNT8HX         DESTINATION
00F0069C                          1189  
00F0069C  203C 2C435028           1190           MOVE.L  #',CP(',D0
00F006A2  6100 FC04               1191           BSR     SCHR           DES(PC,
00F006A6                          1192  
00F006A6  3834 3000               1193           MOVE.W  (A4,D3),D4
00F006AA  E95C                    1194           ROL.W   #4,D4
00F006AC  0804 0003               1195           BTST    #3,D4
00F006B0  6706                    1196           BEQ.S   EAF25
00F006B2  6100 FA8C               1197           BSR     FORMREGA
00F006B6  6004                    1198           BRA.S   EAF27
00F006B8  6100 FA96               1199  EAF25    BSR     FORMREGD       DES(PC,R@
00F006BC                          1200  EAF27
00F006BC                          1201  
00F006BC  1CFC 002E               1202           MOVE.B  #'.',(A6)+     DES(PC,R@.
00F006C0                          1203  
00F006C0  3834 3000               1204           MOVE.W  (A4,D3),D4
00F006C4  303C 4C57               1205           MOVE.W  #'LW',D0
00F006C8  0804 000B               1206           BTST    #11,D4
00F006CC  6702                    1207           BEQ.S   EAF35
00F006CE  E048                    1208           LSR.W   #8,D0
00F006D0  1CC0                    1209  EAF35    MOVE.B  D0,(A6)+       DES(PC,R@.X
00F006D2                          1210  
00F006D2  1CFC 0029               1211           MOVE.B  #')',(A6)+     DES(PC,R@.X)
00F006D6  5483                    1212           ADDQ.L  #2,D3
00F006D8  4E75                    1213           RTS
00F006DA                          1214  
00F006DA                          1215  *   BIT  5432109876543210
00F006DA                          1216  *        ..........111100       FIRST WORD;  #<IMMEDIATE>
00F006DA                          1217  *
00F006DA  0C04 0004               1218  EA1115   CMPI.B  #4,D4
00F006DE  6600 FF6A               1219           BNE     FE11           FERROR
00F006E2                          1220  
00F006E2  0807 000B               1221           BTST    #11,D7
00F006E6  6700 FF62               1222           BEQ     FE11           FERROR;  THIS MODE NOT ALLOWED
00F006EA                          1223  
00F006EA  1CFC 0023               1224           MOVE.B  #'#',(A6)+     IMMEDIATE
00F006EE                          1225  
00F006EE  122D FFFF               1226           MOVE.B  -1(A5),D1
00F006F2  0C01 004C               1227           CMPI.B  #'L',D1
00F006F6  6724                    1228           BEQ.S   EA11155        LONG
00F006F8                          1229  
00F006F8  3034 3000               1230           MOVE.W  (A4,D3),D0
00F006FC                          1231  
00F006FC  0C01 0042               1232           CMPI.B  #'B',D1
00F00700  6610                    1233           BNE.S   EA11153        .WORD
00F00702                          1234  
00F00702                          1235  * BYTE SIZE; DATA ALLOWED
00F00702                          1236  *  0000 0000 XXXX XXXX
00F00702                          1237  *  1111 1111 1XXX XXXX
00F00702  2200                    1238           MOVE.L  D0,D1
00F00704  E049                    1239           LSR.W   #8,D1
00F00706  670A                    1240           BEQ.S   EA11153
00F00708  2200                    1241           MOVE.L  D0,D1
00F0070A  EE41                    1242           ASR.W   #7,D1
00F0070C  5241                    1243           ADDQ.W  #1,D1
00F0070E  6600 FF3A               1244           BNE     FE11           FERROR
00F00712                          1245  
00F00712  48C0                    1246  EA11153  EXT.L   D0
00F00714  6100 0A9A               1247           BSR     HEX2DEC
00F00718  5483                    1248           ADDQ.L  #2,D3
00F0071A  4E75                    1249           RTS
00F0071C                          1250  
00F0071C  2034 3000               1251  EA11155  MOVE.L  (A4,D3),D0
00F00720  6100 0A8E               1252           BSR     HEX2DEC
00F00724  5883                    1253           ADDQ.L  #4,D3          SIZE
00F00726  4E75                    1254           RTS
00F00728                          1255  
00F00728  1AFC 002E               1256  MOVEMS   MOVE.B  #'.',(A5)+     PERIOD
00F0072C  303C 4C57               1257           MOVE.W  #'LW',D0
00F00730  0804 0006               1258           BTST    #6,D4
00F00734  6702                    1259           BEQ.S   MOVEMS2
00F00736  E048                    1260           LSR.W   #8,D0
00F00738  1AC0                    1261  MOVEMS2  MOVE.B  D0,(A5)+       SIZE
00F0073A  4E75                    1262           RTS
00F0073C                          1263  
00F0073C                          1264  * MOVEM - REGISTER EXPANSION
00F0073C                          1265  *
00F0073C                          1266  MOVEMR   DS      0
00F0073C  342C 0002               1267           MOVE.W  2(A4),D2       D2 = SECOND WORD
00F00740  7020                    1268           MOVEQ   #$20,D0        D0 = SPACE
00F00742  7E2F                    1269           MOVEQ   #$2F,D7        D7 = /
00F00744  538E                    1270           SUBQ.L  #1,A6          ADJUST STORE POINTER
00F00746  7A30                    1271           MOVEQ   #$30,D5        D5 = REGISTER #
00F00748  383C 4144               1272           MOVE.W  #'AD',D4       D4 = REG CLASS
00F0074C                          1273  
00F0074C  0302                    1274  MOVEMR11 BTST    D1,D2
00F0074E  6730                    1275           BEQ.S   MOVEMR77       BIT RESET
00F00750                          1276  
00F00750  B016                    1277           CMP.B   (A6),D0        BIT SET
00F00752  6612                    1278           BNE.S   MOVEMR44       NOT SPACE
00F00754                          1279  
00F00754  1D44 0001               1280  MOVEMR33 MOVE.B  D4,1(A6)       REG TYPE
00F00758  1D45 0002               1281           MOVE.B  D5,2(A6)       REG #
00F0075C  1D7C 002D 0003          1282           MOVE.B  #'-',3(A6)     -
00F00762  568E                    1283           ADDQ.L  #3,A6
00F00764  602E                    1284           BRA.S   MOVEMR88
00F00766                          1285  
00F00766  0C16 002C               1286  MOVEMR44 CMPI.B  #',',(A6)
00F0076A  67E8                    1287           BEQ     MOVEMR33       COMMA SEPARATOR
00F0076C                          1288  
00F0076C  BE16                    1289           CMP.B   (A6),D7        / SEPARATOR
00F0076E  67E4                    1290           BEQ     MOVEMR33
00F00770                          1291  
00F00770  1D44 0001               1292           MOVE.B  D4,1(A6)       REG TYPE
00F00774  1D45 0002               1293           MOVE.B  D5,2(A6)       REG #
00F00778  1D7C 002D 0003          1294           MOVE.B  #'-',3(A6)     - SEPARATOR
00F0077E  6014                    1295           BRA.S   MOVEMR88
00F00780                          1296  
00F00780  0C16 002C               1297  MOVEMR77 CMPI.B  #',',(A6)
00F00784  670E                    1298           BEQ.S   MOVEMR88       COMMA
00F00786                          1299  
00F00786  B016                    1300           CMP.B   (A6),D0
00F00788  670A                    1301           BEQ.S   MOVEMR88       SPACE
00F0078A  B02E 0001               1302           CMP.B   1(A6),D0
00F0078E  6702                    1303           BEQ.S   MOVEMR79       SPACE
00F00790  568E                    1304           ADDQ.L  #3,A6
00F00792  1C87                    1305  MOVEMR79 MOVE.B  D7,(A6)        / SEPARATOR
00F00794                          1306  
00F00794  5285                    1307  MOVEMR88 ADDQ.L  #1,D5
00F00796  D286                    1308           ADD.L   D6,D1          D1 = BIT POSITION
00F00798  0C05 0038               1309           CMPI.B  #'8',D5
00F0079C  66AE                    1310           BNE     MOVEMR11
00F0079E                          1311  
00F0079E  B016                    1312           CMP.B   (A6),D0        SPACE
00F007A0  670A                    1313           BEQ.S   MOVEMR94
00F007A2                          1314  
00F007A2  B02E 0001               1315           CMP.B   1(A6),D0       SPACE
00F007A6  6704                    1316           BEQ.S   MOVEMR94
00F007A8  568E                    1317           ADDQ.L  #3,A6
00F007AA  1C87                    1318           MOVE.B  D7,(A6)        /   SEPARATOR
00F007AC                          1319  
00F007AC  1A3C 0030               1320  MOVEMR94 MOVE.B  #'0',D5        RESET REG TO ZERO
00F007B0  E04C                    1321           LSR.W   #8,D4          CHANGE REG TYPE
00F007B2  6698                    1322           BNE     MOVEMR11       MORE
00F007B4                          1323  
00F007B4  1C80                    1324           MOVE.B  D0,(A6)        SPACE
00F007B6  4E75                    1325           RTS
00F007B8                          1326  
00F007B8                          1327  DCODE68K DS      0
00F007B8  4E51 FFF0               1328           LINK    A1,#-LOCVARSZ       CREATE A FRAME FOR THE
00F007BC  48E9 1007 FFF0          1329           MOVEM.L D0-D2/A4,DDATA(A1)  CODE AND ITS PC.  A4
00F007C2  49E9 FFF0               1330           LEA     DDATA(A1),A4        POINTS TO THE CODE.
00F007C6                          1331  
00F007C6  264D                    1332           MOVE.L  A5,A3          A3 = START OF OUTPUT BUFFER
00F007C8  7050                    1333           MOVEQ   #BUFSIZE,D0
00F007CA  2C4B                    1334           MOVE.L  A3,A6
00F007CC  1CFC 0020               1335  DEC311   MOVE.B  #BLANK,(A6)+   SPACE FILL BUFFER
00F007D0  5380                    1336           SUBQ.L  #1,D0
00F007D2  66F8                    1337           BNE     DEC311
00F007D4                          1338  
00F007D4  2C4B                    1339           MOVE.L  A3,A6          FORMAT ADDRESS
00F007D6  2029 FFFC               1340           MOVE.L  HISPC(A1),D0
00F007DA  6100 0A6E               1341           BSR     FRELADDR
00F007DE                          1342  
00F007DE                          1343  * CHECK FOR KNOWN ILLEGAL CODES
00F007DE  3014                    1344           MOVE.W  (A4),D0
00F007E0                          1345  
00F007E0  4BFA 00C6               1346           LEA     KI(PC),A5
00F007E4  2C4D                    1347           MOVE.L  A5,A6
00F007E6  DDFC 00000002           1348           ADD.L   #KIEND-KI,A6
00F007EC  B05D                    1349  DEC404   CMP.W   (A5)+,D0
00F007EE  671A                    1350           BEQ.S   FE12           FERROR;  ILLEGAL CODE
00F007F0  BBCE                    1351           CMP.L   A6,A5
00F007F2  66F8                    1352           BNE     DEC404
00F007F4                          1353  
00F007F4                          1354  * LOOK FOR MATCH OF OP-CODE
00F007F4                          1355  *
00F007F4  4BFA 00B4               1356           LEA     TBL(PC),A5     A5 = POINTER TO DECODE TABLE
00F007F8  4DFA 02BA               1357           LEA     TBLE(PC),A6    A6 = POINTER TO END OF TABLE
00F007FC  3014                    1358  DEC411   MOVE.W  (A4),D0        FIRST WORD
00F007FE  C05D                    1359           AND.W   (A5)+,D0       MASK
00F00800  B05D                    1360           CMP.W   (A5)+,D0
00F00802  6708                    1361           BEQ.S   DEC425         FOUND MATCH
00F00804  548D                    1362           ADDQ.L  #2,A5          UPDATE POINTER
00F00806  BBCE                    1363           CMP.L   A6,A5
00F00808  66F2                    1364           BNE     DEC411         MORE TABLE
00F0080A  6072                    1365  FE12     BRA.S   FERROR         ILLEGAL INSTRUCTION
00F0080C                          1366  
00F0080C  4286                    1367  DEC425   CLR.L   D6
00F0080E  1C1D                    1368           MOVE.B  (A5)+,D6       D6 = (GOTO OFFSET)/4
00F00810  E58E                    1369           LSL.L   #2,D6
00F00812                          1370  
00F00812  4287                    1371           CLR.L   D7
00F00814  1E1D                    1372           MOVE.B  (A5)+,D7       D7 = INDEX TO OP-CODE
00F00816                          1373  
00F00816                          1374  * MOVE OP-CODE TO BUFFER
00F00816                          1375  *
00F00816  41FA 029C               1376           LEA     OPCTBL(PC),A0
00F0081A  4A47                    1377  DEC510   TST     D7
00F0081C  6708                    1378           BEQ.S   DEC530         AT INDEX
00F0081E  4A18                    1379  DEC515   TST.B   (A0)+
00F00820  6AFC                    1380           BPL     DEC515         MOVE THROUGH FIELD
00F00822  5387                    1381           SUBQ.L  #1,D7
00F00824  60F4                    1382           BRA     DEC510
00F00826                          1383  
00F00826  701F                    1384  DEC530   MOVEQ   #FOC,D0
00F00828  4BF3 0000               1385           LEA.L   (A3,D0),A5     A5 = STORE POINTER  OP-CODE
00F0082C  1018                    1386  DEC535   MOVE.B  (A0)+,D0
00F0082E  0880 0007               1387           BCLR    #7,D0
00F00832  6604                    1388           BNE.S   DEC537         END OF MOVE
00F00834  1AC0                    1389           MOVE.B  D0,(A5)+
00F00836  60F4                    1390           BRA     DEC535
00F00838  1AC0                    1391  DEC537   MOVE.B  D0,(A5)+
00F0083A                          1392  
00F0083A                          1393  * CALCULATE GOTO AND GO
00F0083A                          1394  *
00F0083A  7602                    1395           MOVEQ   #2,D3          D3= SIZE
00F0083C  41FA F7CA               1396           LEA     X(PC),A0
00F00840  D1C6                    1397           ADD.L   D6,A0
00F00842                          1398  
00F00842  7027                    1399           MOVEQ   #FOP,D0
00F00844  4DF3 0000               1400           LEA.L   (A3,D0),A6     A6 = POINTER FOR OPERAND
00F00848                          1401  
00F00848  3814                    1402           MOVE.W  (A4),D4        D4 = FIRST WORD
00F0084A                          1403  
00F0084A  1A3C 002C               1404           MOVE.B  #',',D5        D5 = CONTAINS ASCII COMMA
00F0084E                          1405  
00F0084E  3E3C 01FD               1406           MOVE.W  #$1FD,D7       D7 = DATA ALTERABLE MODES ALLOWED
00F00852                          1407  
00F00852  4ED0                    1408           JMP     (A0)
00F00854                          1409  *
00F00854                          1410  *  A4 = POINTER TO DATA IN FRAME CREATED BY 'LINK A1,...'
00F00854                          1411  *  A5 = POINTER STORE OP-CODE
00F00854                          1412  *  A6 = POINTER STORE OPERAND
00F00854                          1413  *  D3 = SIZE = 2 BYTES
00F00854                          1414  *  D4 = FIRST WORD
00F00854                          1415  *  D7 = ADDRESS MODES ALLOWED ($1FD) DATA ALTERABLE
00F00854                          1416  
00F00854  5483                    1417  COMMON4  ADDQ.L  #2,D3          SIZE = 4
00F00856                          1418  
00F00856  2C03                    1419  COMMON   MOVE.L  D3,D6          D6 = SIZE
00F00858  1CFC 0020               1420           MOVE.B  #BLANK,(A6)+   SPACE AS LAST CHAR
00F0085C                          1421  
00F0085C  2A4E                    1422           MOVE.L  A6,A5          SAVE END OF BUFFER POINTER
00F0085E  700A                    1423           MOVEQ   #FDATA,D0
00F00860  4DF3 0000               1424           LEA.L   (A3,D0),A6
00F00864                          1425  
00F00864  301C                    1426  COMMON35 MOVE.W  (A4)+,D0       GET NEXT WORD OF DATA.
00F00866  54A9 FFFC               1427           ADDQ.L  #2,HISPC(A1)   ADJUST PROG COUNTER.
00F0086A  6100 09BA               1428           BSR     PNT4HX         FORMAT DATA. (A6)+
00F0086E  5503                    1429           SUBQ.B  #2,D3
00F00870  66F2                    1430           BNE     COMMON35
00F00872                          1431  
00F00872  2C4D                    1432           MOVE.L  A5,A6          A6 = RESTORE END POINTER
00F00874                          1433  
00F00874  2A4B                    1434           MOVE.L  A3,A5          A5 =  BEGINNING OF BUFFER
00F00876                          1435  
00F00876  2869 FFFC               1436           MOVE.L  HISPC(A1),A4   MOVE THE UPDATED PC
00F0087A  4E59                    1437           UNLK    A1               TO A4 AND UNDO FRAME.
00F0087C                          1438  
00F0087C  4E75                    1439           RTS
00F0087E                          1440  
00F0087E                          1441  
00F0087E                          1442  FERROR   DS      0
00F0087E                          1443  * ILLEGAL INSTRUCTION
00F0087E                          1444  *
00F0087E  701F                    1445           MOVEQ   #FOC,D0
00F00880  4DF3 0000               1446           LEA.L   (A3,D0),A6
00F00884  4BFA 0018               1447           LEA     MSG111(PC),A5
00F00888  101D                    1448  FERROR35 MOVE.B  (A5)+,D0
00F0088A  0C00 0004               1449           CMPI.B  #EOT,D0
00F0088E  6704                    1450           BEQ.S   FERROR39
00F00890  1CC0                    1451           MOVE.B  D0,(A6)+
00F00892  60F4                    1452           BRA     FERROR35
00F00894                          1453  FERROR39 DS      0
00F00894                          1454  
00F00894  3014                    1455           MOVE.W  (A4),D0
00F00896  6100 098E               1456           BSR     PNT4HX
00F0089A                          1457  
00F0089A  7602                    1458           MOVEQ   #2,D3          SIZE
00F0089C                          1459  
00F0089C  60B8                    1460           BRA     COMMON
00F0089E                          1461  
00F0089E= 44 43 2E 57 20 20 ...   1462  MSG111   DC.B    'DC.W    $',EOT
00F008A8                          1463  
00F008A8                          1464  
00F008A8                          1465  
00F008A8= 4AFB                    1466  KI       DC.W    $4AFB          KNOWN ILLEGAL CODES
00F008AA                          1467  KIEND    DS      0
00F008AA                          1468  
00F008AA                          1469  
00F008AA                          1470  *  \1   MASK
00F008AA                          1471  *  \2   OP-CODE PATTERN
00F008AA                          1472  *  \3   GOTO OFFSET
00F008AA                          1473  *  \4   INDEX TO OP-CODE
00F008AA                          1474  C68      MACRO
00F008AA                          1475           DC.W    $\1
00F008AA                          1476           DC.W    $\2
00F008AA                          1477           DC.B    (\3-X)>>2
00F008AA                          1478           DC.B    \4
00F008AA                          1479           ENDM
00F008AA                          1480  
00F008AA                          1481  TBL      DS      0
00F008AA                          1482m          C68     FEC0,E6C0,ISHIFT,56           RO
00F008B0                          1483m          C68     FEC0,E4C0,ISHIFT,57           ROX
00F008B6                          1484m          C68     FEC0,E2C0,ISHIFT,55           LS
00F008BC                          1485m          C68     FEC0,E0C0,ISHIFT,54           AS
00F008C2                          1486m          C68     F018,E018,ISHIFT,56           RO
00F008C8                          1487m          C68     F018,E010,ISHIFT,57           ROX
00F008CE                          1488m          C68     F018,E008,ISHIFT,55           LS
00F008D4                          1489m          C68     F018,E000,ISHIFT,54           AS
00F008DA                          1490m          C68     F0C0,D0C0,FORM10EX,4          ADD       <EA>,A@
00F008E0                          1491m          C68     F130,D100,FORM12,53           ADDX
00F008E6                          1492m          C68     F000,D000,FORM10EX,4            ADD
00F008EC                          1493m          C68     F1F8,C188,FORM9,50            EXG
00F008F2                          1494m          C68     F1F8,C148,FORM8,50            EXG
00F008F8                          1495m          C68     F1F8,C140,FORM7,50            EXG
00F008FE                          1496m          C68     F1F0,C100,FORM12,49           ABCD
00F00904                          1497m          C68     F1C0,C1C0,FORM6D,48           MULS
00F0090A                          1498m          C68     F1C0,C0C0,FORM6D,47           MULU
00F00910                          1499m          C68     F000,C000,FORM10,2            AND
00F00916                          1500m          C68     F0C0,B0C0,FORM10EX,6          CMP     <EA>,A@
00F0091C                          1501m          C68     F138,B108,FORM12A,46           CMPM
00F00922                          1502m          C68     F100,B100,FORM10,5            EOR
00F00928                          1503m          C68     F000,B000,FORM10EX,6            CMP
00F0092E                          1504m          C68     F0C0,90C0,FORM10EX,44         SUB       <EA>,A@
00F00934                          1505m          C68     F130,9100,FORM12,45           SUBX
00F0093A                          1506m          C68     F000,9000,FORM10EX,44           SUB
00F00940                          1507m          C68     F1F0,8100,FORM12,43           SBCD
00F00946                          1508m          C68     F1C0,81C0,FORM6D,42           DIVS
00F0094C                          1509m          C68     F1C0,80C0,FORM6D,41           DIVU
00F00952                          1510m          C68     F000,8000,FORM10,40           OR
00F00958                          1511m          C68     F100,7000,IMOVEQ,39           MOVEQ
00F0095E                          1512m          C68     FF00,6100,IBSR,51             BSR
00F00964                          1513m          C68     FF00,6000,IBSR,65             BRA
00F0096A                          1514m          C68     F000,6000,ICC,38              B
00F00970                          1515m          C68     F0F8,50C8,IDBCC,37              DB
00F00976                          1516m          C68     F0C0,50C0,ISCC,36             S
00F0097C                          1517m          C68     F100,5100,IQUICK,35           SUBQ
00F00982                          1518m          C68     F100,5000,IQUICK,34           ADDQ
00F00988                          1519m          C68     F1C0,41C0,FORM6A,33           LEA
00F0098E                          1520m          C68     F1C0,4180,FORM6D,32           CHK
00F00994                          1521m          C68     FFC0,4EC0,FORM11SL,31         JMP
00F0099A                          1522m          C68     FFC0,4E80,FORM11SL,30         JSR
00F009A0                          1523m          C68     FFFF,4E77,SCOMMON,29           RTR
00F009A6                          1524m          C68     FFFF,4E76,SCOMMON,28           TRAPV
00F009AC                          1525m          C68     FFFF,4E75,SCOMMON,27           RTS
00F009B2                          1526m          C68     FFFF,4E73,SCOMMON,26           RTE
00F009B8                          1527m          C68     FFFF,4E72,ISTOP,25             STOP
00F009BE                          1528m          C68     FFFF,4E71,SCOMMON,24           NOP
00F009C4                          1529m          C68     FFFF,4E70,SCOMMON,23           RESET
00F009CA                          1530m          C68     FFF8,4E68,IMVFUSP,60          MOVE FROM USP
00F009D0                          1531m          C68     FFF8,4E60,IMVTUSP,60          MOVE TO USP
00F009D6                          1532m          C68     FFF8,4E58,FORM5,22            UNLINK
00F009DC                          1533m          C68     FFF8,4E50,ILINK,21            LINK
00F009E2                          1534m          C68     FFF0,4E40,FORM4,20            TRAP
00F009E8                          1535m          C68     FF80,4C80,IMOVEMTR,15         MOVEM FROM REGISTERS
00F009EE                          1536m          C68     FFC0,4AC0,FORM1A,19           TAS
00F009F4                          1537m          C68     FF00,4A00,FORM1,18            TST
00F009FA                          1538m          C68     FFF8,48C0,FORM3,17            EXT.L
00F00A00                          1539m          C68     FFF8,4880,FORM3,16            EXT.W
00F00A06                          1540m          C68     FF80,4880,IMOVEMFR,15         MOVEA TO REGISTERS
00F00A0C                          1541m          C68     FFF8,4840,FORM3,14            SWAP
00F00A12                          1542m          C68     FFC0,4840,FORM11,13           PEA
00F00A18                          1543m          C68     FFC0,4800,FORM1A,12           NBCD
00F00A1E                          1544m          C68     FFC0,46C0,IMVTSR,59           MOVE TO SR
00F00A24                          1545m          C68     FF00,4600,FORM1,11            NOT
00F00A2A                          1546m          C68     FFC0,44C0,IMVTCCR,59          MOVE TO CCR
00F00A30                          1547m          C68     FF00,4400,FORM1,10            NEG
00F00A36                          1548m          C68     FF00,4200,FORM1,9             CLR
00F00A3C                          1549m          C68     FFC0,40C0,IMVFSR,59           MOVE.W  FROM  SR
00F00A42                          1550m          C68     FF00,4000,FORM1,8             NEGX
00F00A48                          1551m          C68     F000,3000,IMOVE,59            MOVE.W
00F00A4E                          1552m          C68     F000,2000,IMOVE,60            MOVE.L
00F00A54                          1553m          C68     F000,1000,IMOVE,58            MOVE.B
00F00A5A                          1554m          C68     FF00,0C00,IMMED,6             CMP       #
00F00A60                          1555m          C68     FF00,0A00,IMMED,5             EOR       #
00F00A66                          1556m          C68     FF00,0600,IMMED,4             ADD       #
00F00A6C                          1557m          C68     FF00,0400,IMMED,3             SUB       #
00F00A72                          1558m          C68     FF00,0200,IMMED,2             AND       #
00F00A78                          1559m          C68     FF00,0000,IMMED,1             OR        #
00F00A7E                          1560m          C68     F138,0108,IMOVEP,0            MOVEP
00F00A84                          1561m          C68     FFC0,08C0,ISETS,64            BSET
00F00A8A                          1562m          C68     FFC0,0880,ISETS,63            BCLR
00F00A90                          1563m          C68     FFC0,0840,ISETS,62            BCHG
00F00A96                          1564m          C68     FFC0,0800,ISETS,61            BTST
00F00A9C                          1565m          C68     F1C0,01C0,ISETD,64            BSET
00F00AA2                          1566m          C68     F1C0,0180,ISETD,63            BCLR
00F00AA8                          1567m          C68     F1C0,0140,ISETD,62            BCHG
00F00AAE                          1568m          C68     F1C0,0100,ISETD,61            BTST
00F00AB4                          1569  TBLE     DS      0
00F00AB4                          1570  
00F00AB4                          1571  N68      MACRO
00F00AB4                          1572           DC.B    '\1',128+'\2'        \1\2
00F00AB4                          1573           ENDM
00F00AB4                          1574  
00F00AB4                          1575  OPCTBL   DS      0
00F00AB4                          1576m          N68     MOVE,P    0
00F00AB9                          1577m          N68     O,R       1
00F00ABB                          1578m          N68     AN,D      2
00F00ABE                          1579m          N68     SU,B      3
00F00AC1                          1580m          N68     AD,D      4
00F00AC4                          1581m          N68     EO,R      5
00F00AC7                          1582m          N68     CM,P      6
00F00ACA                          1583m          N68     MOV,E     7
00F00ACE                          1584m          N68     NEG,X     8
00F00AD2                          1585m          N68     CL,R      9
00F00AD5                          1586m          N68     NE,G      10
00F00AD8                          1587m          N68     NO,T      11
00F00ADB                          1588m          N68     NBC,D     12
00F00ADF                          1589m          N68     PEA.,L    13
00F00AE4                          1590m          N68     SWAP.,W   14
00F00AEA                          1591m          N68     MOVE,M    15
00F00AEF                          1592m          N68     EXT.,W    16
00F00AF4                          1593m          N68     EXT.,L    17
00F00AF9                          1594m          N68     TS,T      18
00F00AFC                          1595m          N68     TAS.,B    19
00F00B01                          1596m          N68     TRA,P     20
00F00B05                          1597m          N68     LIN,K     21
00F00B09                          1598m          N68     UNL,K     22
00F00B0D                          1599m          N68     RESE,T    23
00F00B12                          1600m          N68     NO,P      24
00F00B15                          1601m          N68     STO,P     25
00F00B19                          1602m          N68     RT,E      26
00F00B1C                          1603m          N68     RT,S      27
00F00B1F                          1604m          N68     TRAP,V    28
00F00B24                          1605m          N68     RT,R      29
00F00B27                          1606m          N68     JS,R      30
00F00B2A                          1607m          N68     JM,P      31
00F00B2D                          1608m          N68     CHK.,W    32
00F00B32                          1609m          N68     LEA.,L    33
00F00B37                          1610m          N68     ADD,Q     34
00F00B3B                          1611m          N68     SUB,Q     35
00F00B3F= D3                      1612           DC.B    128+'S'   36
00F00B40                          1613m          N68     D,B       37
00F00B42= C2                      1614           DC.B    128+'B'   38
00F00B43                          1615m          N68     MOVEQ.,L  .....39
00F00B4A                          1616m          N68     O,R       40
00F00B4C                          1617m          N68     DIVU.,W   41
00F00B52                          1618m          N68     DIVS.,W   42
00F00B58                          1619m          N68     SBC,D     43
00F00B5C                          1620m          N68     SU,B      44
00F00B5F                          1621m          N68     SUB,X     45
00F00B63                          1622m          N68     CMP,M     46
00F00B67                          1623m          N68     MULU.,W   47
00F00B6D                          1624m          N68     MULS.,W   48
00F00B73                          1625m          N68     ABC,D    49
00F00B77                          1626m          N68     EX,G      50
00F00B7A                          1627m          N68     BS,R      .....51
00F00B7D                          1628m          N68     NUL,L     .....52
00F00B81                          1629m          N68     ADD,X     53
00F00B85                          1630m          N68     A,S       54
00F00B87                          1631m          N68     L,S       55
00F00B89                          1632m          N68     R,O       56
00F00B8B                          1633m          N68     RO,X      57
00F00B8E                          1634m          N68     MOVE.,B   58
00F00B94                          1635m          N68     MOVE.,W   59
00F00B9A                          1636m          N68     MOVE.,L   60
00F00BA0                          1637m          N68     BTS,T     61
00F00BA4                          1638m          N68     BCH,G     62
00F00BA8                          1639m          N68     BCL,R     63
00F00BAC                          1640m          N68     BSE,T     64
00F00BB0                          1641m          N68     BR,A      65
00F00BB3                          1642  
00F00BB3= 00                      1643           DC.B    0              PAD BYTE
00F00BB4                          1644  
00F00BB4                          1645  
00F00BB4                          1646  
00F00BB4                          1647  ;   ORG $2000
00F00BB4                          1648  
00F00BB4  46FC 2700               1649  MAIN MOVE.W #INT_OFF,SR  ; INTERRUPT OFF, SUPERVISOR MODE SET
00F00BB8                          1650  
00F00BB8                          1651  ;      MOVE.L #RAMBASE+USER_STACK,SP ; INIT TOP OF USER STACK
00F00BB8                          1652  ;      movea.l #DOUT,a1
00F00BB8                          1653  ;      move.b #$FF,d2    ; with cpld
00F00BB8                          1654  ;      MOVE.B D2,(A1)    ; OFF LEDS
00F00BB8                          1655  
00F00BB8  207C 00FE8021           1656        movea.l #MCR,A0  ; MODULE CONTROL REGISTER         
00F00BBE  10BC 0000               1657        move.b #$00,(A0)
00F00BC2                          1658  
00F00BC2  6100 015A               1659        BSR INIT_ACIA         ; ACIA init
00F00BC6                          1660  
00F00BC6  6100 0AF2               1661        BSR VECINIT           ; EXCEPTION VECTOR init
00F00BCA                          1662  
00F00BCA  6100 01CC               1663        BSR SCROLL            ; NEW LINE
00F00BCE                          1664  
00F00BCE  6100 08C6               1665        BSR CLEAR_MON_RAM     ; Initialize 1Kbyte from RAMBASE with 0.
00F00BD2                          1666  
00F00BD2  47F9 00F01793           1667        LEA.L TITLE1.L,A3     ; print START MESSAGE
00F00BD8  6100 0196               1668        BSR PSTR
00F00BDC                          1669  
00F00BDC  2C79 000000C0           1670        MOVEA.L RAMBASE.L,A6  ; Initialize Monitor work area 
00F00BE2  2D7C 00000000 00A6      1671        MOVE.L #RAM,POINTER_NOW(A6)
00F00BEA  2D7C 00000400 00F0      1672        MOVE.L #RAM+$400,USER_PC(A6)    ; INIT USER PC TO START OF RAM
00F00BF2                          1673  
00F00BF2  2D7C 0000FFF4 00E6      1674        MOVE.L #SUPER_STACK+USER_STACK,USER_USP(A6) ; INIT USER STACK
00F00BFA  40C0                    1675        MOVE.W SR,D0
00F00BFC  3D40 00EA               1676        MOVE.W D0,USER_SR(A6) 
00F00C00                          1677  
00F00C00  42AE 0024               1678        CLR.L FLAG(A6)         ; CLEAR SYSTEM MONITOR FLAG
00F00C04                          1679  ;;      MOVE.W #INT_ON,SR       ; ON INTERRUPT, SUPERVISOR MODE SET ; comment by @kanpapa 2023/9/9
00F00C04                          1680  
00F00C04                          1681  
00F00C04  6100 019E               1682  loop  BSR SEND_PROMPT
00F00C08  6100 0152               1683        BSR CIN
00F00C0C  B03C 0040               1684        CMP.B #$40,D0
00F00C10  6D04                    1685        blt.S NO_CHANGE
00F00C12                          1686  
00F00C12  C03C 00DF               1687        AND.B #%11011111,D0
00F00C16                          1688  
00F00C16                          1689  NO_CHANGE
00F00C16                          1690  
00F00C16  B03C 004C               1691        CMP.B #'L',D0
00F00C1A  6600 0008               1692        BNE NEXT1
00F00C1E  6100 0202               1693        BSR READ_S_REC
00F00C22  60E0                    1694        BRA LOOP
00F00C24                          1695  
00F00C24  B03C 0053               1696  NEXT1 CMP.B #'S',D0       
00F00C28  6600 0008               1697        BNE NEXT2
00F00C2C  6100 09E8               1698        BSR VIEW_USP      ; VIEW USER STACK
00F00C30  60D2                    1699        BRA LOOP
00F00C32                          1700  
00F00C32                          1701  
00F00C32  B03C 0048               1702  NEXT2 CMP.B #'H',D0
00F00C36  6600 0008               1703        BNE NEXT3
00F00C3A  6100 0330               1704        BSR HEX_DUMP
00F00C3E  60C4                    1705        BRA LOOP
00F00C40                          1706  
00F00C40  B03C 004E               1707  NEXT3 CMP.B #'N',D0
00F00C44  6600 0008               1708        BNE NEXT4
00F00C48  6100 0396               1709        BSR NEW_POINTER
00F00C4C  60B6                    1710        BRA LOOP
00F00C4E                          1711  
00F00C4E  B03C 004A               1712  NEXT4 CMP.B #'J',D0
00F00C52  6600 0008               1713        BNE NEXT5
00F00C56  6100 0796               1714        BSR JUMP
00F00C5A  60A8                    1715        BRA LOOP
00F00C5C                          1716  
00F00C5C  B03C 005A               1717  NEXT5 CMP.B #'Z',D0
00F00C60  6600 0008               1718        BNE NEXT6
00F00C64  6100 0958               1719        BSR UPLOAD         ; PRINT_DEBUG <------ USE Z FOR UPLOAD BINARY IMAGE
00F00C68  609A                    1720        BRA LOOP
00F00C6A                          1721  
00F00C6A                          1722  
00F00C6A  B03C 0046               1723  NEXT6 CMP.B #'F',D0
00F00C6E  6600 0008               1724        BNE NEXT7
00F00C72  6100 0408               1725        BSR FILL_MEMORY
00F00C76  608C                    1726        BRA LOOP
00F00C78                          1727  
00F00C78  B03C 0045               1728  NEXT7 CMP.B #'E',D0
00F00C7C  6600 000A               1729        BNE NEXT8
00F00C80  6100 046E               1730        BSR EDIT_MEMORY
00F00C84  6000 FF7E               1731        BRA LOOP
00F00C88                          1732  
00F00C88  B03C 0043               1733  NEXT8 CMP.B #'C',D0
00F00C8C  6600 000A               1734        BNE NEXT9
00F00C90  6100 0424               1735        BSR CLEAR_MEMORY
00F00C94  6000 FF6E               1736        BRA LOOP
00F00C98                          1737  
00F00C98  B03C 0051               1738  NEXT9 CMP.B #'Q',D0
00F00C9C  6600 000A               1739        BNE NEXT10
00F00CA0  6100 0382               1740        BSR QUICK_HOME
00F00CA4  6000 FF5E               1741        BRA LOOP
00F00CA8                          1742  
00F00CA8  B03C 003F               1743  NEXT10 CMP.B #'?',D0
00F00CAC  6608                    1744         BNE.S NEXT11
00F00CAE  6100 04CE               1745         BSR HELP
00F00CB2  6000 FF50               1746         BRA LOOP
00F00CB6                          1747  
00F00CB6                          1748  
00F00CB6  B03C 0052               1749  NEXT11 CMP.B #'R',D0
00F00CBA  6608                    1750        BNE.S NEXT12
00F00CBC  6100 05EA               1751        BSR DISPLAY_REG
00F00CC0  6000 FF42               1752        BRA LOOP
00F00CC4                          1753  
00F00CC4  B03C 002E               1754  NEXT12 CMP.B #'.',D0
00F00CC8  6608                    1755        BNE.S NEXT13
00F00CCA  6100 07DE               1756        BSR MODIFY_REG
00F00CCE  6000 FF34               1757        BRA LOOP
00F00CD2                          1758  
00F00CD2  B03C 0044               1759  NEXT13 CMP.B #'D',D0
00F00CD6  6608                    1760         BNE.S NEXT14
00F00CD8  6100 088C               1761         BSR DISASSEMBLE
00F00CDC  6000 FF26               1762         BRA LOOP
00F00CE0                          1763  
00F00CE0  B03C 0041               1764  NEXT14 CMP.B #'A',D0
00F00CE4  6608                    1765         BNE.S NEXT15
00F00CE6  6100 0922               1766         BSR ABOUT
00F00CEA  6000 FF18               1767         BRA LOOP
00F00CEE                          1768  
00F00CEE                          1769  
00F00CEE  B03C 0054               1770  NEXT15 CMP.B #'T',D0
00F00CF2  6608                    1771         BNE.S NEXT16
00F00CF4  6100 075C               1772         BSR TRACE_JUMP
00F00CF8  6000 FF0A               1773         BRA LOOP
00F00CFC                          1774  
00F00CFC  B03C 0047               1775  NEXT16 CMP.B #'G',D0
00F00D00  6606                    1776         BNE.S NEXT17
00F00D02  4EF9 00102000           1777         JMP $102000.L       ; USE G COMMAND FOR SIMPLE JUMP TO RAM
00F00D08                          1778  
00F00D08                          1779  
00F00D08  B03C 0042               1780  NEXT17 CMP.B #'B',D0
00F00D0C  6604                    1781         BNE.S NEXT18
00F00D0E  6000 0972               1782         BRA BOOT_RAM
00F00D12                          1783  
00F00D12  6100 006A               1784  NEXT18  BSR NEW_LINE
00F00D16  6100 00A6               1785        BSR SEND_TITLE
00F00D1A  6000 FEE8               1786        bra loop
00F00D1E                          1787  
00F00D1E                          1788  ; CONSOLE IS ACIA1
00F00D1E                          1789  
00F00D1E                 TRUE     1790        IFEQ  EASY68K_SIM
00F00D1E                          1791          
00F00D1E                          1792  ; INIT ACIA
00F00D1E                          1793  
00F00D1E  13FC 0003 00FE8001      1794  INIT_ACIA  MOVE.B #3,ACIAC.L   ; RESET ACIA
00F00D26  303C 2710               1795             MOVE.W #10000,D0
00F00D2A  51C8 FFFE               1796             DBRA  D0,*
00F00D2E  13FC 0015 00FE8001      1797             MOVE.B #$15,ACIAC.L   ; rts enabled 9600 8ne
00F00D36  4E75                    1798             RTS
00F00D38                          1799  
00F00D38  0839 0001 00FE8001      1800  COUT      BTST.B #TDRE,ACIAC.L
00F00D40  67F6                    1801            BEQ.S  COUT
00F00D42  13C0 00FE8003           1802            MOVE.B D0,ACIAD.L
00F00D48  4E75                    1803            RTS
00F00D4A                          1804  
00F00D4A                          1805  
00F00D4A  0839 0000 00FE8001      1806  CINS      BTST.B #RDRF,ACIAC.L
00F00D52  67F6                    1807            BEQ.S  CINS
00F00D54  1039 00FE8003           1808            MOVE.B ACIAD.L,D0
00F00D5A  4E75                    1809            RTS
00F00D5C                          1810  
00F00D5C                          1811  
00F00D5C  0839 0000 00FE8001      1812  CIN      BTST.B #RDRF,ACIAC.L
00F00D64  67F6                    1813           BEQ.S  CIN
00F00D66  1039 00FE8003           1814           MOVE.B ACIAD.L,D0
00F00D6C  61CA                    1815           BSR COUT
00F00D6E  4E75                    1816           RTS
00F00D70                          1817  
00F00D70                          1818      ENDC
00F00D70                          1819  
00F00D70                          1820  ; CONSOLE IS EASy68K Sim68K I/O
00F00D70                          1821  
00F00D70                 FALSE    1822      IFNE    EASY68K_SIM
00F00D70                          1823             ;D1.B = 0 to turn off keyboard echo.
00F00D70                          1824             ;D1.B = non zero to enable it (default).
00F00D70                          1825             ;Echo is restored on 'Reset' or when a new file is loaded.
00F00D70                          1826           ENDC
00F00D70                          1827  
00F00D70                          1828  
00F00D70                          1829  ; A3 POINTED TO FIRST BYTE
00F00D70                          1830  ; END WITH 0
00F00D70                          1831  
00F00D70  101B                    1832  PSTR     MOVE.B (A3)+,D0
00F00D72  B03C 0000               1833           CMP.B  #0,D0
00F00D76  6704                    1834           BEQ.S PSTR1
00F00D78  61BE                    1835           BSR COUT
00F00D7A  60F4                    1836           BRA.S PSTR
00F00D7C                          1837  
00F00D7C  4E75                    1838  PSTR1    RTS
00F00D7E                          1839  
00F00D7E                          1840  ; NEW LINE
00F00D7E                          1841  
00F00D7E  2F00                    1842  NEW_LINE MOVE.L D0,-(SP)
00F00D80  103C 000D               1843           MOVE.B #CR,D0
00F00D84  61B2                    1844           BSR COUT
00F00D86  103C 000A               1845           MOVE.B #LF,D0
00F00D8A  61AC                    1846           BSR COUT
00F00D8C  201F                    1847           MOVE.L (SP)+,D0
00F00D8E  4E75                    1848           RTS
00F00D90                          1849  
00F00D90  103C 0020               1850  SPACE    MOVE.B #SP,D0
00F00D94  61A2                    1851           BSR COUT
00F00D96  4E75                    1852           RTS
00F00D98                          1853  
00F00D98  323C 0019               1854  SCROLL   MOVE.W #25,D1
00F00D9C  61E0                    1855  SCROLL1  BSR NEW_LINE
00F00D9E  51C9 FFFC               1856           DBF D1,SCROLL1
00F00DA2  4E75                    1857           RTS
00F00DA4                          1858  
00F00DA4                          1859  SEND_PROMPT
00F00DA4  2C79 000000C0           1860          MOVEA.L RAMBASE.L,A6
00F00DAA  61D2                    1861          BSR NEW_LINE
00F00DAC  202E 00A6               1862          MOVE.L POINTER_NOW(A6),D0
00F00DB0  6100 01A6               1863          BSR OUT6X
00F00DB4  47F9 00F017CF           1864          LEA.L PROMPT.L,A3
00F00DBA  61B4                    1865          BSR PSTR
00F00DBC  4E75                    1866          RTS
00F00DBE                          1867  
00F00DBE  47F9 00F0176A           1868  SEND_TITLE LEA.L TITLE.L,A3
00F00DC4  61AA                    1869             BSR PSTR
00F00DC6  4E75                    1870             RTS
00F00DC8                          1871  
00F00DC8                          1872  ; S19 LOADER
00F00DC8                          1873  
00F00DC8                          1874  ; CONVERT ASCII LETTER TO 8-BIT VALUE
00F00DC8                          1875  
00F00DC8  0400 0030               1876  TO_HEX SUBI.B #$30,D0
00F00DCC  0C00 000A               1877         CMPI.B #$A,D0
00F00DD0  6B00 0008               1878         BMI  ZERO_TO_NINE
00F00DD4  C03C 00DF               1879         AND.B #%11011111,D0
00F00DD8  5F00                    1880         SUBI.B #7,D0
00F00DDA                          1881  
00F00DDA                          1882  ZERO_TO_NINE
00F00DDA                          1883  
00F00DDA  1200                    1884         MOVE.B D0,D1
00F00DDC                          1885  
00F00DDC  4E75                    1886          RTS
00F00DDE                          1887  
00F00DDE                          1888  ; READ TWO BYTES ASCII AND CONVERT TO SINGLE BYTE DATA
00F00DDE                          1889  
00F00DDE                          1890  ; ENTRY: D0 FROM CIN 
00F00DDE                          1891  ; EXIT: D1 8-BIT VALUE 
00F00DDE                          1892  ;       
00F00DDE                          1893  
00F00DDE                          1894  
00F00DDE  6100 FF7C               1895  GET_HEX  BSR CIN
00F00DE2                          1896  
00F00DE2  B03C 0020               1897           CMP.B #' ',D0         ; IF BIT_ESC PRESSED
00F00DE6  6608                    1898           BNE.S GET_HEX1
00F00DE8  08EE 0000 0024          1899           BSET.B #BIT_ESC,FLAG(A6)
00F00DEE  4E75                    1900           RTS
00F00DF0                          1901  
00F00DF0                          1902  
00F00DF0  B03C 000D               1903  GET_HEX1 CMP.B #CR,D0
00F00DF4  6608                    1904           BNE.S GET_HEX2
00F00DF6  08EE 0001 0024          1905           BSET.B #1,FLAG(A6)       ; ENTER PRESSED
00F00DFC  4E75                    1906           RTS
00F00DFE                          1907  
00F00DFE                          1908  
00F00DFE  61C8                    1909  GET_HEX2 BSR TO_HEX
00F00E00  E919                    1910           ROL.B #4,D1
00F00E02  1401                    1911           MOVE.B D1,D2
00F00E04  6100 FF56               1912           BSR CIN
00F00E08  61BE                    1913           BSR TO_HEX
00F00E0A  D202                    1914           ADD.B D2,D1
00F00E0C  4E75                    1915           RTS
00F00E0E                          1916  
00F00E0E                          1917  
00F00E0E  6100 FF3A               1918  GET_HEXS   BSR CINS
00F00E12  61B4                    1919           BSR TO_HEX
00F00E14  E919                    1920           ROL.B #4,D1
00F00E16  1401                    1921           MOVE.B D1,D2
00F00E18  6100 FF30               1922           BSR CINS
00F00E1C  61AA                    1923           BSR TO_HEX
00F00E1E  D202                    1924           ADD.B D2,D1
00F00E20  4E75                    1925           RTS
00F00E22                          1926  
00F00E22                          1927  ;
00F00E22                          1928  ;S214000400227C00400001143C00006100002C128297
00F00E22                          1929  ;S804000000FB
00F00E22                          1930  
00F00E22                          1931  ; READ S-RECORD
00F00E22                          1932  ; D5 = BYTE CHECK SUM FOR EACH RECORD
00F00E22                          1933  ; D4 = NUMBER OF BYTE RECEIVED
00F00E22                          1934  
00F00E22  47F9 00F018F3           1935  READ_S_REC      LEA.L LOAD.L,A3
00F00E28  6100 FF46               1936                  BSR PSTR
00F00E2C  4284                    1937                  CLR.L D4     ; CLEAR NUMBER OF BYTE 
00F00E2E  4285                    1938                  CLR.L D5     ; CLEAR CHECK SUM AND ERROR BYTE
00F00E30                          1939  
00F00E30  6100 FF18               1940  READ_S_REC1     BSR CINS
00F00E34  B03C 0053               1941                  CMP.B #'S',D0
00F00E38  6602                    1942                  BNE.S CHECK_ESC
00F00E3A  6008                    1943                  BRA.S GET_TYPE
00F00E3C                          1944  
00F00E3C                          1945  
00F00E3C  B03C 001B               1946  CHECK_ESC       CMP.B #ESC,D0
00F00E40  66EE                    1947                  BNE.S READ_S_REC1
00F00E42                          1948  
00F00E42  4E75                    1949                  RTS
00F00E44                          1950  
00F00E44                          1951  
00F00E44  6100 FF04               1952  GET_TYPE        BSR CINS
00F00E48  B03C 0038               1953                  CMP.B #'8',D0
00F00E4C  6600 003A               1954                  BNE CHECK_START
00F00E50                          1955  
00F00E50  6100 FEF8               1956  WAIT_CR         BSR CINS
00F00E54  B03C 000D               1957                  CMP.B #CR,D0
00F00E58  66F6                    1958                  BNE.S WAIT_CR
00F00E5A                          1959  
00F00E5A  6100 FF22               1960                  BSR NEW_LINE
00F00E5E  6100 FF1E               1961                  BSR NEW_LINE
00F00E62  2004                    1962                  MOVE.L D4,D0
00F00E64  6100 0324               1963                  BSR PRINT_DEC     ; SHOW NUMBER OF BYTE RECEIVED
00F00E68  267C 00F0192B           1964                  MOVEA.L #NUMBER,A3
00F00E6E  6100 FF00               1965                  BSR PSTR
00F00E72                          1966  
00F00E72  4845                    1967                  SWAP.W D5
00F00E74  4280                    1968                  CLR.L D0
00F00E76  3005                    1969                  MOVE.W D5,D0
00F00E78  6100 0310               1970                  BSR PRINT_DEC
00F00E7C  267C 00F0193B           1971                  MOVEA.L #ERROR,A3
00F00E82  6100 FEEC               1972                  BSR PSTR
00F00E86  4E75                    1973                  RTS
00F00E88                          1974  
00F00E88                          1975  
00F00E88  B03C 0032               1976  CHECK_START     CMP.B #'2',D0   ; CHECK S2 RECORD
00F00E8C  673C                    1977                  BEQ.S READ_S2
00F00E8E                          1978  
00F00E8E  B03C 0031               1979                  CMP.B #'1',D0   ; CHECK S1 RECORD
00F00E92  6716                    1980                  BEQ.S READ_S1
00F00E94                          1981  
00F00E94  B03C 0030               1982                  CMP.B #'0',D0   ; CHECK S0 RECORD
00F00E98  6796                    1983                  BEQ.S READ_S_REC1   ; SKIP DATA
00F00E9A  6094                    1984                  BRA.S READ_S_REC1   ; SKIP DATA
00F00E9C                          1985  
00F00E9C                          1986  
00F00E9C  4245                    1987  START_FOUND     CLR.W D5          ; CLEAR BYTE CHECK SUM
00F00E9E                          1988  
00F00E9E  6100 FF6E               1989                  BSR GET_HEXS
00F00EA2  4287                    1990                  CLR.L D7
00F00EA4  1E01                    1991                  MOVE.B D1,D7       ; NUMBER OF BYTE SAVED TO D7
00F00EA6                          1992                  ;SUBQ.B #5,D7
00F00EA6                          1993                  ;MOVE.L D7,D0
00F00EA6                          1994  
00F00EA6  DA01                    1995                  ADD.B  D1,D5       ; ADD CHECK SUM
00F00EA8  4E75                    1996          RTS
00F00EAA                          1997  
00F00EAA                          1998  ;S1 (2 BYTE ADDRESS)
00F00EAA  61F0                    1999  READ_S1     BSR START_FOUND
00F00EAC                          2000  
00F00EAC  5907                    2001                SUBQ.B #4,D7
00F00EAE  2007                    2002                MOVE.L D7,D0
00F00EB0                          2003  
00F00EB0                          2004  ; GET 16-BIT ADDRESS, SAVE TO A6
00F00EB0                          2005  
00F00EB0  4286                    2006                CLR.L D6
00F00EB2  6100 FF5A               2007                BSR GET_HEXS
00F00EB6  1C01                    2008                MOVE.B D1,D6
00F00EB8  DA01                    2009                ADD.B  D1,D5          ; ADD CHECK SUM
00F00EBA                          2010  
00F00EBA  E19E                    2011                ROL.L #8,D6
00F00EBC  6100 FF50               2012                BSR GET_HEXS
00F00EC0  1C01                    2013                MOVE.B D1,D6
00F00EC2  DA01                    2014                ADD.B D1,D5           ; ADD CHECK SUM
00F00EC4                          2015  
00F00EC4  2C46                    2016                MOVEA.L D6,A6
00F00EC6  6000 0028               2017                BRA READ_DATA           
00F00ECA                          2018  
00F00ECA                          2019  
00F00ECA                          2020  ;S2 (3 BYTE ADDRESS)
00F00ECA  61D0                    2021  READ_S2       BSR START_FOUND                
00F00ECC                          2022  
00F00ECC  5B07                    2023                SUBQ.B #5,D7
00F00ECE  2007                    2024                MOVE.L D7,D0
00F00ED0                          2025  
00F00ED0                          2026  ; GET 24-BIT ADDRESS, SAVE TO A6
00F00ED0                          2027  
00F00ED0  4286                    2028                CLR.L D6
00F00ED2  6100 FF3A               2029                BSR GET_HEXS
00F00ED6  1C01                    2030                MOVE.B D1,D6
00F00ED8  DA01                    2031                ADD.B  D1,D5
00F00EDA                          2032  
00F00EDA  E19E                    2033                ROL.L #8,D6
00F00EDC  6100 FF30               2034                BSR GET_HEXS
00F00EE0  1C01                    2035                MOVE.B D1,D6
00F00EE2  DA01                    2036                ADD.B D1,D5
00F00EE4                          2037  
00F00EE4  E19E                    2038                ROL.L #8,D6
00F00EE6                          2039  
00F00EE6  6100 FF26               2040                BSR GET_HEXS
00F00EEA  1C01                    2041                MOVE.B D1,D6
00F00EEC  DA01                    2042                ADD.B D1,D5
00F00EEE                          2043  
00F00EEE  2C46                    2044                MOVEA.L D6,A6
00F00EF0                          2045                           
00F00EF0  6100 FF1C               2046  READ_DATA     BSR GET_HEXS
00F00EF4  DA01                    2047                ADD.B  D1,D5      ; ADD CHECK SUM
00F00EF6  1CC1                    2048                MOVE.B D1,(A6)+
00F00EF8                          2049  
00F00EF8  4601                    2050                not.b d1          ; complement before sending
00F00EFA                          2051  
00F00EFA                          2052                ;MOVE.B D1,DOUT.L  ; INDICATOR WHILE LOADING
00F00EFA                          2053  
00F00EFA  5284                    2054                ADDQ.L #1,D4      ; BUMP NUMBER OF BYTE RECEIVED
00F00EFC  51CF FFF2               2055                DBF D7,READ_DATA
00F00F00                          2056  
00F00F00  4605                    2057                NOT.B D5          ; ONE'S COMPLEMENT OF BYTE CHECK SUM         
00F00F02                          2058  
00F00F02  6100 FF0A               2059                BSR GET_HEXS      ; GET BYTE CHECK SUM
00F00F06                          2060  
00F00F06  BA01                    2061                CMP.B D1,D5       ; COMPARE CHECK SUM
00F00F08  670C                    2062                BEQ.S NO_ERROR
00F00F0A                          2063  
00F00F0A  0685 00010000           2064                ADD.L #$10000,D5  ; ADD 1 TO UPPER WORD
00F00F10  103C 0058               2065                MOVE.B #'X',D0    ; IF NOT EQUAL SEND 'X' FOR ERROR
00F00F14  6004                    2066                BRA.S CHECKSUM_ERROR
00F00F16                          2067  
00F00F16  103C 005F               2068  NO_ERROR      MOVE.B #'_',D0      ; '_' NO ERROR RECORD
00F00F1A  6100 FE1C               2069  CHECKSUM_ERROR BSR COUT
00F00F1E                          2070  
00F00F1E  6000 FF10               2071                BRA READ_S_REC1
00F00F22                          2072  
00F00F22                          2073  
00F00F22  6100 FE38               2074  LOOP_BACK     BSR CIN
00F00F26  B03C 000D               2075                CMP.B #13,D0
00F00F2A  66F6                    2076                BNE LOOP_BACK
00F00F2C  4E75                    2077                RTS
00F00F2E                          2078  
00F00F2E                          2079  
00F00F2E                          2080  
00F00F2E                          2081  ; PRINT HEX 
00F00F2E                          2082  ; OUT1X = PRINT ONE HEX
00F00F2E                          2083  ; OUT2X = PRINT TWO
00F00F2E                          2084  ; OUT4X = PRINT FOUR
00F00F2E                          2085  ; OUT8X = PRINT EIGHT
00F00F2E                          2086  ; ENTRY: D0
00F00F2E                          2087  
00F00F2E  1F00                    2088  OUT1X        MOVE.B D0,-(SP)    ;SAVE D0
00F00F30  C03C 000F               2089               AND.B #$F,D0
00F00F34  0600 0030               2090               ADD.B #'0',D0
00F00F38  B03C 0039               2091               CMP.B #'9',D0
00F00F3C  6302                    2092               BLS.S   OUT1X1
00F00F3E  5E00                    2093               ADD.B #7,D0
00F00F40  6100 FDF6               2094  OUT1X1       BSR COUT
00F00F44  101F                    2095               MOVE.B (SP)+,D0    ;RESTORE D0
00F00F46  4E75                    2096               RTS
00F00F48                          2097  
00F00F48  E818                    2098  OUT2X        ROR.B #4,D0
00F00F4A  61E2                    2099               BSR.S OUT1X
00F00F4C  E918                    2100               ROL.B #4,D0
00F00F4E  60DE                    2101               BRA OUT1X
00F00F50                          2102  
00F00F50  E058                    2103  OUT4X        ROR.W #8,D0
00F00F52  61F4                    2104               BSR.S OUT2X
00F00F54  E158                    2105               ROL.W #8,D0
00F00F56  60F0                    2106               BRA.S OUT2X
00F00F58                          2107  
00F00F58  4840                    2108  OUT6X        SWAP.W D0        ; OUT 24-BIT HEX NUMBER
00F00F5A  61EC                    2109               BSR.S OUT2X
00F00F5C  4840                    2110               SWAP.W D0
00F00F5E  60F0                    2111               BRA.S OUT4X
00F00F60                          2112  
00F00F60  4840                    2113  OUT8X        SWAP.W D0        ; OUT 32-BIT HEX NUMBER
00F00F62  61EC                    2114               BSR.S  OUT4X
00F00F64  4840                    2115               SWAP.W D0
00F00F66  60E8                    2116               BRA.S  OUT4X
00F00F68                          2117  
00F00F68                          2118  
00F00F68                          2119  ; PRINT D0 CONTENT
00F00F68                          2120  
00F00F68  61F6                    2121  PRINT_D0  BSR.S OUT8X
00F00F6A  4E75                    2122            RTS
00F00F6C                          2123  
00F00F6C                          2124  ; HEX DUMP
00F00F6C                          2125  ; DUMP MEMORY CONTENT
00F00F6C                          2126  ; A3: START ADDRESS
00F00F6C                          2127  
00F00F6C  47F9 00F018AA           2128  HEX_DUMP    LEA.L HEX.L,A3
00F00F72  6100 FDFC               2129              BSR PSTR
00F00F76                          2130  
00F00F76  2C79 000000C0           2131              MOVEA.L RAMBASE.L,A6
00F00F7C  266E 00A6               2132              MOVEA.L POINTER_NOW(A6),A3
00F00F80  3C3C 000F               2133              MOVE.W #15,D6
00F00F84  6100 FDF8               2134              BSR NEW_LINE
00F00F88                          2135  
00F00F88  6100 FDF4               2136  HEX_DUMP2   BSR NEW_LINE
00F00F8C  200B                    2137              MOVE.L A3,D0
00F00F8E  61C8                    2138              BSR OUT6X
00F00F90  6100 FDFE               2139              BSR SPACE
00F00F94  6100 FDFA               2140              BSR SPACE
00F00F98                          2141  
00F00F98  3E3C 000F               2142              MOVE.W #15,D7
00F00F9C                          2143  
00F00F9C  101B                    2144  HEX_DUMP1   MOVE.B (A3)+,D0
00F00F9E  61A8                    2145              BSR OUT2X
00F00FA0  6100 FDEE               2146              BSR SPACE
00F00FA4                          2147  
00F00FA4  51CF FFF6               2148              DBF D7,HEX_DUMP1
00F00FA8                          2149  
00F00FA8  6100 FDE6               2150              BSR SPACE
00F00FAC  97FC 00000010           2151              SUBA.L #16,A3       ; GET BACK TO BEGINING 
00F00FB2  3E3C 000F               2152              MOVE.W #15,D7
00F00FB6                          2153  
00F00FB6  101B                    2154  HEX_DUMP6   MOVE.B (A3)+,D0
00F00FB8                          2155  
00F00FB8  B03C 0020               2156              CMP.B #$20,D0
00F00FBC  6C06                    2157              BGE.S HEX_DUMP3
00F00FBE                          2158  
00F00FBE  103C 002E               2159  HEX_DUMP4   MOVE.B #'.',D0
00F00FC2  6006                    2160              BRA.S  HEX_DUMP5
00F00FC4                          2161  
00F00FC4  B03C 007F               2162  HEX_DUMP3   CMP.B #$7F,D0
00F00FC8  6EF4                    2163              BGT.S HEX_DUMP4
00F00FCA                          2164  
00F00FCA  6100 FD6C               2165  HEX_DUMP5   BSR COUT
00F00FCE  51CF FFE6               2166              DBF D7,HEX_DUMP6
00F00FD2                          2167  
00F00FD2                          2168  
00F00FD2  51CE FFB4               2169              DBF D6,HEX_DUMP2
00F00FD6                          2170  
00F00FD6  2D4B 00A6               2171              MOVE.L A3,POINTER_NOW(A6)   ; UPDATE POINTER_NOW
00F00FDA  6100 FDA2               2172              BSR NEW_LINE
00F00FDE  4E75                    2173              RTS
00F00FE0                          2174  
00F00FE0                          2175  
00F00FE0                          2176  ; NEW POINTER
00F00FE0                          2177  ; CHANGE 24-BIT ADDRESS-> POINTER_NOW
00F00FE0                          2178  
00F00FE0  47F9 00F01871           2179  NEW_POINTER   LEA.L NEW.L,A3
00F00FE6  6100 FD88               2180                BSR PSTR
00F00FEA                          2181  
00F00FEA  6100 FDB8               2182                BSR SEND_PROMPT
00F00FEE                          2183  
00F00FEE  2C79 000000C0           2184                MOVEA.L RAMBASE.L,A6
00F00FF4  4286                    2185                CLR.L D6
00F00FF6  6100 FDE6               2186                BSR GET_HEX
00F00FFA  1C01                    2187                MOVE.B D1,D6
00F00FFC  E19E                    2188                ROL.L #8,D6
00F00FFE  6100 FDDE               2189                BSR GET_HEX
00F01002  1C01                    2190                MOVE.B D1,D6
00F01004  E19E                    2191                ROL.L #8,D6
00F01006  6100 FDD6               2192                BSR GET_HEX
00F0100A  1C01                    2193                MOVE.B D1,D6
00F0100C                          2194  
00F0100C  0886 0000               2195                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00F01010                          2196  
00F01010  2D46 00A6               2197                MOVE.L D6,POINTER_NOW(A6)
00F01014  4E75                    2198                RTS
00F01016                          2199  
00F01016  6100 FD66               2200  PRINT_DEBUG   BSR NEW_LINE
00F0101A  202E 0020               2201                MOVE.L DEBUG(A6),D0
00F0101E  6100 FF40               2202                BSR OUT8X
00F01022  4E75                    2203                RTS
00F01024                          2204  
00F01024  47F9 00F01883           2205  QUICK_HOME    LEA.L QUICK.L,A3
00F0102A  6100 FD44               2206                BSR PSTR
00F0102E  2C79 000000C0           2207                MOVEA.L RAMBASE.L,A6
00F01034  2D7C 00000000 00A6      2208                MOVE.L #RAM,POINTER_NOW(A6)
00F0103C  4E75                    2209                RTS  
00F0103E                          2210  
00F0103E                          2211  ; TEST RAM
00F0103E                          2212  
00F0103E                          2213  ; GET 32BIT DATA
00F0103E                          2214  ; EXIT: D6 CONTAINS 32-BIT ADDRESS
00F0103E                          2215  
00F0103E  4286                    2216  GET_32BIT     CLR.L D6
00F01040  6100 FD9C               2217                BSR GET_HEX
00F01044  1C01                    2218                MOVE.B D1,D6
00F01046  E19E                    2219                ROL.L #8,D6
00F01048  6100 FD94               2220                BSR GET_HEX
00F0104C  1C01                    2221                MOVE.B D1,D6
00F0104E  E19E                    2222                ROL.L #8,D6
00F01050  6100 FD8C               2223                BSR GET_HEX
00F01054  1C01                    2224                MOVE.B D1,D6
00F01056  E19E                    2225                ROL.L #8,D6
00F01058  6100 FD84               2226                BSR GET_HEX
00F0105C  1C01                    2227                MOVE.B D1,D6
00F0105E  4E75                    2228                RTS
00F01060                          2229  
00F01060                          2230  
00F01060                          2231  ; GET_ADDRESS
00F01060                          2232  ; EXIT: D6 CONTAINS 24-BIT ADDRESS
00F01060                          2233  
00F01060  4286                    2234  GET_ADDRESS   CLR.L D6
00F01062  6100 FD7A               2235                BSR GET_HEX
00F01066                          2236  
00F01066  1C01                    2237  GET_ADDRESS1  MOVE.B D1,D6
00F01068  E19E                    2238                ROL.L #8,D6
00F0106A  6100 FD72               2239                BSR GET_HEX
00F0106E  1C01                    2240                MOVE.B D1,D6
00F01070  E19E                    2241                ROL.L #8,D6
00F01072  6100 FD6A               2242                BSR GET_HEX
00F01076  1C01                    2243                MOVE.B D1,D6
00F01078  4E75                    2244                RTS
00F0107A                          2245  
00F0107A  4E75                    2246  TEST_RAM      RTS
00F0107C                          2247  
00F0107C                          2248  ; FILL MEMORY WITH 0xFF
00F0107C                          2249  
00F0107C  47F9 00F017E9           2250  FILL_MEMORY   LEA.L FILL.L,A3
00F01082  6100 FCEC               2251                BSR PSTR
00F01086                          2252  
00F01086  47F9 00F01800           2253                LEA.L START.L,A3
00F0108C  6100 FCE2               2254                BSR PSTR
00F01090  61CE                    2255                BSR GET_ADDRESS
00F01092  2846                    2256                MOVEA.L D6,A4             ; A4 START ADDRESS
00F01094                          2257  
00F01094  47F9 00F01812           2258                LEA.L STOP.L,A3
00F0109A  6100 FCD4               2259                BSR PSTR
00F0109E  61C0                    2260                BSR GET_ADDRESS
00F010A0  2A46                    2261                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00F010A2                          2262  
00F010A2  38FC FFFF               2263  FILL_MEMORY1  MOVE.W #$FFFF,(A4)+
00F010A6  BBCC                    2264                CMPA.L A4,A5
00F010A8  6CF8                    2265                BGE.S FILL_MEMORY1
00F010AA                          2266  
00F010AA  267C 00F01823           2267                MOVEA.L #DONE,A3
00F010B0  6100 FCBE               2268                BSR PSTR
00F010B4  4E75                    2269                RTS
00F010B6                          2270  
00F010B6                          2271  ; CLEAR MEMORY WITH 0x00
00F010B6                          2272  
00F010B6  47F9 00F017D1           2273  CLEAR_MEMORY  LEA.L CLEAR.L,A3
00F010BC  6100 FCB2               2274                BSR PSTR
00F010C0                          2275  
00F010C0  47F9 00F01800           2276                LEA.L START.L,A3
00F010C6  6100 FCA8               2277                BSR PSTR
00F010CA  6194                    2278                BSR GET_ADDRESS
00F010CC  2846                    2279                MOVEA.L D6,A4             ; A4 START ADDRESS
00F010CE                          2280  
00F010CE  47F9 00F01812           2281                LEA.L STOP.L,A3
00F010D4  6100 FC9A               2282                BSR PSTR
00F010D8  6186                    2283                BSR GET_ADDRESS
00F010DA  2A46                    2284                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00F010DC                          2285  
00F010DC  38FC 0000               2286  CLEAR_MEMORY1 MOVE.W #$0000,(A4)+
00F010E0  BBCC                    2287                CMPA.L A4,A5
00F010E2  6CF8                    2288                BGE.S CLEAR_MEMORY1
00F010E4                          2289  
00F010E4  267C 00F01823           2290                MOVEA.L #DONE,A3
00F010EA  6100 FC84               2291                BSR PSTR
00F010EE  4E75                    2292                RTS
00F010F0                          2293  
00F010F0                          2294  ; EDIT MEMORY
00F010F0                          2295  ; PRESS SPACE BAR TO QUIT
00F010F0                          2296  
00F010F0  47F9 00F0182D           2297  EDIT_MEMORY   LEA.L EDIT1.L,A3
00F010F6  6100 FC78               2298                BSR PSTR
00F010FA                          2299  
00F010FA  47F9 00F0185F           2300                LEA.L EDIT.L,A3
00F01100  6100 FC6E               2301                BSR PSTR
00F01104  6100 FF5A               2302                BSR GET_ADDRESS
00F01108                          2303  
00F01108  0886 0000               2304                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00F0110C  2646                    2305                MOVEA.L D6,A3       ; EDIT ADDRESS
00F0110E                          2306  
00F0110E                          2307               ; MOVEA.L POINTER_NOW.L,A3
00F0110E                          2308  
00F0110E  6100 FC6E               2309  EDIT_MEMORY2  BSR NEW_LINE
00F01112  200B                    2310                MOVE.L A3,D0
00F01114  6100 FE42               2311                BSR OUT6X
00F01118  6100 FC76               2312                BSR SPACE
00F0111C  6100 FC72               2313                BSR SPACE
00F01120                          2314  
00F01120  103C 005B               2315                MOVE.B #'[',D0
00F01124  6100 FC12               2316                BSR COUT
00F01128  3013                    2317                MOVE.W (A3),D0
00F0112A  6100 FE24               2318                BSR OUT4X
00F0112E  103C 005D               2319                MOVE.B #']',D0
00F01132  6100 FC04               2320                BSR COUT
00F01136                          2321  
00F01136  6100 FC58               2322                BSR SPACE
00F0113A                          2323  
00F0113A  4241                    2324                CLR.W D1
00F0113C  6100 FCA0               2325                BSR GET_HEX
00F01140                          2326  
00F01140  08AE 0000 0024          2327                BCLR.B #BIT_ESC,FLAG(A6)  ; TEST BIT_ESC BIT
00F01146  6630                    2328                BNE.S EDIT_MEMORY3  ; IF BIT = 1 THEN EXIT
00F01148                          2329  
00F01148  08AE 0001 0024          2330                BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00F0114E  6624                    2331                BNE.S EDIT_MEMORY4  ; SKIP WRITE TO RAM
00F01150                          2332  
00F01150  E159                    2333                ROL.W #8,D1
00F01152  6100 FC8A               2334                BSR GET_HEX
00F01156                          2335  
00F01156  36BC 0000               2336                MOVE.W #0,(A3)
00F0115A                          2337  
00F0115A  3013                    2338                MOVE.W (A3),D0   ; TEST RAM OR ROM BY WRITING 0 AND READ BACK
00F0115C  B07C 0000               2339                CMP.W #0,D0
00F01160  6604                    2340                BNE.S EDIT_MEMORY5
00F01162                          2341  
00F01162  3681                    2342                MOVE.W D1,(A3)     ; OK WRITE TO RAM
00F01164  600E                    2343                BRA.S EDIT_MEMORY4 
00F01166                          2344  
00F01166  2F0B                    2345  EDIT_MEMORY5  MOVE.L A3,-(SP)
00F01168  47F9 00F0186B           2346                LEA.L ROM.L,A3
00F0116E  6100 FC00               2347                BSR PSTR
00F01172  265F                    2348                MOVEA.L (SP)+,A3
00F01174                          2349  
00F01174  548B                    2350  EDIT_MEMORY4  ADDQ.L #2,A3     ; BUMP A3
00F01176                          2351  
00F01176  6096                    2352                BRA.S EDIT_MEMORY2
00F01178                          2353  
00F01178  6100 FC04               2354  EDIT_MEMORY3  BSR NEW_LINE
00F0117C  4E75                    2355                RTS
00F0117E                          2356  
00F0117E                          2357  
00F0117E                          2358  ; HELP LIST MONITOR COMMANDS
00F0117E                          2359  
00F0117E  47F9 00F01B14           2360  HELP          LEA.L HELP_LIST.L,A3
00F01184  6100 FBEA               2361                BSR PSTR
00F01188  4E75                    2362                RTS
00F0118A                          2363  
00F0118A                          2364  ;----------------------------------------------------------------------
00F0118A                          2365  ; PRINT_DEC
00F0118A                          2366  ; D0 32-BIT BINARY NUMBER
00F0118A                          2367  
00F0118A  2F00                    2368  PRINT_DEC MOVE.L D0,-(SP)  ; SAVE D0
00F0118C  2C79 000000C0           2369            MOVEA.L RAMBASE.L,A6
00F01192  DDFC 00000026           2370            ADDA.L #BUFFER,A6
00F01198  6100 0016               2371            BSR HEX2DEC
00F0119C  2679 000000C0           2372            MOVEA.L RAMBASE.L,A3
00F011A2  D7FC 00000026           2373            ADDA.L #BUFFER,A3
00F011A8  6100 FBC6               2374            BSR PSTR
00F011AC  201F                    2375            MOVE.L (SP)+,D0 ; RESTORE D0
00F011AE  4E75                    2376            RTS
00F011B0                          2377  
00F011B0                          2378  ;**************************************************************************
00F011B0                          2379  ; The portion of code within STAR lines are modified from Tutor source code
00F011B0                          2380  ;
00F011B0                          2381  ;
00F011B0                          2382  ; HEX2DEC   HEX2DEC convert hex to decimal                   
00F011B0                          2383  ; CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A6) BUFFER AS ASCII
00F011B0                          2384  
00F011B0  48E7 7F00               2385  HEX2DEC  MOVEM.L D1-D7,-(SP)   ;SAVE REGISTERS
00F011B4  2E00                    2386           MOVE.L  D0,D7               ;SAVE IT HERE
00F011B6  6A08                    2387           BPL.S   HX2DC
00F011B8  4487                    2388           NEG.L   D7             ;CHANGE TO POSITIVE
00F011BA  6B4E                    2389           BMI.S   HX2DC57        ;SPECIAL CASE (-0)
00F011BC  1CFC 002D               2390           MOVE.B  #'-',(A6)+     ;PUT IN NEG SIGN
00F011C0  4244                    2391  HX2DC    CLR.W   D4             ;FOR ZERO SURPRESS
00F011C2  7C0A                    2392           MOVEQ.L   #10,D6         ;COUNTER
00F011C4  7401                    2393  HX2DC0   MOVEQ.L   #1,D2          ;VALUE TO SUB
00F011C6  2206                    2394           MOVE.L  D6,D1          ;COUNTER
00F011C8  5381                    2395           SUBQ.L  #1,D1          ;ADJUST - FORM POWER OF TEN
00F011CA  671A                    2396           BEQ.S   HX2DC2         ;IF POWER IS ZERO
00F011CC  3602                    2397  HX2DC1   MOVE.W  D2,D3          ;D3=LOWER WORD
00F011CE  C6FC 000A               2398           MULU.W    #10,D3
00F011D2  4842                    2399           SWAP.W    D2             ;D2=UPPER WORD
00F011D4  C4FC 000A               2400           MULU.W    #10,D2
00F011D8  4843                    2401           SWAP.W    D3             ;ADD UPPER TO UPPER
00F011DA  D443                    2402           ADD.W   D3,D2
00F011DC  4842                    2403           SWAP.W    D2             ;PUT UPPER IN UPPER
00F011DE  4843                    2404           SWAP.W    D3             ;PUT LOWER IN LOWER
00F011E0  3403                    2405           MOVE.W  D3,D2          ;D2=UPPER & LOWER
00F011E2  5381                    2406           SUBQ.L  #1,D1
00F011E4  66E6                    2407           BNE     HX2DC1
00F011E6  4280                    2408  HX2DC2   CLR.L   D0             ;HOLDS SUB AMT
00F011E8  BE82                    2409  HX2DC22  CMP.L   D2,D7
00F011EA  6D06                    2410           BLT.S   HX2DC3         ;IF NO MORE SUB POSSIBLE
00F011EC  5280                    2411           ADDQ.L  #1,D0          ;BUMP SUBS
00F011EE  9E82                    2412           SUB.L   D2,D7          ;COUNT DOWN BY POWERS OF TEN
00F011F0  60F6                    2413           BRA.S   HX2DC22        ;DO MORE
00F011F2  4A00                    2414  HX2DC3   TST.B   D0             ;ANY VALUE?
00F011F4  6604                    2415           BNE.S   HX2DC4
00F011F6  4A44                    2416           TST.W   D4             ;ZERO SURPRESS
00F011F8  6708                    2417           BEQ.S   HX2DC5
00F011FA  0600 0030               2418  HX2DC4   ADDI.B  #$30,D0        ;BINARY TO ASCII
00F011FE  1CC0                    2419           MOVE.B  D0,(A6)+       ;PUT IN BUFFER
00F01200  1800                    2420           MOVE.B  D0,D4          ;MARK AS NON ZERO SURPRESS
00F01202  5386                    2421  HX2DC5   SUBQ.L  #1,D6          ;NEXT POWER
00F01204  66BE                    2422           BNE     HX2DC0
00F01206  4A44                    2423           TST.W   D4             ;SEE IF ANYTHING PRINTED
00F01208  6604                    2424           BNE.S   HX2DC6
00F0120A  1CFC 0030               2425  HX2DC57  MOVE.B  #'0',(A6)+     ;PRINT AT LEST A ZERO
00F0120E  1CBC 0000               2426  HX2DC6   MOVE.B  #0,(A6)        ; PUT TERMINATOR
00F01212  4CDF 00FE               2427           MOVEM.L (SP)+,D1-D7   ;RESTORE REGISTERS
00F01216  4E75                    2428           RTS                    ;END OF ROUTINE
00F01218                          2429  
00F01218                          2430  *
00F01218                          2431  *  PRINT HEX ROUTINES
00F01218                          2432  *
00F01218                          2433  *
00F01218                          2434  * PRINT 8 HEX CHARACTERS
00F01218                          2435  *
00F01218                          2436  *  D0,D1,D2 DESTROYED
00F01218                          2437  *
00F01218  4840                    2438  PNT8HX   SWAP    D0             FLIP REG HALVES
00F0121A  610A                    2439           BSR.S   PNT4HX         DO TOP WORD
00F0121C  4840                    2440           SWAP    D0             NOW DO LOWER WORD
00F0121E  6006                    2441           BRA.S   PNT4HX
00F01220                          2442  * PRINT 6 HEX CHARACTERS
00F01220  4840                    2443  PNT6HX   SWAP    D0             FLIP REGISTER HALVES
00F01222  610A                    2444           BSR.S   PNT2HX
00F01224  4840                    2445           SWAP    D0             FLIP BACK REG HALVES
00F01226                          2446  * PRINT 4 HEX CHARACTERS IN D0.W
00F01226  3200                    2447  PNT4HX   MOVE.W  D0,D1          SAVE IN TEMP
00F01228  E058                    2448           ROR.W   #8,D0          GET BITS 15-8 INTO LOWER BYTE
00F0122A  6102                    2449           BSR.S   PNT2HX         PRINT IT
00F0122C  3001                    2450           MOVE.W  D1,D0          PULL IT BACK
00F0122E                          2451  * PRINT 2 HEX CHARACTERS IN D0.B
00F0122E  3400                    2452  PNT2HX   MOVE.W  D0,D2          SAVE IN TEMP REG
00F01230  E850                    2453           ROXR.W  #4,D0          FORM UPPER NIBBLE
00F01232  6102                    2454           BSR.S   PUTHEX         PUT ASCII INTO PRINT BUFFER
00F01234  3002                    2455           MOVE.W  D2,D0          GET BACK FROM TEMP
00F01236                          2456  * CONVERT D0.NIBBLE TO HEX & PUT IT IN PRINT BUFFER
00F01236                          2457  *
00F01236  0200 000F               2458  PUTHEX   ANDI.B  #$0F,D0        SAVE LOWER NIBBLE
00F0123A  0000 0030               2459           ORI.B   #$30,D0        CONVERT TO ASCII
00F0123E  0C00 0039               2460           CMPI.B  #$39,D0        SEE IF IT IS>9
00F01242  6F02                    2461           BLE.S   SAVHEX
00F01244  5E40                    2462           ADD     #7,D0          ADD TO MAKE 10=>A
00F01246  1CC0                    2463  SAVHEX   MOVE.B  D0,(A6)+       PUT IT IN PRINT BUFFER
00F01248  4E75                    2464           RTS
00F0124A                          2465  
00F0124A                          2466  * FORMAT RELATIVE ADDRESS  AAAAAA+Rn
00F0124A                          2467  *        ENTER     D0 = VALUE
00F0124A                          2468  *                  A6 = STORE POINTER
00F0124A                          2469  *
00F0124A  48E7 4780               2470  FRELADDR MOVEM.L D1/D5-D7/A0,-(A7)
00F0124E  2079 000000C0           2471           MOVEA.L RAMBASE.L,A0   ;LEA     OFFSET,A0
00F01254  7EFF                    2472           MOVEQ   #-1,D7         D7 = DIFF. BEST FIT
00F01256  4286                    2473           CLR.L   D6             D6 = OFFSET POSITION
00F01258                          2474  
00F01258  2200                    2475  FREL10   MOVE.L  D0,D1
00F0125A  4A90                    2476           TST.L   (A0)
00F0125C  670C                    2477           BEQ.S   FREL15         ZERO OFFSET
00F0125E  9290                    2478           SUB.L   (A0),D1        D1 = DIFF.
00F01260  6B08                    2479           BMI.S   FREL15         NO FIT
00F01262                          2480  
00F01262  B287                    2481           CMP.L   D7,D1
00F01264  6404                    2482           BCC.S   FREL15         OLD FIT BETTER
00F01266                          2483  
00F01266  2E01                    2484           MOVE.L  D1,D7          D7 = NEW BEST FIT
00F01268  2A06                    2485           MOVE.L  D6,D5          D5 = POSITION
00F0126A                          2486  
00F0126A  5888                    2487  FREL15   ADDQ.L  #4,A0
00F0126C  5286                    2488           ADDQ.L  #1,D6
00F0126E  0C46 0008               2489           CMPI.W  #8,D6
00F01272  66E4                    2490           BNE     FREL10         MORE OFFSETS TO CHECK
00F01274                          2491  
00F01274  4A87                    2492           TST.L   D7
00F01276  6B1E                    2493           BMI.S   FREL25         NO FIT
00F01278  4A46                    2494           TST     D6
00F0127A  6608                    2495           BNE.S   FREL20
00F0127C  4AB9 000000C0           2496           TST.L   RAMBASE.L      ;TST.L    OFFSET
00F01282  6712                    2497           BEQ.S   FREL25         R0 = 000000; NO FIT
00F01284                          2498  
00F01284  2007                    2499  FREL20   MOVE.L  D7,D0
00F01286  6198                    2500           BSR     PNT6HX         FORMAT OFFSET
00F01288  1CFC 002B               2501           MOVE.B  #'+',(A6)+     +
00F0128C  1CFC 0052               2502           MOVE.B  #'R',(A6)+     R
00F01290  0605 0030               2503           ADDI.B  #'0',D5        MAKE ASCII
00F01294  600A                    2504           BRA.S   FREL30
00F01296                          2505  
00F01296  6188                    2506  FREL25   BSR     PNT6HX         FORMAT ADDRESS AS IS
00F01298  1A3C 0020               2507           MOVE.B  #BLANK,D5
00F0129C  1CC5                    2508           MOVE.B  D5,(A6)+       THREE SPACES FOR ALIGNMENT
00F0129E  1CC5                    2509           MOVE.B  D5,(A6)+
00F012A0  1CC5                    2510  FREL30   MOVE.B  D5,(A6)+
00F012A2                          2511  
00F012A2  4CDF 01E2               2512           MOVEM.L (A7)+,D1/D5-D7/A0
00F012A6  4E75                    2513           RTS
00F012A8                          2514  
00F012A8                          2515  ;******************************************************************************
00F012A8                          2516  
00F012A8                          2517  
00F012A8                          2518  ; DISPLAY USER REGISTERS D0-D7 AND A0-A7
00F012A8                          2519  ;
00F012A8                          2520  
00F012A8  47F9 00F01974           2521  DISPLAY_REG  LEA.L REGISTER_DISP.L,A3
00F012AE  6100 FAC0               2522               BSR PSTR
00F012B2                          2523  
00F012B2  2C79 000000C0           2524  DISPLAY_REG1 MOVEA.L RAMBASE.L,A6
00F012B8  6100 FAC4               2525               BSR NEW_LINE
00F012BC  6100 FAC0               2526               BSR NEW_LINE
00F012C0  267C 00F01AFD           2527               MOVEA.L #PC_REG,A3
00F012C6  6100 FAA8               2528               BSR PSTR
00F012CA  202E 00F0               2529               MOVE.L USER_PC(A6),D0
00F012CE  6100 FC88               2530               BSR OUT6X
00F012D2                          2531  
00F012D2  6100 FABC               2532               BSR SPACE
00F012D6                          2533  
00F012D6  267C 00F01B01           2534               MOVEA.L #SR_REG,A3
00F012DC  6100 FA92               2535               BSR PSTR
00F012E0  302E 00EA               2536               MOVE.W USER_SR(A6),D0
00F012E4  6100 FC6A               2537               BSR OUT4X
00F012E8                          2538  
00F012E8                          2539  ; NOW PRINT FLAG LOGIC IN BINARY
00F012E8  1800                    2540               MOVE.B D0,D4       ; SAVE TO D4
00F012EA                          2541  
00F012EA  E70C                    2542               LSL.B #3,D4        ; BIT POSITION BEFORE SHIFTING OUT
00F012EC                          2543  
00F012EC  6100 FAA2               2544               BSR SPACE
00F012F0  267C 00F01B11           2545               MOVEA.L #X_FLAG,A3
00F012F6  6100 FA78               2546               BSR PSTR
00F012FA  E30C                    2547               LSL.B #1,D4
00F012FC  6100 00DA               2548               BSR PRINT_BIT
00F01300                          2549  
00F01300  6100 FA8E               2550               BSR SPACE
00F01304  267C 00F01B0E           2551               MOVEA.L #N_FLAG,A3
00F0130A  6100 FA64               2552               BSR PSTR
00F0130E  E30C                    2553               LSL.B #1,D4
00F01310  6100 00C6               2554               BSR PRINT_BIT
00F01314                          2555  
00F01314  6100 FA7A               2556               BSR SPACE
00F01318  267C 00F01B0B           2557               MOVEA.L #Z_FLAG,A3
00F0131E  6100 FA50               2558               BSR PSTR
00F01322  E30C                    2559               LSL.B #1,D4
00F01324  6100 00B2               2560               BSR PRINT_BIT
00F01328                          2561  
00F01328  6100 FA66               2562               BSR SPACE
00F0132C  267C 00F01B08           2563               MOVEA.L #V_FLAG,A3
00F01332  6100 FA3C               2564               BSR PSTR
00F01336  E30C                    2565               LSL.B #1,D4
00F01338  6100 009E               2566               BSR PRINT_BIT
00F0133C                          2567  
00F0133C  6100 FA52               2568               BSR SPACE
00F01340  267C 00F01B05           2569               MOVEA.L #CARRY_FLAG,A3
00F01346  6100 FA28               2570               BSR PSTR
00F0134A  E30C                    2571               LSL.B #1,D4
00F0134C  6100 008A               2572               BSR PRINT_BIT
00F01350                          2573  
00F01350                          2574  
00F01350  6100 FA2C               2575               BSR NEW_LINE
00F01354  143C 0000               2576               MOVE.B #0,D2
00F01358                          2577  
00F01358  2C79 000000C0           2578               MOVEA.L RAMBASE.L,A6
00F0135E                          2579  
00F0135E  47EE 00AA               2580               LEA.L USER_DATA(A6),A3
00F01362                          2581  
00F01362  103C 0044               2582  REG1         MOVE.B #'D',D0
00F01366  6100 F9D0               2583               BSR COUT
00F0136A  1002                    2584               MOVE.B D2,D0
00F0136C  6100 FBC0               2585               BSR OUT1X
00F01370  103C 003D               2586               MOVE.B #'=',D0
00F01374  6100 F9C2               2587               BSR COUT
00F01378                          2588  
00F01378  201B                    2589               MOVE.L (A3)+,D0
00F0137A  6100 FBE4               2590               BSR OUT8X
00F0137E  5202                    2591               ADDQ.B #1,D2
00F01380  0C02 0008               2592               CMPI.B #8,D2
00F01384  6710                    2593               BEQ.S REG4
00F01386  6100 FA08               2594               BSR SPACE
00F0138A                          2595  
00F0138A  0C02 0004               2596               CMPI.B #4,D2
00F0138E  66D2                    2597               BNE.S REG1
00F01390  6100 F9EC               2598               BSR NEW_LINE
00F01394  60CC                    2599               BRA.S REG1
00F01396                          2600  
00F01396  6100 F9E6               2601  REG4         BSR NEW_LINE
00F0139A  143C 0000               2602               MOVE.B #0,D2
00F0139E                          2603  
00F0139E  103C 0041               2604  REG3         MOVE.B #'A',D0
00F013A2  6100 F994               2605               BSR COUT
00F013A6  1002                    2606               MOVE.B D2,D0
00F013A8  6100 FB84               2607               BSR OUT1X
00F013AC  103C 003D               2608               MOVE.B #'=',D0
00F013B0  6100 F986               2609               BSR COUT
00F013B4                          2610  
00F013B4  201B                    2611               MOVE.L (A3)+,D0
00F013B6  6100 FBA8               2612               BSR OUT8X
00F013BA  5202                    2613               ADDQ.B #1,D2
00F013BC  0C02 0008               2614               CMPI.B #8,D2
00F013C0  6710                    2615               BEQ.S REG2
00F013C2  6100 F9CC               2616               BSR SPACE
00F013C6                          2617  
00F013C6  0C02 0004               2618               CMPI.B #4,D2
00F013CA  66D2                    2619               BNE.S REG3
00F013CC  6100 F9B0               2620               BSR NEW_LINE
00F013D0  60CC                    2621               BRA.S REG3
00F013D2                          2622  
00F013D2  6100 F9AA               2623  REG2         BSR NEW_LINE
00F013D6  4E75                    2624               RTS
00F013D8                          2625  
00F013D8                          2626  
00F013D8                          2627  
00F013D8                          2628  
00F013D8                          2629  ; SEND '0' OR '1' TO SCREEN
00F013D8                          2630  
00F013D8  650A                    2631  PRINT_BIT   BCS.S WRITE_1
00F013DA  103C 0030               2632              MOVE.B #'0',D0
00F013DE  6100 F958               2633              BSR COUT
00F013E2  4E75                    2634              RTS
00F013E4                          2635  
00F013E4  103C 0031               2636  WRITE_1     MOVE.B #'1',D0
00F013E8  6100 F94E               2637              BSR COUT
00F013EC  4E75                    2638              RTS
00F013EE                          2639  
00F013EE                          2640  ; JUMP TO USER PROGRAM
00F013EE                          2641  ; 
00F013EE                          2642  
00F013EE  47F9 00F01955           2643  JUMP       LEA.L JUMP_TO.L,A3
00F013F4  6100 F97A               2644             BSR PSTR
00F013F8                          2645  
00F013F8  2C79 000000C0           2646             MOVEA.L RAMBASE.L,A6
00F013FE  202E 00F0               2647             MOVE.L USER_PC(A6),D0
00F01402  6100 FB54               2648             BSR OUT6X
00F01406  103C 003E               2649             MOVE.B #'>',D0
00F0140A                          2650  
00F0140A  6100 F92C               2651             BSR COUT
00F0140E                          2652  
00F0140E  6100 F9CE               2653             BSR GET_HEX
00F01412                          2654  
00F01412  08AE 0000 0024          2655             BCLR.B #BIT_ESC,FLAG(A6) ; TEST BIT_ESC BIT
00F01418  6614                    2656             BNE.S ABORT             ; IF BIT = 1 THEN EXIT
00F0141A                          2657  
00F0141A  08AE 0001 0024          2658             BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00F01420  660E                    2659             BNE.S JUMP1         ; RUN USER PROGRAM
00F01422                          2660  
00F01422  4286                    2661             CLR.L D6
00F01424  6100 FC40               2662             BSR GET_ADDRESS1
00F01428                          2663  
00F01428                          2664  ; GOT D6 FOR DESTINATION
00F01428                          2665  
00F01428  2D46 00F0               2666             MOVE.L D6,USER_PC(A6)  ; SAVE TO USER PC
00F0142C  6002                    2667             BRA.S JUMP1
00F0142E                          2668  
00F0142E  4E75                    2669  ABORT      RTS                 ; GET BACK MONITOR
00F01430                          2670  
00F01430  2C79 000000C0           2671  JUMP1      MOVEA.L RAMBASE.L,A6     ; POINTED TO START MONITOR RAM
00F01436                          2672  
00F01436  206E 00E6               2673             MOVEA.L USER_USP(A6),A0
00F0143A  4E60                    2674             MOVE.L  A0,USP           ; WRITE TO REAL USER STACK (A7)
00F0143C                          2675  
00F0143C  2F2E 00F0               2676             MOVE.L  USER_PC(A6),-(SP)     ; PUSH PC
00F01440                          2677  
00F01440  08AE 0005 00EA          2678             BCLR.B   #5,USER_SR(A6) ; SET USER MODE     
00F01446                          2679  
00F01446  3F2E 00EA               2680             MOVE.W  USER_SR(A6),-(SP)
00F0144A  4CEE 7FFF 00AA          2681             MOVEM.L USER_DATA(A6),D0-D7/A0-A6
00F01450  4E73                    2682             RTE                     ; JUMP TO USER PROGRAM
00F01452                          2683  
00F01452                          2684  
00F01452                          2685  ; TRACE JUMP
00F01452                          2686  ; SET TRACE BIT IN SAVED STATUS REGISTER
00F01452                          2687  
00F01452  47F9 00F01A6D           2688  TRACE_JUMP LEA.L TRACE_MSG.L,A3
00F01458  6100 F916               2689             BSR PSTR
00F0145C  6100 F920               2690             BSR NEW_LINE
00F01460                          2691  
00F01460  2C79 000000C0           2692             MOVEA.L RAMBASE.L,A6
00F01466  286E 00F0               2693             MOVEA.L USER_PC(A6),A4
00F0146A  4CD4 0007               2694             MOVEM.L (A4),D0-D2
00F0146E  2A79 000000C0           2695             MOVEA.L RAMBASE.L,A5
00F01474  DBFC 00000026           2696             ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00F0147A                          2697  
00F0147A  4EB9 00F007B8           2698             JSR  DCODE68K.L
00F01480                          2699  
00F01480  6100 F8FC               2700             BSR NEW_LINE
00F01484  6100 012C               2701             BSR PRINT_LINE
00F01488                          2702  
00F01488  2C79 000000C0           2703             MOVEA.L RAMBASE.L,A6
00F0148E                          2704  
00F0148E  08EE 0007 00EA          2705             BSET.B #TRACE_BIT,USER_SR(A6)  ; SET TRACE BIT
00F01494  609A                    2706             BRA JUMP1                    ; BORROW JUMP ROUTINE
00F01496                          2707  
00F01496                          2708  ; CLEAR MONITOR RAM
00F01496                          2709  
00F01496  2C79 000000C0           2710  CLEAR_MON_RAM MOVEA.L RAMBASE.L,A6
00F0149C  3E3C 0200               2711                MOVE.W  #512,D7
00F014A0                          2712  
00F014A0  3CFC 0000               2713  CLEAR1        MOVE.W #0000,(A6)+
00F014A4  51CF FFFA               2714                DBRA D7,CLEAR1
00F014A8  4E75                    2715                RTS
00F014AA                          2716  
00F014AA                          2717  
00F014AA                          2718  
00F014AA                          2719  ; MODIFY USER REGISTERS
00F014AA                          2720  
00F014AA  2C79 000000C0           2721  MODIFY_REG    MOVEA.L RAMBASE.L,A6
00F014B0  6100 F8AA               2722                BSR CIN
00F014B4  C03C 00DF               2723                AND.B #%11011111,D0
00F014B8  0C00 0050               2724                CMPI.B #'P',D0
00F014BC  661A                    2725                BNE.S DATA_REG1
00F014BE                          2726  
00F014BE  103C 0043               2727                MOVE.B #'C',D0
00F014C2  6100 F874               2728                BSR COUT
00F014C6  103C 003D               2729                MOVE.B #'=',D0
00F014CA  6100 F86C               2730                BSR COUT
00F014CE  6100 FB90               2731                BSR GET_ADDRESS
00F014D2                          2732  
00F014D2  2D46 00F0               2733                MOVE.L D6,USER_PC(A6)
00F014D6  4E75                    2734                RTS
00F014D8                          2735  
00F014D8  0C00 0044               2736  DATA_REG1     CMPI.B #'D',D0
00F014DC  6622                    2737                BNE.S ADDRESS_REG2
00F014DE  6100 F87C               2738                BSR CIN
00F014E2  0400 0030               2739                SUB.B #'0',D0
00F014E6                          2740  
00F014E6  4287                    2741                CLR.L D7
00F014E8  1E00                    2742                MOVE.B D0,D7
00F014EA                          2743  
00F014EA  103C 003D               2744                MOVE.B #'=',D0
00F014EE  6100 F848               2745                BSR COUT
00F014F2                          2746  
00F014F2  6100 FB4A               2747                BSR GET_32BIT
00F014F6                          2748  
00F014F6  E50F                    2749                LSL.B #2,D7        ; D7*4
00F014F8  DCC7                    2750                ADDA.W D7,A6
00F014FA  2D46 00AA               2751                MOVE.L D6,USER_DATA(A6)  ; SAVE TO USER DATA REGISTERS
00F014FE                          2752  
00F014FE  4E75                    2753                RTS
00F01500                          2754                
00F01500  0C00 0041               2755  ADDRESS_REG2  CMPI.B #'A',D0
00F01504  6620                    2756                BNE.S WHAT3
00F01506  6100 F854               2757                BSR CIN
00F0150A  0400 0030               2758                SUB.B #'0',D0
00F0150E                          2759  
00F0150E  4287                    2760                CLR.L D7
00F01510  1E00                    2761                MOVE.B D0,D7
00F01512                          2762  
00F01512  103C 003D               2763                MOVE.B #'=',D0
00F01516  6100 F820               2764                BSR COUT
00F0151A                          2765  
00F0151A  6100 FB22               2766                BSR GET_32BIT
00F0151E                          2767  
00F0151E  E50F                    2768                LSL.B #2,D7        ; D7*4
00F01520  DCC7                    2769                ADDA.W D7,A6
00F01522  2D46 00CA               2770                MOVE.L D6,USER_ADDR(A6)  ; SAVE TO USER ADDRESS REGISTERS
00F01526                          2771  
00F01526  4E75                    2772  WHAT3         RTS
00F01528                          2773  
00F01528                          2774  ;=======================================================================
00F01528                          2775  ; TRAP #N SERVICES
00F01528                          2776  ;
00F01528                          2777  
00F01528  2F08                    2778  SERVICE_TRAP0   MOVE.L A0,-(SP)      ; SAVE A0 BEFOREHAND
00F0152A  2079 000000C0           2779                  MOVEA.L RAMBASE.L,A0  ; USE A0 AS THE POINTER
00F01530  41E8 00AA               2780                  LEA.L USER_DATA(A0),A0
00F01534  48D0 7FFF               2781                  MOVEM.L D0-D7/A0-A6,(A0)
00F01538  215F 0020               2782                  MOVE.L (SP)+,32(A0)  ; RESTORE A0
00F0153C                          2783  
00F0153C  2079 000000C0           2784                  MOVEA.L RAMBASE.L,A0
00F01542  315F 00EA               2785                  MOVE.W (SP)+,USER_SR(A0)
00F01546  08A8 0007 00EA          2786                  BCLR.B #TRACE_BIT,USER_SR(A0) ; TURN TRACE BIT OFF
00F0154C  215F 00F0               2787                  MOVE.L (SP)+,USER_PC(A0)
00F01550                          2788  
00F01550  4E6A                    2789                  MOVE.L USP,A2
00F01552  214A 00E6               2790                  MOVE.L A2,USER_USP(A0)
00F01556                          2791  
00F01556  6100 FD5A               2792                  BSR DISPLAY_REG1
00F0155A                          2793  
00F0155A  2E7C 0000E000           2794                  MOVE.L #SUPER_STACK,SP  ; REINIT SYSTEM STACK
00F01560                          2795  ;;                MOVE.W #INT_ON,SR   ; REENTER SUPERVISOR MODE    ; comment by @kanpapa 2023/9/9
00F01560                          2796  
00F01560  4EF9 00F00C04           2797                  JMP LOOP.L        ; GET BACK MONITOR
00F01566                          2798  
00F01566                          2799  
00F01566                          2800  ; DISASSEMBLE THE MACHNIE CODE INTO MNEMONIC
00F01566                          2801  
00F01566  47F9 00F019A3           2802  DISASSEMBLE     LEA.L DIS.L,A3
00F0156C  6100 F802               2803                  BSR PSTR
00F01570                          2804  
00F01570                          2805             ;   LEA.L $102000.L,A4
00F01570                          2806  
00F01570  2C79 000000C0           2807                 MOVEA.L RAMBASE.L,A6
00F01576                          2808  
00F01576  3E3C 0013               2809                 MOVE.W #19,D7       ; 20 LINES DISASSEMBLE
00F0157A                          2810  
00F0157A  286E 00A6               2811                 MOVEA.L POINTER_NOW(A6),A4
00F0157E                          2812  
00F0157E  4CD4 0007               2813  DIS1           MOVEM.L (A4),D0-D2
00F01582  2A79 000000C0           2814                 MOVEA.L RAMBASE.L,A5
00F01588  DBFC 00000026           2815                 ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00F0158E                          2816  
00F0158E  48E7 0102               2817                 MOVEM.L A6/D7,-(SP)
00F01592                          2818  
00F01592  4EB9 00F007B8           2819                 JSR  DCODE68K.L
00F01598                          2820  
00F01598  6100 F7E4               2821                 BSR NEW_LINE
00F0159C  6100 0014               2822                 BSR PRINT_LINE
00F015A0                          2823  
00F015A0  4CDF 4080               2824                 MOVEM.L (SP)+,D7/A6
00F015A4                          2825  
00F015A4  51CF FFD8               2826                 DBRA D7,DIS1
00F015A8                          2827  
00F015A8  2D4C 00A6               2828                 MOVE.L A4,POINTER_NOW(A6) ; NEXT BLOCK
00F015AC  6100 F7D0               2829                 BSR NEW_LINE
00F015B0  4E75                    2830                 RTS
00F015B2                          2831  
00F015B2  101D                    2832  PRINT_LINE     MOVE.B (A5)+,D0
00F015B4  6100 F782               2833                 BSR COUT
00F015B8  BDCD                    2834                 CMPA.L A5,A6
00F015BA  66F6                    2835                 BNE.S PRINT_LINE
00F015BC  4E75                    2836                 RTS
00F015BE                          2837  
00F015BE                          2838  
00F015BE                          2839  ; UPLOAD BINARY IMAGE FROM MEMORY
00F015BE                          2840  ; SEND IT TO TERMINAL AS HEX CODE IN LONG WORD FORMAT
00F015BE                          2841  ; USE FOR DISASSEMBLER HEX CODE PREPARATION
00F015BE                          2842  
00F015BE  47F9 00F019C9           2843  UPLOAD        LEA.L UPLOAD1.L,A3
00F015C4  6100 F7AA               2844                BSR PSTR
00F015C8  6100 F792               2845                BSR CIN
00F015CC                          2846  
00F015CC  4BF9 00100400           2847                LEA.L $100400.L,A5    ; START
00F015D2  4DF9 00102000           2848                LEA.L $102000.L,A6    ; STOP
00F015D8                          2849  
00F015D8  6100 F7A4               2850  UPLOAD3       BSR NEW_LINE
00F015DC  47F9 00F019F3           2851                LEA.L STRING1.L,A3
00F015E2  6100 F78C               2852                BSR PSTR
00F015E6                          2853  
00F015E6  3E3C 0007               2854                MOVE.W #7,D7
00F015EA                          2855  
00F015EA  103C 0024               2856  UPLOAD2       MOVE.B #'$',D0
00F015EE  6100 F748               2857                BSR COUT
00F015F2  201D                    2858                MOVE.L (A5)+,D0
00F015F4  6100 F96A               2859                BSR OUT8X
00F015F8  103C 002C               2860                MOVE.B #',',D0
00F015FC  6100 F73A               2861                BSR COUT
00F01600  51CF FFE8               2862                DBRA D7,UPLOAD2
00F01604                          2863  
00F01604  BDCD                    2864                CMPA.L A5,A6
00F01606  6ED0                    2865                BGT  UPLOAD3
00F01608                          2866  
00F01608  4E75                    2867                RTS
00F0160A                          2868  
00F0160A                          2869  ; ABOUT zBUG V1.0
00F0160A                          2870  
00F0160A  47F9 00F019FA           2871  ABOUT         LEA.L ABOUTZBUG.L,A3
00F01610  6100 F75E               2872                BSR PSTR
00F01614  4E75                    2873                RTS
00F01616                          2874  
00F01616                          2875  ; VIEW USER STACK
00F01616                          2876  
00F01616  47F9 00F01A7E           2877  VIEW_USP      LEA.L VIEW.L,A3
00F0161C  6100 F752               2878                BSR PSTR
00F01620                          2879  
00F01620  6100 F75C               2880                BSR NEW_LINE
00F01624                          2881  
00F01624  227C 0000FFF4           2882                MOVEA.L #SUPER_STACK+USER_STACK,A1 ; TOP OF USER STACK
00F0162A                          2883  
00F0162A  41E9 FFE0               2884                LEA.L -32(A1),A0    ; EACH COMPOSED OF TWO BYTES
00F0162E                          2885  
00F0162E  3E3C 0010               2886                MOVE.W #16,D7
00F01632  2C79 000000C0           2887                MOVEA.L RAMBASE.L,A6
00F01638                          2888  
00F01638                          2889  
00F01638  2008                    2890  VIEW1         MOVE.L A0,D0
00F0163A                          2891  
00F0163A  2F00                    2892                MOVE.L D0,-(SP)
00F0163C                          2893  
00F0163C  B1EE 00E6               2894                CMPA.L USER_USP(A6),A0
00F01640  660C                    2895                BNE.S NOT_TOS
00F01642                          2896  
00F01642  47F9 00F01AED           2897                LEA.L TOP_OF_STACK.L,A3
00F01648  6100 F726               2898                BSR PSTR
00F0164C  600A                    2899                BRA.S SKIP_PRINT_BLANK
00F0164E                          2900  
00F0164E  47F9 00F01AF5           2901  NOT_TOS       LEA.L BLANK_BLOCK.L,A3
00F01654  6100 F71A               2902                BSR PSTR
00F01658                          2903  
00F01658                          2904  SKIP_PRINT_BLANK
00F01658                          2905  
00F01658  201F                    2906                MOVE.L (SP)+,D0
00F0165A  6100 F8FC               2907                BSR OUT6X
00F0165E  6100 F730               2908                BSR SPACE
00F01662                          2909  
00F01662  103C 005B               2910                MOVE.B #'[',D0
00F01666  6100 F6D0               2911                BSR COUT
00F0166A                          2912  
00F0166A  3018                    2913                MOVE.W (A0)+,D0
00F0166C  6100 F8E2               2914                BSR OUT4X
00F01670                          2915  
00F01670  103C 005D               2916                MOVE.B #']',D0
00F01674  6100 F6C2               2917                BSR COUT
00F01678                          2918  
00F01678  6100 F704               2919                BSR NEW_LINE
00F0167C  51CF FFBA               2920                DBRA D7,VIEW1
00F01680                          2921  
00F01680  4E75                    2922                RTS
00F01682                          2923  
00F01682                          2924  
00F01682                          2925  ; LOAD SP WITH [RAM] AND PC [RAM+4]
00F01682                          2926  
00F01682  2E79 00000000           2927  BOOT_RAM      MOVEA.L RAM.L,SP
00F01688  2079 00000004           2928                MOVEA.L 4+RAM.L,A0
00F0168E  4ED0                    2929                JMP     (A0)
00F01690                          2930  
00F01690                          2931  ; SERVICE BUS ERROR
00F01690  2679 00F01AA9           2932  SERVICE_BUSERROR MOVEA.L BUSERROR_MSG.L,A3
00F01696  6000 001C               2933                  BRA SERVICE_MSG
00F0169A                          2934  
00F0169A                          2935  ; SERVICE ADDRESS ERROR
00F0169A  2679 00F01AB6           2936  SERVICE_ADDRESSERR MOVEA.L ADDRESSERR_MSG.L,A3
00F016A0  6000 0012               2937                  BRA SERVICE_MSG
00F016A4                          2938  
00F016A4                          2939  ; SERVICE ILLEGAL INTSRUCTION
00F016A4  2679 00F01AC7           2940  SERVICE_ILLEGAL MOVEA.L ILLEGAL_MSG.L,A3
00F016AA  6000 0008               2941                  BRA SERVICE_MSG
00F016AE                          2942  
00F016AE                          2943  ; SERVICE ZERO DIVIDE
00F016AE  2679 00F01ADE           2944  SERVICE_ZERODIV MOVEA.L ZERODIV_MSG.L,A3
00F016B4  6100 F6BA               2945  SERVICE_MSG     BSR PSTR
00F016B8  4E40                    2946                  TRAP #0
00F016BA                          2947  
00F016BA                          2948  ; vector table initrize
00F016BA  41FA 0026               2949  VECINIT   LEA   VECTABLE(pc),a0
00F016BE  327C 0008               2950            MOVEA.W   #$0008,a1
00F016C2  700A                    2951            MOVEQ     #10,D0
00F016C4  22D8                    2952  VECINIT1  MOVE.L    (a0)+,(a1)+
00F016C6  5300                    2953            SUBQ.B    #1,D0
00F016C8  66FA                    2954            BNE       VECINIT1
00F016CA  327C 0060               2955            MOVEA.W   #$60,A1
00F016CE  7018                    2956            MOVEQ     #24,D0
00F016D0  22D8                    2957  VECINIT2  MOVE.L    (a0)+,(a1)+
00F016D2  5300                    2958            SUBQ.B    #1,D0
00F016D4  66FA                    2959            BNE       VECINIT2
00F016D6  327C 00C0               2960            MOVEA.W   #$C0,A1
00F016DA  22BC 0000E000           2961            MOVE.L    #RAMBASE_INIT,(a1)
00F016E0  4E75                    2962            RTS
00F016E2                          2963  
00F016E2                          2964  ;----------------- M68000 EXCEPTION VECTOR TABLE -----------------------------
00F016E2= 00F01690                2965  VECTABLE  DC.L  SERVICE_BUSERROR     ; 2 Bus error
00F016E6= 00F0169A                2966            DC.L  SERVICE_ADDRESSERR   ; 3 Address error
00F016EA= 00F016A4                2967            DC.L  SERVICE_ILLEGAL      ; 4 Illegal instruction
00F016EE= 00F016AE                2968            DC.L  SERVICE_ZERODIV      ; 5 Zero divide
00F016F2= 00F01528                2969            DC.L  SERVICE_TRAP0        ; 6 CHK instruction
00F016F6= 00F01528                2970            DC.L  SERVICE_TRAP0        ; 7 TRAPV instruction
00F016FA= 00F01528                2971            DC.L  SERVICE_TRAP0        ; 8 Privilege violation
00F016FE= 00F01528                2972            DC.L  SERVICE_TRAP0        ; 9 Trace
00F01702= 00F01528                2973            DC.L  SERVICE_TRAP0    ; 10 Line 1010 emulator
00F01706= 00F01528                2974            DC.L  SERVICE_TRAP0    ; 11 Line 1111 emulator
00F0170A                          2975  
00F0170A= 00F01528                2976            DC.L  SERVICE_TRAP0    ; 24 Spurious Interupt
00F0170E= 00F01528                2977            DC.L  SERVICE_TRAP0    ; 25 LEVEL 1 Interupt autovector
00F01712= 00F01528                2978            DC.L  SERVICE_TRAP0    ; 26 LEVEL 2 Interupt autovector
00F01716= 00F01528                2979            DC.L  SERVICE_TRAP0    ; 27 LEVEL 3 Interupt autovector
00F0171A= 00F01528                2980            DC.L  SERVICE_TRAP0    ; 28 LEVEL 4 Interupt autovector
00F0171E= 00F01528                2981            DC.L  SERVICE_TRAP0    ; 29 LEVEL 5 Interupt autovector
00F01722= 00F01528                2982            DC.L  SERVICE_TRAP0    ; 30 LEVEL 6 Interupt autovector
00F01726= 00F01528                2983            DC.L  SERVICE_TRAP0    ; 31 LEVEL 7 Interupt autovector
00F0172A= 00F01528                2984            DC.L  SERVICE_TRAP0    ; 32 TRAP #0
00F0172E= 00F01528                2985            DC.L  SERVICE_TRAP0    ; 33 TRAP #1
00F01732= 00F01528                2986            DC.L  SERVICE_TRAP0    ; 34 TRAP #2
00F01736= 00F01528                2987            DC.L  SERVICE_TRAP0    ; 35 TRAP #3
00F0173A= 00F01528                2988            DC.L  SERVICE_TRAP0    ; 36 TRAP #4
00F0173E= 00F01528                2989            DC.L  SERVICE_TRAP0    ; 37 TRAP #5
00F01742= 00F01528                2990            DC.L  SERVICE_TRAP0    ; 38 TRAP #6
00F01746= 00F01528                2991            DC.L  SERVICE_TRAP0    ; 39 TRAP #7
00F0174A= 00F01528                2992            DC.L  SERVICE_TRAP0    ; 40 TRAP #8
00F0174E= 00F01528                2993            DC.L  SERVICE_TRAP0    ; 41 TRAP #9
00F01752= 00F01528                2994            DC.L  SERVICE_TRAP0    ; 42 TRAP #10
00F01756= 00F01528                2995            DC.L  SERVICE_TRAP0    ; 43 TRAP #11
00F0175A= 00F01528                2996            DC.L  SERVICE_TRAP0    ; 44 TRAP #12
00F0175E= 00F01528                2997            DC.L  SERVICE_TRAP0    ; 45 TRAP #13
00F01762= 00F01528                2998            DC.L  SERVICE_TRAP0    ; 46 TRAP #14
00F01766= 00F01528                2999            DC.L  SERVICE_TRAP0    ; 47 TRAP #15
00F0176A                          3000  ;----------------------- STRING CONSTANT -------------------------------------
00F0176A                          3001  
00F0176A= 0D 0A 7A 42 75 67 ...   3002  TITLE  DC.B 13,10,'zBug V1.0.1 for DVME CPU2 2023/09/09',13,10,0
00F01793= 0D 0A 7A 42 75 67 ...   3003  TITLE1 DC.B 13,10,'zBug V1.0.1 for DVME CPU2 2023/09/09 (press ? for help)',13,10,0
00F017CF                          3004  
00F017CF= 3E 00                   3005  PROMPT DC.B '>',0
00F017D1                          3006  
00F017D1= 6C 65 61 72 20 6D ...   3007  CLEAR  DC.B 'lear memory with 0x0000',0
00F017E9= 69 6C 6C 20 6D 65 ...   3008  FILL   DC.B 'ill memory with 0xFFFF',0 
00F01800= 0D 0A 0A 73 74 61 ...   3009  START  DC.B 13,10,10,'start address=',0
00F01812= 0D 0A 73 74 6F 70 ...   3010  STOP   DC.B 13,10,'stop  address=',0
00F01823= 0D 0A 64 6F 6E 65 ...   3011  DONE   DC.B 13,10,'done...',0
00F0182D                          3012  
00F0182D= 64 69 74 20 6D 65 ...   3013  EDIT1  DC.B 'dit memory (quit: SPACE BAR, next address: ENTER)',0
00F0185F= 0D 0A 0A 41 64 64 ...   3014  EDIT   DC.B 13,10,10,'Address=',0
00F0186B= 20 20 72 6F 6D 00       3015  ROM    DC.B '  rom',0
00F01871                          3016  
00F01871= 65 77 20 32 34 2D ...   3017  NEW    DC.B 'ew 24-bit pointer',0
00F01883                          3018  
00F01883= 75 69 63 6B 20 68 ...   3019  QUICK  DC.B 'uick home, get back to start of RAM!',13,10,0
00F018AA= 65 78 20 64 75 6D ...   3020  HEX    DC.B 'ex dump memory',13,10,10
00F018BB= 41 44 44 52 45 53 ...   3021         DC.B 'ADDRESS  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
00F018F3                          3022  
00F018F3= 6F 61 64 20 4D 6F ...   3023  LOAD   DC.B 'oad Motorola s-record (accept s1,s2 and s8) quit: ESC',13,10,0
00F0192B                          3024  
00F0192B= 20 62 79 74 65 73 ...   3025  NUMBER DC.B ' bytes loaded, ',0
00F0193B= 20 72 65 63 6F 72 ...   3026  ERROR  DC.B ' records checksum error',13,10,0
00F01955                          3027  
00F01955= 75 6D 70 20 74 6F ...   3028  JUMP_TO DC.B 'ump to user program ',0 
00F0196A                          3029  
00F0196A= 20 54 52 41 50 20 ...   3030  TRAP_0 DC.B ' TRAP 0 !',0
00F01974                          3031  
00F01974= 65 67 69 73 74 65 ...   3032  REGISTER_DISP DC.B 'egister(user) display (A7= user stack pointer)',0
00F019A3                          3033  
00F019A3= 69 73 61 73 73 65 ...   3034  DIS    DC.B 'isassemble machine code to mnemonic',13,10,0
00F019C9                          3035  
00F019C9= 70 6C 6F 61 64 20 ...   3036  UPLOAD1 DC.B 'pload binary image, hit any key to begin ',0
00F019F3= 20 20 44 46 4C 20 00    3037  STRING1 DC.B '  DFL ',0
00F019FA                          3038  
00F019FA= 62 6F 75 74 20 7A ...   3039  ABOUTZBUG DC.B 'bout zBuG V1.0',13,10,10
00F01A0B= 7A 42 75 67 20 56 ...   3040            DC.B 'zBug V1.0 Copyright (C) 2002 W.SIRICHOTE',13,10,10
00F01A36= 7A 42 75 67 20 56 ...   3041            DC.B 'zBug V1.0.1 DVME CPU2 Version by @kanpapa 2023/09/09',13,10,0
00F01A6D                          3042  
00F01A6D= 72 61 63 65 20 69 ...   3043  TRACE_MSG DC.B 'race instruction',0
00F01A7E                          3044  
00F01A7E= 74 61 63 6B 20 28 ...   3045  VIEW      DC.B 'tack (user)s content, shows 16-WORD deep',13,10,0
00F01AA9                          3046  
00F01AA9= 62 75 73 20 65 72 ...   3047  BUSERROR_MSG DC.B 'bus error...',0
00F01AB6= 61 64 64 72 65 73 ...   3048  ADDRESSERR_MSG DC.B 'address error...',0
00F01AC7= 69 6C 6C 65 67 61 ...   3049  ILLEGAL_MSG DC.B 'illegal instruction...',0
00F01ADE= 7A 65 72 6F 20 64 ...   3050  ZERODIV_MSG DC.B 'zero divide...',0
00F01AED                          3051  
00F01AED= 54 4F 53 2D 2D 2D ...   3052  TOP_OF_STACK DC.B 'TOS--->',0
00F01AF5= 20 20 20 20 20 20 ...   3053  BLANK_BLOCK  DC.B '       ',0
00F01AFD                          3054  
00F01AFD= 50 43 3D 00             3055  PC_REG DC.B 'PC=',0
00F01B01= 53 52 3D 00             3056  SR_REG DC.B 'SR=',0
00F01B05                          3057  
00F01B05= 43 3D 00                3058  CARRY_FLAG DC.B 'C=',0
00F01B08= 56 3D 00                3059  V_FLAG     DC.B 'V=',0
00F01B0B= 5A 3D 00                3060  Z_FLAG     DC.B 'Z=',0
00F01B0E= 4E 3D 00                3061  N_FLAG     DC.B 'N=',0
00F01B11= 58 3D 00                3062  X_FLAG     DC.B 'X=',0
00F01B14                          3063  
00F01B14                          3064  
00F01B14= 20 6D 6F 6E 69 74 ...   3065  HELP_LIST DC.B ' monitor commands',13,10,10
00F01B28                          3066  
00F01B28= 41 20 20 20 41 62 ...   3067         DC.B 'A   About zBug V1.0',13,10
00F01B3D= 42 20 20 20 42 6F ...   3068         DC.B 'B   Boot from RAM [000000] -> SP [000004] ->PC',13,10
00F01B6D= 43 20 20 20 43 6C ...   3069         DC.B 'C   Clear memory with 0x0000',13,10
00F01B8B= 44 20 20 20 44 69 ...   3070         DC.B 'D   Disassemble machine code to mnemonic',13,10
00F01BB5= 45 20 20 20 45 64 ...   3071         DC.B 'E   Edit memory',13,10
00F01BC6= 46 20 20 20 46 69 ...   3072         DC.B 'F   Fill memory with 0xFFFF',13,10
00F01BE3= 48 20 20 20 48 65 ...   3073         DC.B 'H   Hex dump memory',13,10
00F01BF8= 4A 20 20 20 4A 75 ...   3074         DC.B 'J   Jump to address',13,10
00F01C0D= 4C 20 20 20 4C 6F ...   3075         DC.B 'L   Load Motorola s-record',13,10
00F01C29= 4E 20 20 20 4E 65 ...   3076         DC.B 'N   New 24-bit pointer',13,10
00F01C41= 52 20 20 20 52 65 ...   3077         DC.B 'R   Register(user) display',13,10
00F01C5D= 53 20 20 20 53 74 ...   3078         DC.B 'S   Stack(user)s content',13,10
00F01C77= 54 20 20 20 54 72 ...   3079         DC.B 'T   Trace instruction',13,10
00F01C8E= 2E 20 20 20 4D 6F ...   3080         DC.B '.   Modify user registers, exp .PC .D0 .A0',13,10
00F01CBA= 3F 20 20 20 4D 6F ...   3081         DC.B '?   Monitor commands list',13,10,0
00F01CD6                          3082  
00F01CD6                          3083  
00F01CD6                          3084  ; MONITOR'S RAM AREA
00F01CD6                          3085  ; MUST BE EVEN ADDRESS FOE RAMBASE
00F01CD6                          3086  ; THE A6 WAS LOADED WITH RAMBASE AS THE BASE MEMORY POINTER
00F01CD6                          3087  ; THE FOLLOWING VARIABLE CAN BE ACCEESED BY USING INDIRECT WITH DISPLACMENT
00F01CD6                          3088  
00F01CD6                          3089  ;RAMBASE     DC.L   $130000     ; RAM BASE ADDRESS
00F01CD6                          3090  
00F01CD6                          3091  ; DCODE68K
00F01CD6  =FFFFFFF0               3092  DDATA    EQU     $FFFFFFF0       ; DS.L 3
00F01CD6  =FFFFFFFC               3093  HISPC    EQU     $FFFFFFFC       ; DS.L 1
00F01CD6                          3094  
00F01CD6                          3095  ; OFFSET(DISPLACEMENT) DEFINITION
00F01CD6                          3096  
00F01CD6  =00000000               3097  OFFSET      EQU  0               ; FOR DISASSEMBLER USAGE
00F01CD6  =00000020               3098  DEBUG       EQU  OFFSET+32
00F01CD6  =00000024               3099  FLAG        EQU  DEBUG+4         ; 16-BIT MONITOR FLAG
00F01CD6  =00000026               3100  BUFFER      EQU  FLAG+2
00F01CD6  =000000A6               3101  POINTER_NOW EQU  BUFFER+128
00F01CD6  =000000AA               3102  USER_DATA   EQU  POINTER_NOW+4   ; USER D0-D7 AND A0-A7
00F01CD6  =000000CA               3103  USER_ADDR   EQU  USER_DATA+32    ; USER ADDRESS REGISTERS, A0-A7
00F01CD6  =000000E6               3104  USER_USP    EQU  USER_ADDR+28    ; A7 = USP
00F01CD6  =000000EA               3105  USER_SR     EQU  USER_USP+4      ; 
00F01CD6  =000000EC               3106  USER_SS     EQU  USER_SR+2
00F01CD6  =000000F0               3107  USER_PC     EQU  USER_SS+4
00F01CD6                          3108  
00F01CD6  =000000F4               3109  STACK_AREA  EQU  USER_PC+4           ; 32kB USER STACK -> 2kB
00F01CD6                          3110  ;USER_STACK  EQU  STACK_AREA+$7000    ; TOP OF STACK
00F01CD6  =00001FF4               3111  USER_STACK  EQU  STACK_AREA+$1F00    ; TOP OF STACK
00F01CD6                          3112  
00F01CD6                          3113  
00F01CD6                          3114  
00F01CD6                          3115         END  MAIN

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABORT               F0142E
ABOUT               F0160A
ABOUTZBUG           F019FA
ACIA2C              FE8005
ACIA2D              FE8007
ACIAC               FE8001
ACIAD               FE8003
ADDRESSERR_MSG      F01AB6
ADDRESS_ERROR       C
ADDRESS_REG2        F01500
BIT_ESC             0
BLANK               20
BLANK_BLOCK         F01AF5
BOOT_RAM            F01682
BRTBL               F00460
BS                  8
BUFFER              26
BUFSIZE             50
BUSERROR_MSG        F01AA9
BUS_ERROR           8
C68                 3D
CARRY_FLAG          F01B05
CHECKSUM_ERROR      F00F1A
CHECK_ESC           F00E3C
CHECK_START         F00E88
CIN                 F00D5C
CINS                F00D4A
CLEAR               F017D1
CLEAR1              F014A0
CLEAR_MEMORY        F010B6
CLEAR_MEMORY1       F010DC
CLEAR_MON_RAM       F01496
COMMON              F00856
COMMON35            F00864
COMMON4             F00854
COUT                F00D38
CR                  D
CS11                F00288
CS12                F001F2
CS13                F00170
CS14                F00100
CS15                F000C0
CS16                F00052
CS17                F0042C
CS18                F003C6
CS19                F004D8
CS20                F00328
DATA_REG1           F014D8
DCODE68K            F007B8
DDATA               FFFFFFF0
DEBUG               20
DEC311              F007CC
DEC404              F007EC
DEC411              F007FC
DEC425              F0080C
DEC510              F0081A
DEC515              F0081E
DEC530              F00826
DEC535              F0082C
DEC537              F00838
DIS                 F019A3
DIS1                F0157E
DISASSEMBLE         F01566
DISPLAY_REG         F012A8
DISPLAY_REG1        F012B2
DONE                F01823
EA000               F00508
EA001               F00514
EA010               F00520
EA011               F00534
EA011RTS            F0054A
EA100               F0054C
EA101               F005EE
EA1105              F005CA
EA1107              F005CE
EA1109              F005E4
EA111               F00604
EA1112              F00622
EA1113              F0063E
EA1113A             F0064E
EA1114              F00670
EA1115              F006DA
EA11153             F00712
EA11155             F0071C
EAF25               F006B8
EAF27               F006BC
EAF35               F006D0
EASY68K_SIM         0
EDIT                F0185F
EDIT1               F0182D
EDIT_MEMORY         F010F0
EDIT_MEMORY2        F0110E
EDIT_MEMORY3        F01178
EDIT_MEMORY4        F01174
EDIT_MEMORY5        F01166
EEA                 F00566
EEA10               F0017A
EOT                 4
ERROR               F0193B
ESC                 1B
FDATA               A
FE10                F00562
FE11                F0064A
FE12                F0080A
FERROR              F0087E
FERROR35            F00888
FERROR39            F00894
FILL                F017E9
FILL_MEMORY         F0107C
FILL_MEMORY1        F010A2
FLAG                24
FOC                 1F
FOP                 27
FORM1               F000F8
FORM10              F001C0
FORM103             F001C6
FORM104             F001CA
FORM105             F001DC
FORM10E3            F001A2
FORM10E4            F001AA
FORM10E6            F001B6
FORM10EX            F00180
FORM11              F001F8
FORM112             F00218
FORM114             F00226
FORM11SL            F00204
FORM12              F00228
FORM125             F00242
FORM12A             F00264
FORM1A              F000FC
FORM3               F00104
FORM4               F00108
FORM5               F0011C
FORM6A              F00120
FORM6D              F00130
FORM7               F00158
FORM8               F00164
FORM815             F00168
FORM9               F00174
FORM91              F004F0
FORM93              F00504
FORM95              F00506
FORMREG5            F00144
FORMREGA            F00140
FORMREGD            F00150
FORMSIZE            F004DC
FREL10              F01258
FREL15              F0126A
FREL20              F01284
FREL25              F01296
FREL30              F012A0
FRELADDR            F0124A
GET_32BIT           F0103E
GET_ADDRESS         F01060
GET_ADDRESS1        F01066
GET_HEX             F00DDE
GET_HEX1            F00DF0
GET_HEX2            F00DFE
GET_HEXS            F00E0E
GET_TYPE            F00E44
HELP                F0117E
HELP_LIST           F01B14
HEX                 F018AA
HEX2DEC             F011B0
HEX_DUMP            F00F6C
HEX_DUMP1           F00F9C
HEX_DUMP2           F00F88
HEX_DUMP3           F00FC4
HEX_DUMP4           F00FBE
HEX_DUMP5           F00FCA
HEX_DUMP6           F00FB6
HISPC               FFFFFFFC
HX2DC               F011C0
HX2DC0              F011C4
HX2DC1              F011CC
HX2DC2              F011E6
HX2DC22             F011E8
HX2DC3              F011F2
HX2DC4              F011FA
HX2DC5              F01202
HX2DC57             F0120A
HX2DC6              F0120E
IBSR                F00380
ICC                 F0037C
ICC35               F00392
ICC55               F003A8
ICCCC               F00448
ICCCC9              F0045E
IDBCC               F00368
ILINK               F000E0
ILLEGAL_INSTRUCTION  10
ILLEGAL_MSG         F01AC7
IM7788              F0001C
IM7799              F00020
IMMED               F00068
IMMED45             F0008E
IMMED55             F000C2
IMMED65             F000C8
IMMED75             F000D8
IMOVE               F000DC
IMOVE19             F004A6
IMOVEA1             F00480
IMOVEMFR            F00008
IMOVEMTR            F00038
IMOVEP              F00300
IMOVEP11            F00310
IMOVEP35            F0032C
IMOVEP66            F0033A
IMOVEQ              F00290
IMVFSR              F002B0
IMVFUSP             F002C0
IMVT44              F002DE
IMVTCCR             F002F0
IMVTSR              F002D0
IMVTUSP             F002E4
INIT_ACIA           F00D1E
INT_OFF             2700
INT_ON              2000
IQUICK              F0028C
IQUICK21            F004BE
IQUICK31            F004D4
IQUICKA             F004AC
ISCC                F0035C
ISETD               F003B8
ISETD12             F003BE
ISETS               F003C8
ISHIFT              F003E4
ISHIFT13            F003F0
ISHIFT23            F00414
ISHIFT33            F00420
ISHIFT44            F00424
ISHIFTM1            F0042E
ISTOP               F00054
JUMP                F013EE
JUMP1               F01430
JUMP_TO             F01955
KI                  F008A8
KIEND               F008AA
LF                  A
LOAD                F018F3
LOCVARSZ            10
LONG                0
LOOP                F00C04
LOOP_BACK           F00F22
MAIN                F00BB4
MCR                 FE8021
MODIFY_REG          F014AA
MOVEMR              F0073C
MOVEMR11            F0074C
MOVEMR33            F00754
MOVEMR44            F00766
MOVEMR77            F00780
MOVEMR79            F00792
MOVEMR88            F00794
MOVEMR94            F007AC
MOVEMS              F00728
MOVEMS2             F00738
MSG111              F0089E
N68                 A9
NEW                 F01871
NEW_LINE            F00D7E
NEW_POINTER         F00FE0
NEXT1               F00C24
NEXT10              F00CA8
NEXT11              F00CB6
NEXT12              F00CC4
NEXT13              F00CD2
NEXT14              F00CE0
NEXT15              F00CEE
NEXT16              F00CFC
NEXT17              F00D08
NEXT18              F00D12
NEXT2               F00C32
NEXT3               F00C40
NEXT4               F00C4E
NEXT5               F00C5C
NEXT6               F00C6A
NEXT7               F00C78
NEXT8               F00C88
NEXT9               F00C98
NOT_TOS             F0164E
NO_CHANGE           F00C16
NO_ERROR            F00F16
NUMBER              F0192B
N_FLAG              F01B0E
OFFSET              0
OPCTBL              F00AB4
OUT1X               F00F2E
OUT1X1              F00F40
OUT2X               F00F48
OUT4X               F00F50
OUT6X               F00F58
OUT8X               F00F60
PC_REG              F01AFD
PNT2HX              F0122E
PNT4HX              F01226
PNT6HX              F01220
PNT8HX              F01218
POINTER_NOW         A6
PRINT_BIT           F013D8
PRINT_D0            F00F68
PRINT_DEBUG         F01016
PRINT_DEC           F0118A
PRINT_LINE          F015B2
PROMPT              F017CF
PSTR                F00D70
PSTR1               F00D7C
PUTHEX              F01236
QUICK               F01883
QUICK_HOME          F01024
RAM                 0
RAMBASE             C0
RAMBASE_INIT        E000
RDRF                0
READ_DATA           F00EF0
READ_S1             F00EAA
READ_S2             F00ECA
READ_S_REC          F00E22
READ_S_REC1         F00E30
REG1                F01362
REG2                F013D2
REG3                F0139E
REG4                F01396
REGISTER_DISP       F01974
ROM                 F0186B
RS                  1E
SAVHEX              F01246
SCHR                F002A8
SCOMMON             F00358
SCROLL              F00D98
SCROLL1             F00D9C
SEND_PROMPT         F00DA4
SEND_TITLE          F00DBE
SERVICE_ADDRESSERR  F0169A
SERVICE_BUSERROR    F01690
SERVICE_ILLEGAL     F016A4
SERVICE_MSG         F016B4
SERVICE_TRAP0       F01528
SERVICE_ZERODIV     F016AE
SKIP_PRINT_BLANK    F01658
SP                  20
SPACE               F00D90
SR_REG              F01B01
STACK_AREA          F4
START               F01800
START_FOUND         F00E9C
STOP                F01812
STRING1             F019F3
SUPERVISOR_BIT      5
SUPER_STACK         E000
TBL                 F008AA
TBLE                F00AB4
TDRE                1
TEST_RAM            F0107A
TITLE               F0176A
TITLE1              F01793
TOP_OF_STACK        F01AED
TO_HEX              F00DC8
TRACE_BIT           7
TRACE_JUMP          F01452
TRACE_MSG           F01A6D
TRAP0               80
TRAP1               84
TRAP10              A8
TRAP11              AC
TRAP12              B0
TRAP13              B4
TRAP14              B8
TRAP15              BC
TRAP2               88
TRAP3               8C
TRAP4               90
TRAP5               94
TRAP6               98
TRAP7               9C
TRAP8               A0
TRAP9               A4
TRAP_0              F0196A
UPLOAD              F015BE
UPLOAD1             F019C9
UPLOAD2             F015EA
UPLOAD3             F015D8
USER_ADDR           CA
USER_DATA           AA
USER_PC             F0
USER_SR             EA
USER_SS             EC
USER_STACK          1FF4
USER_USP            E6
VECINIT             F016BA
VECINIT1            F016C4
VECINIT2            F016D0
VECTABLE            F016E2
VIEW                F01A7E
VIEW1               F01638
VIEW_USP            F01616
V_FLAG              F01B08
WAIT_CR             F00E50
WHAT3               F01526
WRITE_1             F013E4
X                   F00008
X_FLAG              F01B11
ZERODIV_MSG         F01ADE
ZERO_TO_NINE        F00DDA
Z_FLAG              F01B0B
